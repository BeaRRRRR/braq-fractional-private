export const abi = {
  contractName: 'BraqToken',
  abi: [
    {
      inputs: [],
      stateMutability: 'nonpayable',
      type: 'constructor',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'spender',
          type: 'address',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'value',
          type: 'uint256',
        },
      ],
      name: 'Approval',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'previousOwner',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'newOwner',
          type: 'address',
        },
      ],
      name: 'OwnershipTransferred',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'value',
          type: 'uint256',
        },
      ],
      name: 'Transfer',
      type: 'event',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      name: 'admins',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'view',
      type: 'function',
      constant: true,
    },
    {
      inputs: [],
      name: 'allowListSaleSupply',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
      constant: true,
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'spender',
          type: 'address',
        },
      ],
      name: 'allowance',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
      constant: true,
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'spender',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'amount',
          type: 'uint256',
        },
      ],
      name: 'approve',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
      ],
      name: 'balanceOf',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
      constant: true,
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [
        {
          internalType: 'uint8',
          name: '',
          type: 'uint8',
        },
      ],
      stateMutability: 'view',
      type: 'function',
      constant: true,
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'spender',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'subtractedValue',
          type: 'uint256',
        },
      ],
      name: 'decreaseAllowance',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'spender',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'addedValue',
          type: 'uint256',
        },
      ],
      name: 'increaseAllowance',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'name',
      outputs: [
        {
          internalType: 'string',
          name: '',
          type: 'string',
        },
      ],
      stateMutability: 'view',
      type: 'function',
      constant: true,
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
      constant: true,
    },
    {
      inputs: [
        {
          internalType: 'enum BraqToken.Pools',
          name: '',
          type: 'uint8',
        },
      ],
      name: 'pools',
      outputs: [
        {
          internalType: 'address',
          name: 'poolAddress',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
      constant: true,
    },
    {
      inputs: [],
      name: 'publicSaleSupply',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
      constant: true,
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [
        {
          internalType: 'string',
          name: '',
          type: 'string',
        },
      ],
      stateMutability: 'view',
      type: 'function',
      constant: true,
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
      constant: true,
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'amount',
          type: 'uint256',
        },
      ],
      name: 'transfer',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'amount',
          type: 'uint256',
        },
      ],
      name: 'transferFrom',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'newOwner',
          type: 'address',
        },
      ],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: '_to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: '_amount',
          type: 'uint256',
        },
      ],
      name: 'mint',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: '_admin',
          type: 'address',
        },
      ],
      name: 'addAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: '_admin',
          type: 'address',
        },
      ],
      name: 'removeAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'enum BraqToken.Pools',
          name: '_pool',
          type: 'uint8',
        },
        {
          internalType: 'address',
          name: '_address',
          type: 'address',
        },
      ],
      name: 'setPoolAddress',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'enum BraqToken.Pools',
          name: '_pool',
          type: 'uint8',
        },
      ],
      name: 'getPoolAddress',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
      constant: true,
    },
    {
      inputs: [
        {
          internalType: 'enum BraqToken.Pools',
          name: 'pool',
          type: 'uint8',
        },
        {
          internalType: 'uint8',
          name: 'quarter',
          type: 'uint8',
        },
      ],
      name: 'getAmountToFund',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
      constant: true,
    },
    {
      inputs: [
        {
          internalType: 'enum BraqToken.Pools',
          name: '_pool',
          type: 'uint8',
        },
        {
          internalType: 'uint8',
          name: '_quarter',
          type: 'uint8',
        },
      ],
      name: 'fundPool',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'publicSale',
      outputs: [],
      stateMutability: 'payable',
      type: 'function',
      payable: true,
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'amount',
          type: 'uint256',
        },
      ],
      name: 'withdraw',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
  ],
  metadata:
    '{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"_admin","type":"address"}],"name":"addAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"admins","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"allowListSaleSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum BraqToken.Pools","name":"_pool","type":"uint8"},{"internalType":"uint8","name":"_quarter","type":"uint8"}],"name":"fundPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum BraqToken.Pools","name":"pool","type":"uint8"},{"internalType":"uint8","name":"quarter","type":"uint8"}],"name":"getAmountToFund","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum BraqToken.Pools","name":"_pool","type":"uint8"}],"name":"getPoolAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum BraqToken.Pools","name":"","type":"uint8"}],"name":"pools","outputs":[{"internalType":"address","name":"poolAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"publicSale","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"publicSaleSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_admin","type":"address"}],"name":"removeAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum BraqToken.Pools","name":"_pool","type":"uint8"},{"internalType":"address","name":"_address","type":"address"}],"name":"setPoolAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it\'s overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``\'s tokens of at least `amount`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"project:/contracts/BraqToken.sol":"BraqToken"},"evmVersion":"shanghai","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"keccak256":"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218","license":"MIT","urls":["bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32","dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"]},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"keccak256":"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c","license":"MIT","urls":["bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15","dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"]},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305","license":"MIT","urls":["bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5","dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"]},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca","license":"MIT","urls":["bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd","dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"]},"@openzeppelin/contracts/utils/Context.sol":{"keccak256":"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7","license":"MIT","urls":["bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92","dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"]},"project:/contracts/BraqToken.sol":{"keccak256":"0x7a178e2090fd575d137bcd3d54e3165f7f72371d9881b96dba74eddc2dcfa3fb","license":"MIT","urls":["bzz-raw://8b3e862e97c1db8fd0625366d43df14c6b92fd06794e957300d4355b43edd9ca","dweb:/ipfs/QmUdTaZs8bEFjmXz3gWkvcgb41ze654KH6JorwHFnudwT6"]}},"version":1}',
  bytecode:
    '',
  deployedBytecode:
    '0x60806040526004361061019b575f3560e01c806351d63627116100eb578063a457c2d711610089578063cbfd14a211610063578063cbfd14a2146105c7578063dd62ed3e146105f1578063f2fde38b1461062d578063fb87a635146106555761019b565b8063a457c2d714610527578063a9059cbb14610563578063be1e35f91461059f5761019b565b806370a08231116100c557806370a0823114610481578063715018a6146104bd5780638da5cb5b146104d357806395d89b41146104fd5761019b565b806351d63627146103f357806368934c381461041d57806370480275146104595761019b565b8063313ce5671161015857806340c10f191161013257806340c10f191461032b578063429b62e514610353578063494124281461038f5780634d8f0704146103cb5761019b565b8063313ce567146102bb57806333bc1c5c146102e557806339509351146102ef5761019b565b806306fdde031461019f578063095ea7b3146101c95780631785f53c1461020557806318160ddd1461022d57806323b872dd146102575780632e1a7d4d14610293575b5f80fd5b3480156101aa575f80fd5b506101b3610691565b6040516101c09190611d64565b60405180910390f35b3480156101d4575f80fd5b506101ef60048036038101906101ea9190611e15565b610721565b6040516101fc9190611e6d565b60405180910390f35b348015610210575f80fd5b5061022b60048036038101906102269190611e86565b610743565b005b348015610238575f80fd5b50610241610823565b60405161024e9190611ec0565b60405180910390f35b348015610262575f80fd5b5061027d60048036038101906102789190611ed9565b61082c565b60405161028a9190611e6d565b60405180910390f35b34801561029e575f80fd5b506102b960048036038101906102b49190611f29565b61085a565b005b3480156102c6575f80fd5b506102cf61096c565b6040516102dc9190611f6f565b60405180910390f35b6102ed610974565b005b3480156102fa575f80fd5b5061031560048036038101906103109190611e15565b610a55565b6040516103229190611e6d565b60405180910390f35b348015610336575f80fd5b50610351600480360381019061034c9190611e15565b610a8b565b005b34801561035e575f80fd5b5061037960048036038101906103749190611e86565b610b2d565b6040516103869190611e6d565b60405180910390f35b34801561039a575f80fd5b506103b560048036038101906103b09190611fd5565b610b4a565b6040516103c29190611ec0565b60405180910390f35b3480156103d6575f80fd5b506103f160048036038101906103ec9190611fd5565b610ba1565b005b3480156103fe575f80fd5b50610407610f6f565b6040516104149190611ec0565b60405180910390f35b348015610428575f80fd5b50610443600480360381019061043e9190612013565b610f75565b604051610450919061204d565b60405180910390f35b348015610464575f80fd5b5061047f600480360381019061047a9190611e86565b610fd5565b005b34801561048c575f80fd5b506104a760048036038101906104a29190611e86565b611124565b6040516104b49190611ec0565b60405180910390f35b3480156104c8575f80fd5b506104d1611169565b005b3480156104de575f80fd5b506104e761117c565b6040516104f4919061204d565b60405180910390f35b348015610508575f80fd5b506105116111a4565b60405161051e9190611d64565b60405180910390f35b348015610532575f80fd5b5061054d60048036038101906105489190611e15565b611234565b60405161055a9190611e6d565b60405180910390f35b34801561056e575f80fd5b5061058960048036038101906105849190611e15565b6112a9565b6040516105969190611e6d565b60405180910390f35b3480156105aa575f80fd5b506105c560048036038101906105c09190612066565b6112cb565b005b3480156105d2575f80fd5b506105db61143c565b6040516105e89190611ec0565b60405180910390f35b3480156105fc575f80fd5b50610617600480360381019061061291906120a4565b611442565b6040516106249190611ec0565b60405180910390f35b348015610638575f80fd5b50610653600480360381019061064e9190611e86565b6114c4565b005b348015610660575f80fd5b5061067b60048036038101906106769190612013565b611546565b604051610688919061204d565b60405180910390f35b6060600380546106a09061210f565b80601f01602080910402602001604051908101604052809291908181526020018280546106cc9061210f565b80156107175780601f106106ee57610100808354040283529160200191610717565b820191905f5260205f20905b8154815290600101906020018083116106fa57829003601f168201915b5050505050905090565b5f8061072b611580565b9050610738818585611587565b600191505092915050565b60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166107cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c3906121af565b60405180910390fd5b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f600254905090565b5f80610836611580565b905061084385828561174a565b61084e8585856117d5565b60019150509392505050565b60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166108e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108da906121af565b60405180910390fd5b804711610925576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091c90612217565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610968573d5f803e3d5ffd5b5050565b5f6012905090565b5f652d79883d200034610987919061228f565b905060018110156109cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c49061232f565b60405180910390fd5b600754811115610a12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a09906123bd565b60405180910390fd5b610a3a33610a1e61096c565b600a610a2a919061250a565b83610a359190612554565b611a41565b8060075f828254610a4b9190612595565b9250508190555050565b5f80610a5f611580565b9050610a80818585610a718589611442565b610a7b91906125c8565b611587565b600191505092915050565b610a93611b8f565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af890612645565b60405180910390fd5b610b2982610b0d61096c565b600a610b19919061250a565b83610b249190612554565b611a41565b5050565b6008602052805f5260405f205f915054906101000a900460ff1681565b5f60095f846006811115610b6157610b60612663565b5b6006811115610b7357610b72612663565b5b81526020019081526020015f206001015f8360ff1660ff1681526020019081526020015f2054905092915050565b60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610c2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c21906121af565b60405180910390fd5b5f8160ff16118015610c3f575060118160ff16105b610c7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c75906126da565b60405180910390fd5b600a5f8260ff1660ff1681526020019081526020015f2054421015610cd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccf90612742565b60405180910390fd5b5f151560095f846006811115610cf157610cf0612663565b5b6006811115610d0357610d02612663565b5b81526020019081526020015f205f015f8360ff1660ff1681526020019081526020015f205f9054906101000a900460ff16151514610d76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6d906127aa565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660095f846006811115610da357610da2612663565b5b6006811115610db557610db4612663565b5b81526020019081526020015f206002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610e3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3290612812565b60405180910390fd5b610f0760095f846006811115610e5457610e53612663565b5b6006811115610e6657610e65612663565b5b81526020019081526020015f206002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610e9e61096c565b600a610eaa919061250a565b60095f866006811115610ec057610ebf612663565b5b6006811115610ed257610ed1612663565b5b81526020019081526020015f206001015f8560ff1660ff1681526020019081526020015f2054610f029190612554565b611a41565b600160095f846006811115610f1f57610f1e612663565b5b6006811115610f3157610f30612663565b5b81526020019081526020015f205f015f8360ff1660ff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b60065481565b5f60095f836006811115610f8c57610f8b612663565b5b6006811115610f9e57610f9d612663565b5b81526020019081526020015f206002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1661105e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611055906121af565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c390612645565b60405180910390fd5b600160085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b611171611b8f565b61117a5f611c0d565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546111b39061210f565b80601f01602080910402602001604051908101604052809291908181526020018280546111df9061210f565b801561122a5780601f106112015761010080835404028352916020019161122a565b820191905f5260205f20905b81548152906001019060200180831161120d57829003601f168201915b5050505050905090565b5f8061123e611580565b90505f61124b8286611442565b905083811015611290576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611287906128a0565b60405180910390fd5b61129d8286868403611587565b60019250505092915050565b5f806112b3611580565b90506112c08185856117d5565b600191505092915050565b60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16611354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134b906121af565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036113c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b990612645565b60405180910390fd5b8060095f8460068111156113d9576113d8612663565b5b60068111156113eb576113ea612663565b5b81526020019081526020015f206002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60075481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6114cc611b8f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361153a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115319061292e565b60405180910390fd5b61154381611c0d565b50565b6009602052805f5260405f205f91509050806002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ec906129bc565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611663576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165a90612a4a565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161173d9190611ec0565b60405180910390a3505050565b5f6117558484611442565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146117cf57818110156117c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117b890612ab2565b60405180910390fd5b6117ce8484848403611587565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183a90612b40565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a890612bce565b60405180910390fd5b6118bc838383611cd0565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561193f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193690612c5c565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611a289190611ec0565b60405180910390a3611a3b848484611cd5565b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611aaf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aa690612cc4565b60405180910390fd5b611aba5f8383611cd0565b8060025f828254611acb91906125c8565b92505081905550805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508173ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611b789190611ec0565b60405180910390a3611b8b5f8383611cd5565b5050565b611b97611580565b73ffffffffffffffffffffffffffffffffffffffff16611bb561117c565b73ffffffffffffffffffffffffffffffffffffffff1614611c0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c0290612d2c565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611d11578082015181840152602081019050611cf6565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611d3682611cda565b611d408185611ce4565b9350611d50818560208601611cf4565b611d5981611d1c565b840191505092915050565b5f6020820190508181035f830152611d7c8184611d2c565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611db182611d88565b9050919050565b611dc181611da7565b8114611dcb575f80fd5b50565b5f81359050611ddc81611db8565b92915050565b5f819050919050565b611df481611de2565b8114611dfe575f80fd5b50565b5f81359050611e0f81611deb565b92915050565b5f8060408385031215611e2b57611e2a611d84565b5b5f611e3885828601611dce565b9250506020611e4985828601611e01565b9150509250929050565b5f8115159050919050565b611e6781611e53565b82525050565b5f602082019050611e805f830184611e5e565b92915050565b5f60208284031215611e9b57611e9a611d84565b5b5f611ea884828501611dce565b91505092915050565b611eba81611de2565b82525050565b5f602082019050611ed35f830184611eb1565b92915050565b5f805f60608486031215611ef057611eef611d84565b5b5f611efd86828701611dce565b9350506020611f0e86828701611dce565b9250506040611f1f86828701611e01565b9150509250925092565b5f60208284031215611f3e57611f3d611d84565b5b5f611f4b84828501611e01565b91505092915050565b5f60ff82169050919050565b611f6981611f54565b82525050565b5f602082019050611f825f830184611f60565b92915050565b60078110611f94575f80fd5b50565b5f81359050611fa581611f88565b92915050565b611fb481611f54565b8114611fbe575f80fd5b50565b5f81359050611fcf81611fab565b92915050565b5f8060408385031215611feb57611fea611d84565b5b5f611ff885828601611f97565b925050602061200985828601611fc1565b9150509250929050565b5f6020828403121561202857612027611d84565b5b5f61203584828501611f97565b91505092915050565b61204781611da7565b82525050565b5f6020820190506120605f83018461203e565b92915050565b5f806040838503121561207c5761207b611d84565b5b5f61208985828601611f97565b925050602061209a85828601611dce565b9150509250929050565b5f80604083850312156120ba576120b9611d84565b5b5f6120c785828601611dce565b92505060206120d885828601611dce565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061212657607f821691505b602082108103612139576121386120e2565b5b50919050565b7f4f6e6c792061646d696e732063616e2063616c6c20746869732066756e6374695f8201527f6f6e2e0000000000000000000000000000000000000000000000000000000000602082015250565b5f612199602383611ce4565b91506121a48261213f565b604082019050919050565b5f6020820190508181035f8301526121c68161218d565b9050919050565b7f496e73756666696369656e7420636f6e74726163742062616c616e63650000005f82015250565b5f612201601d83611ce4565b915061220c826121cd565b602082019050919050565b5f6020820190508181035f83015261222e816121f5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61229982611de2565b91506122a483611de2565b9250826122b4576122b3612235565b5b828204905092915050565b7f4572726f723a20546f6f20736d616c6c20616d6f756e7420666f7220707572635f8201527f6861736500000000000000000000000000000000000000000000000000000000602082015250565b5f612319602483611ce4565b9150612324826122bf565b604082019050919050565b5f6020820190508181035f8301526123468161230d565b9050919050565b7f4572726f723a20546f6f2062696720616d6f756e7420666f72207075726368615f8201527f7365000000000000000000000000000000000000000000000000000000000000602082015250565b5f6123a7602283611ce4565b91506123b28261234d565b604082019050919050565b5f6020820190508181035f8301526123d48161239b565b9050919050565b5f8160011c9050919050565b5f808291508390505b60018511156124305780860481111561240c5761240b612262565b5b600185161561241b5780820291505b8081029050612429856123db565b94506123f0565b94509492505050565b5f826124485760019050612503565b81612455575f9050612503565b816001811461246b5760028114612475576124a4565b6001915050612503565b60ff84111561248757612486612262565b5b8360020a91508482111561249e5761249d612262565b5b50612503565b5060208310610133831016604e8410600b84101617156124d95782820a9050838111156124d4576124d3612262565b5b612503565b6124e684848460016123e7565b925090508184048111156124fd576124fc612262565b5b81810290505b9392505050565b5f61251482611de2565b915061251f83611f54565b925061254c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612439565b905092915050565b5f61255e82611de2565b915061256983611de2565b925082820261257781611de2565b9150828204841483151761258e5761258d612262565b5b5092915050565b5f61259f82611de2565b91506125aa83611de2565b92508282039050818111156125c2576125c1612262565b5b92915050565b5f6125d282611de2565b91506125dd83611de2565b92508282019050808211156125f5576125f4612262565b5b92915050565b7f4572726f723a20496e7365727420612076616c696420616464726573730000005f82015250565b5f61262f601d83611ce4565b915061263a826125fb565b602082019050919050565b5f6020820190508181035f83015261265c81612623565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b7f57726f6e6720717561727465722076616c7565000000000000000000000000005f82015250565b5f6126c4601383611ce4565b91506126cf82612690565b602082019050919050565b5f6020820190508181035f8301526126f1816126b8565b9050919050565b7f4572726f723a20546f6f206561726c79000000000000000000000000000000005f82015250565b5f61272c601083611ce4565b9150612737826126f8565b602082019050919050565b5f6020820190508181035f83015261275981612720565b9050919050565b7f457272726f723a20416c72656164792066756e646564000000000000000000005f82015250565b5f612794601683611ce4565b915061279f82612760565b602082019050919050565b5f6020820190508181035f8301526127c181612788565b9050919050565b7f457272726f723a20506f6f6c206e6f7420696e697469616c69736564000000005f82015250565b5f6127fc601c83611ce4565b9150612807826127c8565b602082019050919050565b5f6020820190508181035f830152612829816127f0565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f61288a602583611ce4565b915061289582612830565b604082019050919050565b5f6020820190508181035f8301526128b78161287e565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f612918602683611ce4565b9150612923826128be565b604082019050919050565b5f6020820190508181035f8301526129458161290c565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f6129a6602483611ce4565b91506129b18261294c565b604082019050919050565b5f6020820190508181035f8301526129d38161299a565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f612a34602283611ce4565b9150612a3f826129da565b604082019050919050565b5f6020820190508181035f830152612a6181612a28565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f612a9c601d83611ce4565b9150612aa782612a68565b602082019050919050565b5f6020820190508181035f830152612ac981612a90565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f612b2a602583611ce4565b9150612b3582612ad0565b604082019050919050565b5f6020820190508181035f830152612b5781612b1e565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f612bb8602383611ce4565b9150612bc382612b5e565b604082019050919050565b5f6020820190508181035f830152612be581612bac565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f612c46602683611ce4565b9150612c5182612bec565b604082019050919050565b5f6020820190508181035f830152612c7381612c3a565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f2061646472657373005f82015250565b5f612cae601f83611ce4565b9150612cb982612c7a565b602082019050919050565b5f6020820190508181035f830152612cdb81612ca2565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f612d16602083611ce4565b9150612d2182612ce2565b602082019050919050565b5f6020820190508181035f830152612d4381612d0a565b905091905056fea26469706673582212208d2aef995e41c1b5c842e02ac5137a435e2ae1fa964201970798c06035bc1f5e64736f6c63430008140033',
  immutableReferences: {},
  generatedSources: [
    {
      ast: {
        nodeType: 'YulBlock',
        src: '0:5868:10',
        statements: [
          {
            body: {
              nodeType: 'YulBlock',
              src: '66:40:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '77:22:10',
                  value: {
                    arguments: [
                      {
                        name: 'value',
                        nodeType: 'YulIdentifier',
                        src: '93:5:10',
                      },
                    ],
                    functionName: {
                      name: 'mload',
                      nodeType: 'YulIdentifier',
                      src: '87:5:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '87:12:10',
                  },
                  variableNames: [
                    {
                      name: 'length',
                      nodeType: 'YulIdentifier',
                      src: '77:6:10',
                    },
                  ],
                },
              ],
            },
            name: 'array_length_t_string_memory_ptr',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '49:5:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'length',
                nodeType: 'YulTypedName',
                src: '59:6:10',
                type: '',
              },
            ],
            src: '7:99:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '140:152:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '157:1:10',
                        type: '',
                        value: '0',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '160:77:10',
                        type: '',
                        value:
                          '35408467139433450592217433187231851964531694900788300625387963629091585785856',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '150:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '150:88:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '150:88:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '254:1:10',
                        type: '',
                        value: '4',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '257:4:10',
                        type: '',
                        value: '0x41',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '247:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '247:15:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '247:15:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '278:1:10',
                        type: '',
                        value: '0',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '281:4:10',
                        type: '',
                        value: '0x24',
                      },
                    ],
                    functionName: {
                      name: 'revert',
                      nodeType: 'YulIdentifier',
                      src: '271:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '271:15:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '271:15:10',
                },
              ],
            },
            name: 'panic_error_0x41',
            nodeType: 'YulFunctionDefinition',
            src: '112:180:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '326:152:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '343:1:10',
                        type: '',
                        value: '0',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '346:77:10',
                        type: '',
                        value:
                          '35408467139433450592217433187231851964531694900788300625387963629091585785856',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '336:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '336:88:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '336:88:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '440:1:10',
                        type: '',
                        value: '4',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '443:4:10',
                        type: '',
                        value: '0x22',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '433:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '433:15:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '433:15:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '464:1:10',
                        type: '',
                        value: '0',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '467:4:10',
                        type: '',
                        value: '0x24',
                      },
                    ],
                    functionName: {
                      name: 'revert',
                      nodeType: 'YulIdentifier',
                      src: '457:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '457:15:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '457:15:10',
                },
              ],
            },
            name: 'panic_error_0x22',
            nodeType: 'YulFunctionDefinition',
            src: '298:180:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '535:269:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '545:22:10',
                  value: {
                    arguments: [
                      {
                        name: 'data',
                        nodeType: 'YulIdentifier',
                        src: '559:4:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '565:1:10',
                        type: '',
                        value: '2',
                      },
                    ],
                    functionName: {
                      name: 'div',
                      nodeType: 'YulIdentifier',
                      src: '555:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '555:12:10',
                  },
                  variableNames: [
                    {
                      name: 'length',
                      nodeType: 'YulIdentifier',
                      src: '545:6:10',
                    },
                  ],
                },
                {
                  nodeType: 'YulVariableDeclaration',
                  src: '576:38:10',
                  value: {
                    arguments: [
                      {
                        name: 'data',
                        nodeType: 'YulIdentifier',
                        src: '606:4:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '612:1:10',
                        type: '',
                        value: '1',
                      },
                    ],
                    functionName: {
                      name: 'and',
                      nodeType: 'YulIdentifier',
                      src: '602:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '602:12:10',
                  },
                  variables: [
                    {
                      name: 'outOfPlaceEncoding',
                      nodeType: 'YulTypedName',
                      src: '580:18:10',
                      type: '',
                    },
                  ],
                },
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '653:51:10',
                    statements: [
                      {
                        nodeType: 'YulAssignment',
                        src: '667:27:10',
                        value: {
                          arguments: [
                            {
                              name: 'length',
                              nodeType: 'YulIdentifier',
                              src: '681:6:10',
                            },
                            {
                              kind: 'number',
                              nodeType: 'YulLiteral',
                              src: '689:4:10',
                              type: '',
                              value: '0x7f',
                            },
                          ],
                          functionName: {
                            name: 'and',
                            nodeType: 'YulIdentifier',
                            src: '677:3:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '677:17:10',
                        },
                        variableNames: [
                          {
                            name: 'length',
                            nodeType: 'YulIdentifier',
                            src: '667:6:10',
                          },
                        ],
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: 'outOfPlaceEncoding',
                        nodeType: 'YulIdentifier',
                        src: '633:18:10',
                      },
                    ],
                    functionName: {
                      name: 'iszero',
                      nodeType: 'YulIdentifier',
                      src: '626:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '626:26:10',
                  },
                  nodeType: 'YulIf',
                  src: '623:81:10',
                },
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '756:42:10',
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: 'panic_error_0x22',
                            nodeType: 'YulIdentifier',
                            src: '770:16:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '770:18:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '770:18:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: 'outOfPlaceEncoding',
                        nodeType: 'YulIdentifier',
                        src: '720:18:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'length',
                            nodeType: 'YulIdentifier',
                            src: '743:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '751:2:10',
                            type: '',
                            value: '32',
                          },
                        ],
                        functionName: {
                          name: 'lt',
                          nodeType: 'YulIdentifier',
                          src: '740:2:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '740:14:10',
                      },
                    ],
                    functionName: {
                      name: 'eq',
                      nodeType: 'YulIdentifier',
                      src: '717:2:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '717:38:10',
                  },
                  nodeType: 'YulIf',
                  src: '714:84:10',
                },
              ],
            },
            name: 'extract_byte_array_length',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'data',
                nodeType: 'YulTypedName',
                src: '519:4:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'length',
                nodeType: 'YulTypedName',
                src: '528:6:10',
                type: '',
              },
            ],
            src: '484:320:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '864:87:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '874:11:10',
                  value: {
                    name: 'ptr',
                    nodeType: 'YulIdentifier',
                    src: '882:3:10',
                  },
                  variableNames: [
                    {
                      name: 'data',
                      nodeType: 'YulIdentifier',
                      src: '874:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '902:1:10',
                        type: '',
                        value: '0',
                      },
                      {
                        name: 'ptr',
                        nodeType: 'YulIdentifier',
                        src: '905:3:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '895:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '895:14:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '895:14:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '918:26:10',
                  value: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '936:1:10',
                        type: '',
                        value: '0',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '939:4:10',
                        type: '',
                        value: '0x20',
                      },
                    ],
                    functionName: {
                      name: 'keccak256',
                      nodeType: 'YulIdentifier',
                      src: '926:9:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '926:18:10',
                  },
                  variableNames: [
                    {
                      name: 'data',
                      nodeType: 'YulIdentifier',
                      src: '918:4:10',
                    },
                  ],
                },
              ],
            },
            name: 'array_dataslot_t_string_storage',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'ptr',
                nodeType: 'YulTypedName',
                src: '851:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'data',
                nodeType: 'YulTypedName',
                src: '859:4:10',
                type: '',
              },
            ],
            src: '810:141:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '1001:49:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '1011:33:10',
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'value',
                            nodeType: 'YulIdentifier',
                            src: '1029:5:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '1036:2:10',
                            type: '',
                            value: '31',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '1025:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '1025:14:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '1041:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'div',
                      nodeType: 'YulIdentifier',
                      src: '1021:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '1021:23:10',
                  },
                  variableNames: [
                    {
                      name: 'result',
                      nodeType: 'YulIdentifier',
                      src: '1011:6:10',
                    },
                  ],
                },
              ],
            },
            name: 'divide_by_32_ceil',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '984:5:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'result',
                nodeType: 'YulTypedName',
                src: '994:6:10',
                type: '',
              },
            ],
            src: '957:93:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '1109:54:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '1119:37:10',
                  value: {
                    arguments: [
                      {
                        name: 'bits',
                        nodeType: 'YulIdentifier',
                        src: '1144:4:10',
                      },
                      {
                        name: 'value',
                        nodeType: 'YulIdentifier',
                        src: '1150:5:10',
                      },
                    ],
                    functionName: {
                      name: 'shl',
                      nodeType: 'YulIdentifier',
                      src: '1140:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '1140:16:10',
                  },
                  variableNames: [
                    {
                      name: 'newValue',
                      nodeType: 'YulIdentifier',
                      src: '1119:8:10',
                    },
                  ],
                },
              ],
            },
            name: 'shift_left_dynamic',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'bits',
                nodeType: 'YulTypedName',
                src: '1084:4:10',
                type: '',
              },
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '1090:5:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'newValue',
                nodeType: 'YulTypedName',
                src: '1100:8:10',
                type: '',
              },
            ],
            src: '1056:107:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '1245:317:10',
              statements: [
                {
                  nodeType: 'YulVariableDeclaration',
                  src: '1255:35:10',
                  value: {
                    arguments: [
                      {
                        name: 'shiftBytes',
                        nodeType: 'YulIdentifier',
                        src: '1276:10:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '1288:1:10',
                        type: '',
                        value: '8',
                      },
                    ],
                    functionName: {
                      name: 'mul',
                      nodeType: 'YulIdentifier',
                      src: '1272:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '1272:18:10',
                  },
                  variables: [
                    {
                      name: 'shiftBits',
                      nodeType: 'YulTypedName',
                      src: '1259:9:10',
                      type: '',
                    },
                  ],
                },
                {
                  nodeType: 'YulVariableDeclaration',
                  src: '1299:109:10',
                  value: {
                    arguments: [
                      {
                        name: 'shiftBits',
                        nodeType: 'YulIdentifier',
                        src: '1330:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '1341:66:10',
                        type: '',
                        value: '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',
                      },
                    ],
                    functionName: {
                      name: 'shift_left_dynamic',
                      nodeType: 'YulIdentifier',
                      src: '1311:18:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '1311:97:10',
                  },
                  variables: [
                    {
                      name: 'mask',
                      nodeType: 'YulTypedName',
                      src: '1303:4:10',
                      type: '',
                    },
                  ],
                },
                {
                  nodeType: 'YulAssignment',
                  src: '1417:51:10',
                  value: {
                    arguments: [
                      {
                        name: 'shiftBits',
                        nodeType: 'YulIdentifier',
                        src: '1448:9:10',
                      },
                      {
                        name: 'toInsert',
                        nodeType: 'YulIdentifier',
                        src: '1459:8:10',
                      },
                    ],
                    functionName: {
                      name: 'shift_left_dynamic',
                      nodeType: 'YulIdentifier',
                      src: '1429:18:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '1429:39:10',
                  },
                  variableNames: [
                    {
                      name: 'toInsert',
                      nodeType: 'YulIdentifier',
                      src: '1417:8:10',
                    },
                  ],
                },
                {
                  nodeType: 'YulAssignment',
                  src: '1477:30:10',
                  value: {
                    arguments: [
                      {
                        name: 'value',
                        nodeType: 'YulIdentifier',
                        src: '1490:5:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'mask',
                            nodeType: 'YulIdentifier',
                            src: '1501:4:10',
                          },
                        ],
                        functionName: {
                          name: 'not',
                          nodeType: 'YulIdentifier',
                          src: '1497:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '1497:9:10',
                      },
                    ],
                    functionName: {
                      name: 'and',
                      nodeType: 'YulIdentifier',
                      src: '1486:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '1486:21:10',
                  },
                  variableNames: [
                    {
                      name: 'value',
                      nodeType: 'YulIdentifier',
                      src: '1477:5:10',
                    },
                  ],
                },
                {
                  nodeType: 'YulAssignment',
                  src: '1516:40:10',
                  value: {
                    arguments: [
                      {
                        name: 'value',
                        nodeType: 'YulIdentifier',
                        src: '1529:5:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'toInsert',
                            nodeType: 'YulIdentifier',
                            src: '1540:8:10',
                          },
                          {
                            name: 'mask',
                            nodeType: 'YulIdentifier',
                            src: '1550:4:10',
                          },
                        ],
                        functionName: {
                          name: 'and',
                          nodeType: 'YulIdentifier',
                          src: '1536:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '1536:19:10',
                      },
                    ],
                    functionName: {
                      name: 'or',
                      nodeType: 'YulIdentifier',
                      src: '1526:2:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '1526:30:10',
                  },
                  variableNames: [
                    {
                      name: 'result',
                      nodeType: 'YulIdentifier',
                      src: '1516:6:10',
                    },
                  ],
                },
              ],
            },
            name: 'update_byte_slice_dynamic32',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '1206:5:10',
                type: '',
              },
              {
                name: 'shiftBytes',
                nodeType: 'YulTypedName',
                src: '1213:10:10',
                type: '',
              },
              {
                name: 'toInsert',
                nodeType: 'YulTypedName',
                src: '1225:8:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'result',
                nodeType: 'YulTypedName',
                src: '1238:6:10',
                type: '',
              },
            ],
            src: '1169:393:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '1613:32:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '1623:16:10',
                  value: {
                    name: 'value',
                    nodeType: 'YulIdentifier',
                    src: '1634:5:10',
                  },
                  variableNames: [
                    {
                      name: 'cleaned',
                      nodeType: 'YulIdentifier',
                      src: '1623:7:10',
                    },
                  ],
                },
              ],
            },
            name: 'cleanup_t_uint256',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '1595:5:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'cleaned',
                nodeType: 'YulTypedName',
                src: '1605:7:10',
                type: '',
              },
            ],
            src: '1568:77:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '1683:28:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '1693:12:10',
                  value: {
                    name: 'value',
                    nodeType: 'YulIdentifier',
                    src: '1700:5:10',
                  },
                  variableNames: [
                    {
                      name: 'ret',
                      nodeType: 'YulIdentifier',
                      src: '1693:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'identity',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '1669:5:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'ret',
                nodeType: 'YulTypedName',
                src: '1679:3:10',
                type: '',
              },
            ],
            src: '1651:60:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '1777:82:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '1787:66:10',
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: 'value',
                                nodeType: 'YulIdentifier',
                                src: '1845:5:10',
                              },
                            ],
                            functionName: {
                              name: 'cleanup_t_uint256',
                              nodeType: 'YulIdentifier',
                              src: '1827:17:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '1827:24:10',
                          },
                        ],
                        functionName: {
                          name: 'identity',
                          nodeType: 'YulIdentifier',
                          src: '1818:8:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '1818:34:10',
                      },
                    ],
                    functionName: {
                      name: 'cleanup_t_uint256',
                      nodeType: 'YulIdentifier',
                      src: '1800:17:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '1800:53:10',
                  },
                  variableNames: [
                    {
                      name: 'converted',
                      nodeType: 'YulIdentifier',
                      src: '1787:9:10',
                    },
                  ],
                },
              ],
            },
            name: 'convert_t_uint256_to_t_uint256',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '1757:5:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'converted',
                nodeType: 'YulTypedName',
                src: '1767:9:10',
                type: '',
              },
            ],
            src: '1717:142:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '1912:28:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '1922:12:10',
                  value: {
                    name: 'value',
                    nodeType: 'YulIdentifier',
                    src: '1929:5:10',
                  },
                  variableNames: [
                    {
                      name: 'ret',
                      nodeType: 'YulIdentifier',
                      src: '1922:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'prepare_store_t_uint256',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '1898:5:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'ret',
                nodeType: 'YulTypedName',
                src: '1908:3:10',
                type: '',
              },
            ],
            src: '1865:75:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '2022:193:10',
              statements: [
                {
                  nodeType: 'YulVariableDeclaration',
                  src: '2032:63:10',
                  value: {
                    arguments: [
                      {
                        name: 'value_0',
                        nodeType: 'YulIdentifier',
                        src: '2087:7:10',
                      },
                    ],
                    functionName: {
                      name: 'convert_t_uint256_to_t_uint256',
                      nodeType: 'YulIdentifier',
                      src: '2056:30:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '2056:39:10',
                  },
                  variables: [
                    {
                      name: 'convertedValue_0',
                      nodeType: 'YulTypedName',
                      src: '2036:16:10',
                      type: '',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'slot',
                        nodeType: 'YulIdentifier',
                        src: '2111:4:10',
                      },
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: 'slot',
                                nodeType: 'YulIdentifier',
                                src: '2151:4:10',
                              },
                            ],
                            functionName: {
                              name: 'sload',
                              nodeType: 'YulIdentifier',
                              src: '2145:5:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '2145:11:10',
                          },
                          {
                            name: 'offset',
                            nodeType: 'YulIdentifier',
                            src: '2158:6:10',
                          },
                          {
                            arguments: [
                              {
                                name: 'convertedValue_0',
                                nodeType: 'YulIdentifier',
                                src: '2190:16:10',
                              },
                            ],
                            functionName: {
                              name: 'prepare_store_t_uint256',
                              nodeType: 'YulIdentifier',
                              src: '2166:23:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '2166:41:10',
                          },
                        ],
                        functionName: {
                          name: 'update_byte_slice_dynamic32',
                          nodeType: 'YulIdentifier',
                          src: '2117:27:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '2117:91:10',
                      },
                    ],
                    functionName: {
                      name: 'sstore',
                      nodeType: 'YulIdentifier',
                      src: '2104:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '2104:105:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '2104:105:10',
                },
              ],
            },
            name: 'update_storage_value_t_uint256_to_t_uint256',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'slot',
                nodeType: 'YulTypedName',
                src: '1999:4:10',
                type: '',
              },
              {
                name: 'offset',
                nodeType: 'YulTypedName',
                src: '2005:6:10',
                type: '',
              },
              {
                name: 'value_0',
                nodeType: 'YulTypedName',
                src: '2013:7:10',
                type: '',
              },
            ],
            src: '1946:269:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '2270:24:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '2280:8:10',
                  value: {
                    kind: 'number',
                    nodeType: 'YulLiteral',
                    src: '2287:1:10',
                    type: '',
                    value: '0',
                  },
                  variableNames: [
                    {
                      name: 'ret',
                      nodeType: 'YulIdentifier',
                      src: '2280:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'zero_value_for_split_t_uint256',
            nodeType: 'YulFunctionDefinition',
            returnVariables: [
              {
                name: 'ret',
                nodeType: 'YulTypedName',
                src: '2266:3:10',
                type: '',
              },
            ],
            src: '2221:73:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '2353:136:10',
              statements: [
                {
                  nodeType: 'YulVariableDeclaration',
                  src: '2363:46:10',
                  value: {
                    arguments: [],
                    functionName: {
                      name: 'zero_value_for_split_t_uint256',
                      nodeType: 'YulIdentifier',
                      src: '2377:30:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '2377:32:10',
                  },
                  variables: [
                    {
                      name: 'zero_0',
                      nodeType: 'YulTypedName',
                      src: '2367:6:10',
                      type: '',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'slot',
                        nodeType: 'YulIdentifier',
                        src: '2462:4:10',
                      },
                      {
                        name: 'offset',
                        nodeType: 'YulIdentifier',
                        src: '2468:6:10',
                      },
                      {
                        name: 'zero_0',
                        nodeType: 'YulIdentifier',
                        src: '2476:6:10',
                      },
                    ],
                    functionName: {
                      name: 'update_storage_value_t_uint256_to_t_uint256',
                      nodeType: 'YulIdentifier',
                      src: '2418:43:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '2418:65:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '2418:65:10',
                },
              ],
            },
            name: 'storage_set_to_zero_t_uint256',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'slot',
                nodeType: 'YulTypedName',
                src: '2339:4:10',
                type: '',
              },
              {
                name: 'offset',
                nodeType: 'YulTypedName',
                src: '2345:6:10',
                type: '',
              },
            ],
            src: '2300:189:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '2545:136:10',
              statements: [
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '2612:63:10',
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: 'start',
                              nodeType: 'YulIdentifier',
                              src: '2656:5:10',
                            },
                            {
                              kind: 'number',
                              nodeType: 'YulLiteral',
                              src: '2663:1:10',
                              type: '',
                              value: '0',
                            },
                          ],
                          functionName: {
                            name: 'storage_set_to_zero_t_uint256',
                            nodeType: 'YulIdentifier',
                            src: '2626:29:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '2626:39:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '2626:39:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: 'start',
                        nodeType: 'YulIdentifier',
                        src: '2565:5:10',
                      },
                      {
                        name: 'end',
                        nodeType: 'YulIdentifier',
                        src: '2572:3:10',
                      },
                    ],
                    functionName: {
                      name: 'lt',
                      nodeType: 'YulIdentifier',
                      src: '2562:2:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '2562:14:10',
                  },
                  nodeType: 'YulForLoop',
                  post: {
                    nodeType: 'YulBlock',
                    src: '2577:26:10',
                    statements: [
                      {
                        nodeType: 'YulAssignment',
                        src: '2579:22:10',
                        value: {
                          arguments: [
                            {
                              name: 'start',
                              nodeType: 'YulIdentifier',
                              src: '2592:5:10',
                            },
                            {
                              kind: 'number',
                              nodeType: 'YulLiteral',
                              src: '2599:1:10',
                              type: '',
                              value: '1',
                            },
                          ],
                          functionName: {
                            name: 'add',
                            nodeType: 'YulIdentifier',
                            src: '2588:3:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '2588:13:10',
                        },
                        variableNames: [
                          {
                            name: 'start',
                            nodeType: 'YulIdentifier',
                            src: '2579:5:10',
                          },
                        ],
                      },
                    ],
                  },
                  pre: {
                    nodeType: 'YulBlock',
                    src: '2559:2:10',
                    statements: [],
                  },
                  src: '2555:120:10',
                },
              ],
            },
            name: 'clear_storage_range_t_bytes1',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'start',
                nodeType: 'YulTypedName',
                src: '2533:5:10',
                type: '',
              },
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '2540:3:10',
                type: '',
              },
            ],
            src: '2495:186:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '2766:464:10',
              statements: [
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '2792:431:10',
                    statements: [
                      {
                        nodeType: 'YulVariableDeclaration',
                        src: '2806:54:10',
                        value: {
                          arguments: [
                            {
                              name: 'array',
                              nodeType: 'YulIdentifier',
                              src: '2854:5:10',
                            },
                          ],
                          functionName: {
                            name: 'array_dataslot_t_string_storage',
                            nodeType: 'YulIdentifier',
                            src: '2822:31:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '2822:38:10',
                        },
                        variables: [
                          {
                            name: 'dataArea',
                            nodeType: 'YulTypedName',
                            src: '2810:8:10',
                            type: '',
                          },
                        ],
                      },
                      {
                        nodeType: 'YulVariableDeclaration',
                        src: '2873:63:10',
                        value: {
                          arguments: [
                            {
                              name: 'dataArea',
                              nodeType: 'YulIdentifier',
                              src: '2896:8:10',
                            },
                            {
                              arguments: [
                                {
                                  name: 'startIndex',
                                  nodeType: 'YulIdentifier',
                                  src: '2924:10:10',
                                },
                              ],
                              functionName: {
                                name: 'divide_by_32_ceil',
                                nodeType: 'YulIdentifier',
                                src: '2906:17:10',
                              },
                              nodeType: 'YulFunctionCall',
                              src: '2906:29:10',
                            },
                          ],
                          functionName: {
                            name: 'add',
                            nodeType: 'YulIdentifier',
                            src: '2892:3:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '2892:44:10',
                        },
                        variables: [
                          {
                            name: 'deleteStart',
                            nodeType: 'YulTypedName',
                            src: '2877:11:10',
                            type: '',
                          },
                        ],
                      },
                      {
                        body: {
                          nodeType: 'YulBlock',
                          src: '3093:27:10',
                          statements: [
                            {
                              nodeType: 'YulAssignment',
                              src: '3095:23:10',
                              value: {
                                name: 'dataArea',
                                nodeType: 'YulIdentifier',
                                src: '3110:8:10',
                              },
                              variableNames: [
                                {
                                  name: 'deleteStart',
                                  nodeType: 'YulIdentifier',
                                  src: '3095:11:10',
                                },
                              ],
                            },
                          ],
                        },
                        condition: {
                          arguments: [
                            {
                              name: 'startIndex',
                              nodeType: 'YulIdentifier',
                              src: '3077:10:10',
                            },
                            {
                              kind: 'number',
                              nodeType: 'YulLiteral',
                              src: '3089:2:10',
                              type: '',
                              value: '32',
                            },
                          ],
                          functionName: {
                            name: 'lt',
                            nodeType: 'YulIdentifier',
                            src: '3074:2:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '3074:18:10',
                        },
                        nodeType: 'YulIf',
                        src: '3071:49:10',
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              name: 'deleteStart',
                              nodeType: 'YulIdentifier',
                              src: '3162:11:10',
                            },
                            {
                              arguments: [
                                {
                                  name: 'dataArea',
                                  nodeType: 'YulIdentifier',
                                  src: '3179:8:10',
                                },
                                {
                                  arguments: [
                                    {
                                      name: 'len',
                                      nodeType: 'YulIdentifier',
                                      src: '3207:3:10',
                                    },
                                  ],
                                  functionName: {
                                    name: 'divide_by_32_ceil',
                                    nodeType: 'YulIdentifier',
                                    src: '3189:17:10',
                                  },
                                  nodeType: 'YulFunctionCall',
                                  src: '3189:22:10',
                                },
                              ],
                              functionName: {
                                name: 'add',
                                nodeType: 'YulIdentifier',
                                src: '3175:3:10',
                              },
                              nodeType: 'YulFunctionCall',
                              src: '3175:37:10',
                            },
                          ],
                          functionName: {
                            name: 'clear_storage_range_t_bytes1',
                            nodeType: 'YulIdentifier',
                            src: '3133:28:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '3133:80:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '3133:80:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: 'len',
                        nodeType: 'YulIdentifier',
                        src: '2783:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '2788:2:10',
                        type: '',
                        value: '31',
                      },
                    ],
                    functionName: {
                      name: 'gt',
                      nodeType: 'YulIdentifier',
                      src: '2780:2:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '2780:11:10',
                  },
                  nodeType: 'YulIf',
                  src: '2777:446:10',
                },
              ],
            },
            name: 'clean_up_bytearray_end_slots_t_string_storage',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'array',
                nodeType: 'YulTypedName',
                src: '2742:5:10',
                type: '',
              },
              {
                name: 'len',
                nodeType: 'YulTypedName',
                src: '2749:3:10',
                type: '',
              },
              {
                name: 'startIndex',
                nodeType: 'YulTypedName',
                src: '2754:10:10',
                type: '',
              },
            ],
            src: '2687:543:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '3299:54:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '3309:37:10',
                  value: {
                    arguments: [
                      {
                        name: 'bits',
                        nodeType: 'YulIdentifier',
                        src: '3334:4:10',
                      },
                      {
                        name: 'value',
                        nodeType: 'YulIdentifier',
                        src: '3340:5:10',
                      },
                    ],
                    functionName: {
                      name: 'shr',
                      nodeType: 'YulIdentifier',
                      src: '3330:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '3330:16:10',
                  },
                  variableNames: [
                    {
                      name: 'newValue',
                      nodeType: 'YulIdentifier',
                      src: '3309:8:10',
                    },
                  ],
                },
              ],
            },
            name: 'shift_right_unsigned_dynamic',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'bits',
                nodeType: 'YulTypedName',
                src: '3274:4:10',
                type: '',
              },
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '3280:5:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'newValue',
                nodeType: 'YulTypedName',
                src: '3290:8:10',
                type: '',
              },
            ],
            src: '3236:117:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '3410:118:10',
              statements: [
                {
                  nodeType: 'YulVariableDeclaration',
                  src: '3420:68:10',
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                kind: 'number',
                                nodeType: 'YulLiteral',
                                src: '3469:1:10',
                                type: '',
                                value: '8',
                              },
                              {
                                name: 'bytes',
                                nodeType: 'YulIdentifier',
                                src: '3472:5:10',
                              },
                            ],
                            functionName: {
                              name: 'mul',
                              nodeType: 'YulIdentifier',
                              src: '3465:3:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '3465:13:10',
                          },
                          {
                            arguments: [
                              {
                                kind: 'number',
                                nodeType: 'YulLiteral',
                                src: '3484:1:10',
                                type: '',
                                value: '0',
                              },
                            ],
                            functionName: {
                              name: 'not',
                              nodeType: 'YulIdentifier',
                              src: '3480:3:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '3480:6:10',
                          },
                        ],
                        functionName: {
                          name: 'shift_right_unsigned_dynamic',
                          nodeType: 'YulIdentifier',
                          src: '3436:28:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '3436:51:10',
                      },
                    ],
                    functionName: {
                      name: 'not',
                      nodeType: 'YulIdentifier',
                      src: '3432:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '3432:56:10',
                  },
                  variables: [
                    {
                      name: 'mask',
                      nodeType: 'YulTypedName',
                      src: '3424:4:10',
                      type: '',
                    },
                  ],
                },
                {
                  nodeType: 'YulAssignment',
                  src: '3497:25:10',
                  value: {
                    arguments: [
                      {
                        name: 'data',
                        nodeType: 'YulIdentifier',
                        src: '3511:4:10',
                      },
                      {
                        name: 'mask',
                        nodeType: 'YulIdentifier',
                        src: '3517:4:10',
                      },
                    ],
                    functionName: {
                      name: 'and',
                      nodeType: 'YulIdentifier',
                      src: '3507:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '3507:15:10',
                  },
                  variableNames: [
                    {
                      name: 'result',
                      nodeType: 'YulIdentifier',
                      src: '3497:6:10',
                    },
                  ],
                },
              ],
            },
            name: 'mask_bytes_dynamic',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'data',
                nodeType: 'YulTypedName',
                src: '3387:4:10',
                type: '',
              },
              {
                name: 'bytes',
                nodeType: 'YulTypedName',
                src: '3393:5:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'result',
                nodeType: 'YulTypedName',
                src: '3403:6:10',
                type: '',
              },
            ],
            src: '3359:169:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '3614:214:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '3747:37:10',
                  value: {
                    arguments: [
                      {
                        name: 'data',
                        nodeType: 'YulIdentifier',
                        src: '3774:4:10',
                      },
                      {
                        name: 'len',
                        nodeType: 'YulIdentifier',
                        src: '3780:3:10',
                      },
                    ],
                    functionName: {
                      name: 'mask_bytes_dynamic',
                      nodeType: 'YulIdentifier',
                      src: '3755:18:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '3755:29:10',
                  },
                  variableNames: [
                    {
                      name: 'data',
                      nodeType: 'YulIdentifier',
                      src: '3747:4:10',
                    },
                  ],
                },
                {
                  nodeType: 'YulAssignment',
                  src: '3793:29:10',
                  value: {
                    arguments: [
                      {
                        name: 'data',
                        nodeType: 'YulIdentifier',
                        src: '3804:4:10',
                      },
                      {
                        arguments: [
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '3814:1:10',
                            type: '',
                            value: '2',
                          },
                          {
                            name: 'len',
                            nodeType: 'YulIdentifier',
                            src: '3817:3:10',
                          },
                        ],
                        functionName: {
                          name: 'mul',
                          nodeType: 'YulIdentifier',
                          src: '3810:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '3810:11:10',
                      },
                    ],
                    functionName: {
                      name: 'or',
                      nodeType: 'YulIdentifier',
                      src: '3801:2:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '3801:21:10',
                  },
                  variableNames: [
                    {
                      name: 'used',
                      nodeType: 'YulIdentifier',
                      src: '3793:4:10',
                    },
                  ],
                },
              ],
            },
            name: 'extract_used_part_and_set_length_of_short_byte_array',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'data',
                nodeType: 'YulTypedName',
                src: '3595:4:10',
                type: '',
              },
              {
                name: 'len',
                nodeType: 'YulTypedName',
                src: '3601:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'used',
                nodeType: 'YulTypedName',
                src: '3609:4:10',
                type: '',
              },
            ],
            src: '3533:295:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '3925:1303:10',
              statements: [
                {
                  nodeType: 'YulVariableDeclaration',
                  src: '3936:51:10',
                  value: {
                    arguments: [
                      {
                        name: 'src',
                        nodeType: 'YulIdentifier',
                        src: '3983:3:10',
                      },
                    ],
                    functionName: {
                      name: 'array_length_t_string_memory_ptr',
                      nodeType: 'YulIdentifier',
                      src: '3950:32:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '3950:37:10',
                  },
                  variables: [
                    {
                      name: 'newLen',
                      nodeType: 'YulTypedName',
                      src: '3940:6:10',
                      type: '',
                    },
                  ],
                },
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '4072:22:10',
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: 'panic_error_0x41',
                            nodeType: 'YulIdentifier',
                            src: '4074:16:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '4074:18:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '4074:18:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: 'newLen',
                        nodeType: 'YulIdentifier',
                        src: '4044:6:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '4052:18:10',
                        type: '',
                        value: '0xffffffffffffffff',
                      },
                    ],
                    functionName: {
                      name: 'gt',
                      nodeType: 'YulIdentifier',
                      src: '4041:2:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '4041:30:10',
                  },
                  nodeType: 'YulIf',
                  src: '4038:56:10',
                },
                {
                  nodeType: 'YulVariableDeclaration',
                  src: '4104:52:10',
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'slot',
                            nodeType: 'YulIdentifier',
                            src: '4150:4:10',
                          },
                        ],
                        functionName: {
                          name: 'sload',
                          nodeType: 'YulIdentifier',
                          src: '4144:5:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '4144:11:10',
                      },
                    ],
                    functionName: {
                      name: 'extract_byte_array_length',
                      nodeType: 'YulIdentifier',
                      src: '4118:25:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '4118:38:10',
                  },
                  variables: [
                    {
                      name: 'oldLen',
                      nodeType: 'YulTypedName',
                      src: '4108:6:10',
                      type: '',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'slot',
                        nodeType: 'YulIdentifier',
                        src: '4249:4:10',
                      },
                      {
                        name: 'oldLen',
                        nodeType: 'YulIdentifier',
                        src: '4255:6:10',
                      },
                      {
                        name: 'newLen',
                        nodeType: 'YulIdentifier',
                        src: '4263:6:10',
                      },
                    ],
                    functionName: {
                      name: 'clean_up_bytearray_end_slots_t_string_storage',
                      nodeType: 'YulIdentifier',
                      src: '4203:45:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '4203:67:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '4203:67:10',
                },
                {
                  nodeType: 'YulVariableDeclaration',
                  src: '4280:18:10',
                  value: {
                    kind: 'number',
                    nodeType: 'YulLiteral',
                    src: '4297:1:10',
                    type: '',
                    value: '0',
                  },
                  variables: [
                    {
                      name: 'srcOffset',
                      nodeType: 'YulTypedName',
                      src: '4284:9:10',
                      type: '',
                    },
                  ],
                },
                {
                  nodeType: 'YulAssignment',
                  src: '4308:17:10',
                  value: {
                    kind: 'number',
                    nodeType: 'YulLiteral',
                    src: '4321:4:10',
                    type: '',
                    value: '0x20',
                  },
                  variableNames: [
                    {
                      name: 'srcOffset',
                      nodeType: 'YulIdentifier',
                      src: '4308:9:10',
                    },
                  ],
                },
                {
                  cases: [
                    {
                      body: {
                        nodeType: 'YulBlock',
                        src: '4372:611:10',
                        statements: [
                          {
                            nodeType: 'YulVariableDeclaration',
                            src: '4386:37:10',
                            value: {
                              arguments: [
                                {
                                  name: 'newLen',
                                  nodeType: 'YulIdentifier',
                                  src: '4405:6:10',
                                },
                                {
                                  arguments: [
                                    {
                                      kind: 'number',
                                      nodeType: 'YulLiteral',
                                      src: '4417:4:10',
                                      type: '',
                                      value: '0x1f',
                                    },
                                  ],
                                  functionName: {
                                    name: 'not',
                                    nodeType: 'YulIdentifier',
                                    src: '4413:3:10',
                                  },
                                  nodeType: 'YulFunctionCall',
                                  src: '4413:9:10',
                                },
                              ],
                              functionName: {
                                name: 'and',
                                nodeType: 'YulIdentifier',
                                src: '4401:3:10',
                              },
                              nodeType: 'YulFunctionCall',
                              src: '4401:22:10',
                            },
                            variables: [
                              {
                                name: 'loopEnd',
                                nodeType: 'YulTypedName',
                                src: '4390:7:10',
                                type: '',
                              },
                            ],
                          },
                          {
                            nodeType: 'YulVariableDeclaration',
                            src: '4437:51:10',
                            value: {
                              arguments: [
                                {
                                  name: 'slot',
                                  nodeType: 'YulIdentifier',
                                  src: '4483:4:10',
                                },
                              ],
                              functionName: {
                                name: 'array_dataslot_t_string_storage',
                                nodeType: 'YulIdentifier',
                                src: '4451:31:10',
                              },
                              nodeType: 'YulFunctionCall',
                              src: '4451:37:10',
                            },
                            variables: [
                              {
                                name: 'dstPtr',
                                nodeType: 'YulTypedName',
                                src: '4441:6:10',
                                type: '',
                              },
                            ],
                          },
                          {
                            nodeType: 'YulVariableDeclaration',
                            src: '4501:10:10',
                            value: {
                              kind: 'number',
                              nodeType: 'YulLiteral',
                              src: '4510:1:10',
                              type: '',
                              value: '0',
                            },
                            variables: [
                              {
                                name: 'i',
                                nodeType: 'YulTypedName',
                                src: '4505:1:10',
                                type: '',
                              },
                            ],
                          },
                          {
                            body: {
                              nodeType: 'YulBlock',
                              src: '4569:163:10',
                              statements: [
                                {
                                  expression: {
                                    arguments: [
                                      {
                                        name: 'dstPtr',
                                        nodeType: 'YulIdentifier',
                                        src: '4594:6:10',
                                      },
                                      {
                                        arguments: [
                                          {
                                            arguments: [
                                              {
                                                name: 'src',
                                                nodeType: 'YulIdentifier',
                                                src: '4612:3:10',
                                              },
                                              {
                                                name: 'srcOffset',
                                                nodeType: 'YulIdentifier',
                                                src: '4617:9:10',
                                              },
                                            ],
                                            functionName: {
                                              name: 'add',
                                              nodeType: 'YulIdentifier',
                                              src: '4608:3:10',
                                            },
                                            nodeType: 'YulFunctionCall',
                                            src: '4608:19:10',
                                          },
                                        ],
                                        functionName: {
                                          name: 'mload',
                                          nodeType: 'YulIdentifier',
                                          src: '4602:5:10',
                                        },
                                        nodeType: 'YulFunctionCall',
                                        src: '4602:26:10',
                                      },
                                    ],
                                    functionName: {
                                      name: 'sstore',
                                      nodeType: 'YulIdentifier',
                                      src: '4587:6:10',
                                    },
                                    nodeType: 'YulFunctionCall',
                                    src: '4587:42:10',
                                  },
                                  nodeType: 'YulExpressionStatement',
                                  src: '4587:42:10',
                                },
                                {
                                  nodeType: 'YulAssignment',
                                  src: '4646:24:10',
                                  value: {
                                    arguments: [
                                      {
                                        name: 'dstPtr',
                                        nodeType: 'YulIdentifier',
                                        src: '4660:6:10',
                                      },
                                      {
                                        kind: 'number',
                                        nodeType: 'YulLiteral',
                                        src: '4668:1:10',
                                        type: '',
                                        value: '1',
                                      },
                                    ],
                                    functionName: {
                                      name: 'add',
                                      nodeType: 'YulIdentifier',
                                      src: '4656:3:10',
                                    },
                                    nodeType: 'YulFunctionCall',
                                    src: '4656:14:10',
                                  },
                                  variableNames: [
                                    {
                                      name: 'dstPtr',
                                      nodeType: 'YulIdentifier',
                                      src: '4646:6:10',
                                    },
                                  ],
                                },
                                {
                                  nodeType: 'YulAssignment',
                                  src: '4687:31:10',
                                  value: {
                                    arguments: [
                                      {
                                        name: 'srcOffset',
                                        nodeType: 'YulIdentifier',
                                        src: '4704:9:10',
                                      },
                                      {
                                        kind: 'number',
                                        nodeType: 'YulLiteral',
                                        src: '4715:2:10',
                                        type: '',
                                        value: '32',
                                      },
                                    ],
                                    functionName: {
                                      name: 'add',
                                      nodeType: 'YulIdentifier',
                                      src: '4700:3:10',
                                    },
                                    nodeType: 'YulFunctionCall',
                                    src: '4700:18:10',
                                  },
                                  variableNames: [
                                    {
                                      name: 'srcOffset',
                                      nodeType: 'YulIdentifier',
                                      src: '4687:9:10',
                                    },
                                  ],
                                },
                              ],
                            },
                            condition: {
                              arguments: [
                                {
                                  name: 'i',
                                  nodeType: 'YulIdentifier',
                                  src: '4535:1:10',
                                },
                                {
                                  name: 'loopEnd',
                                  nodeType: 'YulIdentifier',
                                  src: '4538:7:10',
                                },
                              ],
                              functionName: {
                                name: 'lt',
                                nodeType: 'YulIdentifier',
                                src: '4532:2:10',
                              },
                              nodeType: 'YulFunctionCall',
                              src: '4532:14:10',
                            },
                            nodeType: 'YulForLoop',
                            post: {
                              nodeType: 'YulBlock',
                              src: '4547:21:10',
                              statements: [
                                {
                                  nodeType: 'YulAssignment',
                                  src: '4549:17:10',
                                  value: {
                                    arguments: [
                                      {
                                        name: 'i',
                                        nodeType: 'YulIdentifier',
                                        src: '4558:1:10',
                                      },
                                      {
                                        kind: 'number',
                                        nodeType: 'YulLiteral',
                                        src: '4561:4:10',
                                        type: '',
                                        value: '0x20',
                                      },
                                    ],
                                    functionName: {
                                      name: 'add',
                                      nodeType: 'YulIdentifier',
                                      src: '4554:3:10',
                                    },
                                    nodeType: 'YulFunctionCall',
                                    src: '4554:12:10',
                                  },
                                  variableNames: [
                                    {
                                      name: 'i',
                                      nodeType: 'YulIdentifier',
                                      src: '4549:1:10',
                                    },
                                  ],
                                },
                              ],
                            },
                            pre: {
                              nodeType: 'YulBlock',
                              src: '4528:3:10',
                              statements: [],
                            },
                            src: '4524:208:10',
                          },
                          {
                            body: {
                              nodeType: 'YulBlock',
                              src: '4768:156:10',
                              statements: [
                                {
                                  nodeType: 'YulVariableDeclaration',
                                  src: '4786:43:10',
                                  value: {
                                    arguments: [
                                      {
                                        arguments: [
                                          {
                                            name: 'src',
                                            nodeType: 'YulIdentifier',
                                            src: '4813:3:10',
                                          },
                                          {
                                            name: 'srcOffset',
                                            nodeType: 'YulIdentifier',
                                            src: '4818:9:10',
                                          },
                                        ],
                                        functionName: {
                                          name: 'add',
                                          nodeType: 'YulIdentifier',
                                          src: '4809:3:10',
                                        },
                                        nodeType: 'YulFunctionCall',
                                        src: '4809:19:10',
                                      },
                                    ],
                                    functionName: {
                                      name: 'mload',
                                      nodeType: 'YulIdentifier',
                                      src: '4803:5:10',
                                    },
                                    nodeType: 'YulFunctionCall',
                                    src: '4803:26:10',
                                  },
                                  variables: [
                                    {
                                      name: 'lastValue',
                                      nodeType: 'YulTypedName',
                                      src: '4790:9:10',
                                      type: '',
                                    },
                                  ],
                                },
                                {
                                  expression: {
                                    arguments: [
                                      {
                                        name: 'dstPtr',
                                        nodeType: 'YulIdentifier',
                                        src: '4853:6:10',
                                      },
                                      {
                                        arguments: [
                                          {
                                            name: 'lastValue',
                                            nodeType: 'YulIdentifier',
                                            src: '4880:9:10',
                                          },
                                          {
                                            arguments: [
                                              {
                                                name: 'newLen',
                                                nodeType: 'YulIdentifier',
                                                src: '4895:6:10',
                                              },
                                              {
                                                kind: 'number',
                                                nodeType: 'YulLiteral',
                                                src: '4903:4:10',
                                                type: '',
                                                value: '0x1f',
                                              },
                                            ],
                                            functionName: {
                                              name: 'and',
                                              nodeType: 'YulIdentifier',
                                              src: '4891:3:10',
                                            },
                                            nodeType: 'YulFunctionCall',
                                            src: '4891:17:10',
                                          },
                                        ],
                                        functionName: {
                                          name: 'mask_bytes_dynamic',
                                          nodeType: 'YulIdentifier',
                                          src: '4861:18:10',
                                        },
                                        nodeType: 'YulFunctionCall',
                                        src: '4861:48:10',
                                      },
                                    ],
                                    functionName: {
                                      name: 'sstore',
                                      nodeType: 'YulIdentifier',
                                      src: '4846:6:10',
                                    },
                                    nodeType: 'YulFunctionCall',
                                    src: '4846:64:10',
                                  },
                                  nodeType: 'YulExpressionStatement',
                                  src: '4846:64:10',
                                },
                              ],
                            },
                            condition: {
                              arguments: [
                                {
                                  name: 'loopEnd',
                                  nodeType: 'YulIdentifier',
                                  src: '4751:7:10',
                                },
                                {
                                  name: 'newLen',
                                  nodeType: 'YulIdentifier',
                                  src: '4760:6:10',
                                },
                              ],
                              functionName: {
                                name: 'lt',
                                nodeType: 'YulIdentifier',
                                src: '4748:2:10',
                              },
                              nodeType: 'YulFunctionCall',
                              src: '4748:19:10',
                            },
                            nodeType: 'YulIf',
                            src: '4745:179:10',
                          },
                          {
                            expression: {
                              arguments: [
                                {
                                  name: 'slot',
                                  nodeType: 'YulIdentifier',
                                  src: '4944:4:10',
                                },
                                {
                                  arguments: [
                                    {
                                      arguments: [
                                        {
                                          name: 'newLen',
                                          nodeType: 'YulIdentifier',
                                          src: '4958:6:10',
                                        },
                                        {
                                          kind: 'number',
                                          nodeType: 'YulLiteral',
                                          src: '4966:1:10',
                                          type: '',
                                          value: '2',
                                        },
                                      ],
                                      functionName: {
                                        name: 'mul',
                                        nodeType: 'YulIdentifier',
                                        src: '4954:3:10',
                                      },
                                      nodeType: 'YulFunctionCall',
                                      src: '4954:14:10',
                                    },
                                    {
                                      kind: 'number',
                                      nodeType: 'YulLiteral',
                                      src: '4970:1:10',
                                      type: '',
                                      value: '1',
                                    },
                                  ],
                                  functionName: {
                                    name: 'add',
                                    nodeType: 'YulIdentifier',
                                    src: '4950:3:10',
                                  },
                                  nodeType: 'YulFunctionCall',
                                  src: '4950:22:10',
                                },
                              ],
                              functionName: {
                                name: 'sstore',
                                nodeType: 'YulIdentifier',
                                src: '4937:6:10',
                              },
                              nodeType: 'YulFunctionCall',
                              src: '4937:36:10',
                            },
                            nodeType: 'YulExpressionStatement',
                            src: '4937:36:10',
                          },
                        ],
                      },
                      nodeType: 'YulCase',
                      src: '4365:618:10',
                      value: {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '4370:1:10',
                        type: '',
                        value: '1',
                      },
                    },
                    {
                      body: {
                        nodeType: 'YulBlock',
                        src: '5000:222:10',
                        statements: [
                          {
                            nodeType: 'YulVariableDeclaration',
                            src: '5014:14:10',
                            value: {
                              kind: 'number',
                              nodeType: 'YulLiteral',
                              src: '5027:1:10',
                              type: '',
                              value: '0',
                            },
                            variables: [
                              {
                                name: 'value',
                                nodeType: 'YulTypedName',
                                src: '5018:5:10',
                                type: '',
                              },
                            ],
                          },
                          {
                            body: {
                              nodeType: 'YulBlock',
                              src: '5051:67:10',
                              statements: [
                                {
                                  nodeType: 'YulAssignment',
                                  src: '5069:35:10',
                                  value: {
                                    arguments: [
                                      {
                                        arguments: [
                                          {
                                            name: 'src',
                                            nodeType: 'YulIdentifier',
                                            src: '5088:3:10',
                                          },
                                          {
                                            name: 'srcOffset',
                                            nodeType: 'YulIdentifier',
                                            src: '5093:9:10',
                                          },
                                        ],
                                        functionName: {
                                          name: 'add',
                                          nodeType: 'YulIdentifier',
                                          src: '5084:3:10',
                                        },
                                        nodeType: 'YulFunctionCall',
                                        src: '5084:19:10',
                                      },
                                    ],
                                    functionName: {
                                      name: 'mload',
                                      nodeType: 'YulIdentifier',
                                      src: '5078:5:10',
                                    },
                                    nodeType: 'YulFunctionCall',
                                    src: '5078:26:10',
                                  },
                                  variableNames: [
                                    {
                                      name: 'value',
                                      nodeType: 'YulIdentifier',
                                      src: '5069:5:10',
                                    },
                                  ],
                                },
                              ],
                            },
                            condition: {
                              name: 'newLen',
                              nodeType: 'YulIdentifier',
                              src: '5044:6:10',
                            },
                            nodeType: 'YulIf',
                            src: '5041:77:10',
                          },
                          {
                            expression: {
                              arguments: [
                                {
                                  name: 'slot',
                                  nodeType: 'YulIdentifier',
                                  src: '5138:4:10',
                                },
                                {
                                  arguments: [
                                    {
                                      name: 'value',
                                      nodeType: 'YulIdentifier',
                                      src: '5197:5:10',
                                    },
                                    {
                                      name: 'newLen',
                                      nodeType: 'YulIdentifier',
                                      src: '5204:6:10',
                                    },
                                  ],
                                  functionName: {
                                    name: 'extract_used_part_and_set_length_of_short_byte_array',
                                    nodeType: 'YulIdentifier',
                                    src: '5144:52:10',
                                  },
                                  nodeType: 'YulFunctionCall',
                                  src: '5144:67:10',
                                },
                              ],
                              functionName: {
                                name: 'sstore',
                                nodeType: 'YulIdentifier',
                                src: '5131:6:10',
                              },
                              nodeType: 'YulFunctionCall',
                              src: '5131:81:10',
                            },
                            nodeType: 'YulExpressionStatement',
                            src: '5131:81:10',
                          },
                        ],
                      },
                      nodeType: 'YulCase',
                      src: '4992:230:10',
                      value: 'default',
                    },
                  ],
                  expression: {
                    arguments: [
                      {
                        name: 'newLen',
                        nodeType: 'YulIdentifier',
                        src: '4345:6:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '4353:2:10',
                        type: '',
                        value: '31',
                      },
                    ],
                    functionName: {
                      name: 'gt',
                      nodeType: 'YulIdentifier',
                      src: '4342:2:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '4342:14:10',
                  },
                  nodeType: 'YulSwitch',
                  src: '4335:887:10',
                },
              ],
            },
            name: 'copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'slot',
                nodeType: 'YulTypedName',
                src: '3914:4:10',
                type: '',
              },
              {
                name: 'src',
                nodeType: 'YulTypedName',
                src: '3920:3:10',
                type: '',
              },
            ],
            src: '3833:1395:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '5262:152:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '5279:1:10',
                        type: '',
                        value: '0',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '5282:77:10',
                        type: '',
                        value:
                          '35408467139433450592217433187231851964531694900788300625387963629091585785856',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '5272:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '5272:88:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '5272:88:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '5376:1:10',
                        type: '',
                        value: '4',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '5379:4:10',
                        type: '',
                        value: '0x21',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '5369:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '5369:15:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '5369:15:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '5400:1:10',
                        type: '',
                        value: '0',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '5403:4:10',
                        type: '',
                        value: '0x24',
                      },
                    ],
                    functionName: {
                      name: 'revert',
                      nodeType: 'YulIdentifier',
                      src: '5393:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '5393:15:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '5393:15:10',
                },
              ],
            },
            name: 'panic_error_0x21',
            nodeType: 'YulFunctionDefinition',
            src: '5234:180:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '5448:152:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '5465:1:10',
                        type: '',
                        value: '0',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '5468:77:10',
                        type: '',
                        value:
                          '35408467139433450592217433187231851964531694900788300625387963629091585785856',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '5458:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '5458:88:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '5458:88:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '5562:1:10',
                        type: '',
                        value: '4',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '5565:4:10',
                        type: '',
                        value: '0x11',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '5555:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '5555:15:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '5555:15:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '5586:1:10',
                        type: '',
                        value: '0',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '5589:4:10',
                        type: '',
                        value: '0x24',
                      },
                    ],
                    functionName: {
                      name: 'revert',
                      nodeType: 'YulIdentifier',
                      src: '5579:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '5579:15:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '5579:15:10',
                },
              ],
            },
            name: 'panic_error_0x11',
            nodeType: 'YulFunctionDefinition',
            src: '5420:180:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '5649:43:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '5659:27:10',
                  value: {
                    arguments: [
                      {
                        name: 'value',
                        nodeType: 'YulIdentifier',
                        src: '5674:5:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '5681:4:10',
                        type: '',
                        value: '0xff',
                      },
                    ],
                    functionName: {
                      name: 'and',
                      nodeType: 'YulIdentifier',
                      src: '5670:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '5670:16:10',
                  },
                  variableNames: [
                    {
                      name: 'cleaned',
                      nodeType: 'YulIdentifier',
                      src: '5659:7:10',
                    },
                  ],
                },
              ],
            },
            name: 'cleanup_t_uint8',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '5631:5:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'cleaned',
                nodeType: 'YulTypedName',
                src: '5641:7:10',
                type: '',
              },
            ],
            src: '5606:86:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '5739:126:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '5749:31:10',
                  value: {
                    arguments: [
                      {
                        name: 'value',
                        nodeType: 'YulIdentifier',
                        src: '5774:5:10',
                      },
                    ],
                    functionName: {
                      name: 'cleanup_t_uint8',
                      nodeType: 'YulIdentifier',
                      src: '5758:15:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '5758:22:10',
                  },
                  variableNames: [
                    {
                      name: 'value',
                      nodeType: 'YulIdentifier',
                      src: '5749:5:10',
                    },
                  ],
                },
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '5808:22:10',
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: 'panic_error_0x11',
                            nodeType: 'YulIdentifier',
                            src: '5810:16:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '5810:18:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '5810:18:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: 'value',
                        nodeType: 'YulIdentifier',
                        src: '5795:5:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '5802:4:10',
                        type: '',
                        value: '0xff',
                      },
                    ],
                    functionName: {
                      name: 'eq',
                      nodeType: 'YulIdentifier',
                      src: '5792:2:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '5792:15:10',
                  },
                  nodeType: 'YulIf',
                  src: '5789:41:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '5839:20:10',
                  value: {
                    arguments: [
                      {
                        name: 'value',
                        nodeType: 'YulIdentifier',
                        src: '5850:5:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '5857:1:10',
                        type: '',
                        value: '1',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '5846:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '5846:13:10',
                  },
                  variableNames: [
                    {
                      name: 'ret',
                      nodeType: 'YulIdentifier',
                      src: '5839:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'increment_t_uint8',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '5725:5:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'ret',
                nodeType: 'YulTypedName',
                src: '5735:3:10',
                type: '',
              },
            ],
            src: '5698:167:10',
          },
        ],
      },
      contents:
        '{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n',
      id: 10,
      language: 'Yul',
      name: '#utility.yul',
    },
  ],
  deployedGeneratedSources: [
    {
      ast: {
        nodeType: 'YulBlock',
        src: '0:31713:10',
        statements: [
          {
            body: {
              nodeType: 'YulBlock',
              src: '66:40:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '77:22:10',
                  value: {
                    arguments: [
                      {
                        name: 'value',
                        nodeType: 'YulIdentifier',
                        src: '93:5:10',
                      },
                    ],
                    functionName: {
                      name: 'mload',
                      nodeType: 'YulIdentifier',
                      src: '87:5:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '87:12:10',
                  },
                  variableNames: [
                    {
                      name: 'length',
                      nodeType: 'YulIdentifier',
                      src: '77:6:10',
                    },
                  ],
                },
              ],
            },
            name: 'array_length_t_string_memory_ptr',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '49:5:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'length',
                nodeType: 'YulTypedName',
                src: '59:6:10',
                type: '',
              },
            ],
            src: '7:99:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '208:73:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '225:3:10',
                      },
                      {
                        name: 'length',
                        nodeType: 'YulIdentifier',
                        src: '230:6:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '218:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '218:19:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '218:19:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '246:29:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '265:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '270:4:10',
                        type: '',
                        value: '0x20',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '261:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '261:14:10',
                  },
                  variableNames: [
                    {
                      name: 'updated_pos',
                      nodeType: 'YulIdentifier',
                      src: '246:11:10',
                    },
                  ],
                },
              ],
            },
            name: 'array_storeLengthForEncoding_t_string_memory_ptr_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '180:3:10',
                type: '',
              },
              {
                name: 'length',
                nodeType: 'YulTypedName',
                src: '185:6:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'updated_pos',
                nodeType: 'YulTypedName',
                src: '196:11:10',
                type: '',
              },
            ],
            src: '112:169:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '349:184:10',
              statements: [
                {
                  nodeType: 'YulVariableDeclaration',
                  src: '359:10:10',
                  value: {
                    kind: 'number',
                    nodeType: 'YulLiteral',
                    src: '368:1:10',
                    type: '',
                    value: '0',
                  },
                  variables: [
                    {
                      name: 'i',
                      nodeType: 'YulTypedName',
                      src: '363:1:10',
                      type: '',
                    },
                  ],
                },
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '428:63:10',
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: 'dst',
                                  nodeType: 'YulIdentifier',
                                  src: '453:3:10',
                                },
                                {
                                  name: 'i',
                                  nodeType: 'YulIdentifier',
                                  src: '458:1:10',
                                },
                              ],
                              functionName: {
                                name: 'add',
                                nodeType: 'YulIdentifier',
                                src: '449:3:10',
                              },
                              nodeType: 'YulFunctionCall',
                              src: '449:11:10',
                            },
                            {
                              arguments: [
                                {
                                  arguments: [
                                    {
                                      name: 'src',
                                      nodeType: 'YulIdentifier',
                                      src: '472:3:10',
                                    },
                                    {
                                      name: 'i',
                                      nodeType: 'YulIdentifier',
                                      src: '477:1:10',
                                    },
                                  ],
                                  functionName: {
                                    name: 'add',
                                    nodeType: 'YulIdentifier',
                                    src: '468:3:10',
                                  },
                                  nodeType: 'YulFunctionCall',
                                  src: '468:11:10',
                                },
                              ],
                              functionName: {
                                name: 'mload',
                                nodeType: 'YulIdentifier',
                                src: '462:5:10',
                              },
                              nodeType: 'YulFunctionCall',
                              src: '462:18:10',
                            },
                          ],
                          functionName: {
                            name: 'mstore',
                            nodeType: 'YulIdentifier',
                            src: '442:6:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '442:39:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '442:39:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: 'i',
                        nodeType: 'YulIdentifier',
                        src: '389:1:10',
                      },
                      {
                        name: 'length',
                        nodeType: 'YulIdentifier',
                        src: '392:6:10',
                      },
                    ],
                    functionName: {
                      name: 'lt',
                      nodeType: 'YulIdentifier',
                      src: '386:2:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '386:13:10',
                  },
                  nodeType: 'YulForLoop',
                  post: {
                    nodeType: 'YulBlock',
                    src: '400:19:10',
                    statements: [
                      {
                        nodeType: 'YulAssignment',
                        src: '402:15:10',
                        value: {
                          arguments: [
                            {
                              name: 'i',
                              nodeType: 'YulIdentifier',
                              src: '411:1:10',
                            },
                            {
                              kind: 'number',
                              nodeType: 'YulLiteral',
                              src: '414:2:10',
                              type: '',
                              value: '32',
                            },
                          ],
                          functionName: {
                            name: 'add',
                            nodeType: 'YulIdentifier',
                            src: '407:3:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '407:10:10',
                        },
                        variableNames: [
                          {
                            name: 'i',
                            nodeType: 'YulIdentifier',
                            src: '402:1:10',
                          },
                        ],
                      },
                    ],
                  },
                  pre: {
                    nodeType: 'YulBlock',
                    src: '382:3:10',
                    statements: [],
                  },
                  src: '378:113:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'dst',
                            nodeType: 'YulIdentifier',
                            src: '511:3:10',
                          },
                          {
                            name: 'length',
                            nodeType: 'YulIdentifier',
                            src: '516:6:10',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '507:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '507:16:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '525:1:10',
                        type: '',
                        value: '0',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '500:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '500:27:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '500:27:10',
                },
              ],
            },
            name: 'copy_memory_to_memory_with_cleanup',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'src',
                nodeType: 'YulTypedName',
                src: '331:3:10',
                type: '',
              },
              {
                name: 'dst',
                nodeType: 'YulTypedName',
                src: '336:3:10',
                type: '',
              },
              {
                name: 'length',
                nodeType: 'YulTypedName',
                src: '341:6:10',
                type: '',
              },
            ],
            src: '287:246:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '587:54:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '597:38:10',
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'value',
                            nodeType: 'YulIdentifier',
                            src: '615:5:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '622:2:10',
                            type: '',
                            value: '31',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '611:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '611:14:10',
                      },
                      {
                        arguments: [
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '631:2:10',
                            type: '',
                            value: '31',
                          },
                        ],
                        functionName: {
                          name: 'not',
                          nodeType: 'YulIdentifier',
                          src: '627:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '627:7:10',
                      },
                    ],
                    functionName: {
                      name: 'and',
                      nodeType: 'YulIdentifier',
                      src: '607:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '607:28:10',
                  },
                  variableNames: [
                    {
                      name: 'result',
                      nodeType: 'YulIdentifier',
                      src: '597:6:10',
                    },
                  ],
                },
              ],
            },
            name: 'round_up_to_mul_of_32',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '570:5:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'result',
                nodeType: 'YulTypedName',
                src: '580:6:10',
                type: '',
              },
            ],
            src: '539:102:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '739:285:10',
              statements: [
                {
                  nodeType: 'YulVariableDeclaration',
                  src: '749:53:10',
                  value: {
                    arguments: [
                      {
                        name: 'value',
                        nodeType: 'YulIdentifier',
                        src: '796:5:10',
                      },
                    ],
                    functionName: {
                      name: 'array_length_t_string_memory_ptr',
                      nodeType: 'YulIdentifier',
                      src: '763:32:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '763:39:10',
                  },
                  variables: [
                    {
                      name: 'length',
                      nodeType: 'YulTypedName',
                      src: '753:6:10',
                      type: '',
                    },
                  ],
                },
                {
                  nodeType: 'YulAssignment',
                  src: '811:78:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '877:3:10',
                      },
                      {
                        name: 'length',
                        nodeType: 'YulIdentifier',
                        src: '882:6:10',
                      },
                    ],
                    functionName: {
                      name: 'array_storeLengthForEncoding_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '818:58:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '818:71:10',
                  },
                  variableNames: [
                    {
                      name: 'pos',
                      nodeType: 'YulIdentifier',
                      src: '811:3:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'value',
                            nodeType: 'YulIdentifier',
                            src: '937:5:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '944:4:10',
                            type: '',
                            value: '0x20',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '933:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '933:16:10',
                      },
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '951:3:10',
                      },
                      {
                        name: 'length',
                        nodeType: 'YulIdentifier',
                        src: '956:6:10',
                      },
                    ],
                    functionName: {
                      name: 'copy_memory_to_memory_with_cleanup',
                      nodeType: 'YulIdentifier',
                      src: '898:34:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '898:65:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '898:65:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '972:46:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '983:3:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'length',
                            nodeType: 'YulIdentifier',
                            src: '1010:6:10',
                          },
                        ],
                        functionName: {
                          name: 'round_up_to_mul_of_32',
                          nodeType: 'YulIdentifier',
                          src: '988:21:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '988:29:10',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '979:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '979:39:10',
                  },
                  variableNames: [
                    {
                      name: 'end',
                      nodeType: 'YulIdentifier',
                      src: '972:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '720:5:10',
                type: '',
              },
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '727:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '735:3:10',
                type: '',
              },
            ],
            src: '647:377:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '1148:195:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '1158:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '1170:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '1181:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '1166:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '1166:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '1158:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '1205:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '1216:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '1201:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '1201:17:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'tail',
                            nodeType: 'YulIdentifier',
                            src: '1224:4:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '1230:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '1220:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '1220:20:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '1194:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '1194:47:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '1194:47:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '1250:86:10',
                  value: {
                    arguments: [
                      {
                        name: 'value0',
                        nodeType: 'YulIdentifier',
                        src: '1322:6:10',
                      },
                      {
                        name: 'tail',
                        nodeType: 'YulIdentifier',
                        src: '1331:4:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '1258:63:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '1258:78:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '1250:4:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '1120:9:10',
                type: '',
              },
              {
                name: 'value0',
                nodeType: 'YulTypedName',
                src: '1132:6:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '1143:4:10',
                type: '',
              },
            ],
            src: '1030:313:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '1389:35:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '1399:19:10',
                  value: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '1415:2:10',
                        type: '',
                        value: '64',
                      },
                    ],
                    functionName: {
                      name: 'mload',
                      nodeType: 'YulIdentifier',
                      src: '1409:5:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '1409:9:10',
                  },
                  variableNames: [
                    {
                      name: 'memPtr',
                      nodeType: 'YulIdentifier',
                      src: '1399:6:10',
                    },
                  ],
                },
              ],
            },
            name: 'allocate_unbounded',
            nodeType: 'YulFunctionDefinition',
            returnVariables: [
              {
                name: 'memPtr',
                nodeType: 'YulTypedName',
                src: '1382:6:10',
                type: '',
              },
            ],
            src: '1349:75:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '1519:28:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '1536:1:10',
                        type: '',
                        value: '0',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '1539:1:10',
                        type: '',
                        value: '0',
                      },
                    ],
                    functionName: {
                      name: 'revert',
                      nodeType: 'YulIdentifier',
                      src: '1529:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '1529:12:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '1529:12:10',
                },
              ],
            },
            name: 'revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b',
            nodeType: 'YulFunctionDefinition',
            src: '1430:117:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '1642:28:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '1659:1:10',
                        type: '',
                        value: '0',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '1662:1:10',
                        type: '',
                        value: '0',
                      },
                    ],
                    functionName: {
                      name: 'revert',
                      nodeType: 'YulIdentifier',
                      src: '1652:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '1652:12:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '1652:12:10',
                },
              ],
            },
            name: 'revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db',
            nodeType: 'YulFunctionDefinition',
            src: '1553:117:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '1721:81:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '1731:65:10',
                  value: {
                    arguments: [
                      {
                        name: 'value',
                        nodeType: 'YulIdentifier',
                        src: '1746:5:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '1753:42:10',
                        type: '',
                        value: '0xffffffffffffffffffffffffffffffffffffffff',
                      },
                    ],
                    functionName: {
                      name: 'and',
                      nodeType: 'YulIdentifier',
                      src: '1742:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '1742:54:10',
                  },
                  variableNames: [
                    {
                      name: 'cleaned',
                      nodeType: 'YulIdentifier',
                      src: '1731:7:10',
                    },
                  ],
                },
              ],
            },
            name: 'cleanup_t_uint160',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '1703:5:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'cleaned',
                nodeType: 'YulTypedName',
                src: '1713:7:10',
                type: '',
              },
            ],
            src: '1676:126:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '1853:51:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '1863:35:10',
                  value: {
                    arguments: [
                      {
                        name: 'value',
                        nodeType: 'YulIdentifier',
                        src: '1892:5:10',
                      },
                    ],
                    functionName: {
                      name: 'cleanup_t_uint160',
                      nodeType: 'YulIdentifier',
                      src: '1874:17:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '1874:24:10',
                  },
                  variableNames: [
                    {
                      name: 'cleaned',
                      nodeType: 'YulIdentifier',
                      src: '1863:7:10',
                    },
                  ],
                },
              ],
            },
            name: 'cleanup_t_address',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '1835:5:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'cleaned',
                nodeType: 'YulTypedName',
                src: '1845:7:10',
                type: '',
              },
            ],
            src: '1808:96:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '1953:79:10',
              statements: [
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '2010:16:10',
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: 'number',
                              nodeType: 'YulLiteral',
                              src: '2019:1:10',
                              type: '',
                              value: '0',
                            },
                            {
                              kind: 'number',
                              nodeType: 'YulLiteral',
                              src: '2022:1:10',
                              type: '',
                              value: '0',
                            },
                          ],
                          functionName: {
                            name: 'revert',
                            nodeType: 'YulIdentifier',
                            src: '2012:6:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '2012:12:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '2012:12:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'value',
                            nodeType: 'YulIdentifier',
                            src: '1976:5:10',
                          },
                          {
                            arguments: [
                              {
                                name: 'value',
                                nodeType: 'YulIdentifier',
                                src: '2001:5:10',
                              },
                            ],
                            functionName: {
                              name: 'cleanup_t_address',
                              nodeType: 'YulIdentifier',
                              src: '1983:17:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '1983:24:10',
                          },
                        ],
                        functionName: {
                          name: 'eq',
                          nodeType: 'YulIdentifier',
                          src: '1973:2:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '1973:35:10',
                      },
                    ],
                    functionName: {
                      name: 'iszero',
                      nodeType: 'YulIdentifier',
                      src: '1966:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '1966:43:10',
                  },
                  nodeType: 'YulIf',
                  src: '1963:63:10',
                },
              ],
            },
            name: 'validator_revert_t_address',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '1946:5:10',
                type: '',
              },
            ],
            src: '1910:122:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '2090:87:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '2100:29:10',
                  value: {
                    arguments: [
                      {
                        name: 'offset',
                        nodeType: 'YulIdentifier',
                        src: '2122:6:10',
                      },
                    ],
                    functionName: {
                      name: 'calldataload',
                      nodeType: 'YulIdentifier',
                      src: '2109:12:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '2109:20:10',
                  },
                  variableNames: [
                    {
                      name: 'value',
                      nodeType: 'YulIdentifier',
                      src: '2100:5:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'value',
                        nodeType: 'YulIdentifier',
                        src: '2165:5:10',
                      },
                    ],
                    functionName: {
                      name: 'validator_revert_t_address',
                      nodeType: 'YulIdentifier',
                      src: '2138:26:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '2138:33:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '2138:33:10',
                },
              ],
            },
            name: 'abi_decode_t_address',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'offset',
                nodeType: 'YulTypedName',
                src: '2068:6:10',
                type: '',
              },
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '2076:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '2084:5:10',
                type: '',
              },
            ],
            src: '2038:139:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '2228:32:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '2238:16:10',
                  value: {
                    name: 'value',
                    nodeType: 'YulIdentifier',
                    src: '2249:5:10',
                  },
                  variableNames: [
                    {
                      name: 'cleaned',
                      nodeType: 'YulIdentifier',
                      src: '2238:7:10',
                    },
                  ],
                },
              ],
            },
            name: 'cleanup_t_uint256',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '2210:5:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'cleaned',
                nodeType: 'YulTypedName',
                src: '2220:7:10',
                type: '',
              },
            ],
            src: '2183:77:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '2309:79:10',
              statements: [
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '2366:16:10',
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: 'number',
                              nodeType: 'YulLiteral',
                              src: '2375:1:10',
                              type: '',
                              value: '0',
                            },
                            {
                              kind: 'number',
                              nodeType: 'YulLiteral',
                              src: '2378:1:10',
                              type: '',
                              value: '0',
                            },
                          ],
                          functionName: {
                            name: 'revert',
                            nodeType: 'YulIdentifier',
                            src: '2368:6:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '2368:12:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '2368:12:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'value',
                            nodeType: 'YulIdentifier',
                            src: '2332:5:10',
                          },
                          {
                            arguments: [
                              {
                                name: 'value',
                                nodeType: 'YulIdentifier',
                                src: '2357:5:10',
                              },
                            ],
                            functionName: {
                              name: 'cleanup_t_uint256',
                              nodeType: 'YulIdentifier',
                              src: '2339:17:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '2339:24:10',
                          },
                        ],
                        functionName: {
                          name: 'eq',
                          nodeType: 'YulIdentifier',
                          src: '2329:2:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '2329:35:10',
                      },
                    ],
                    functionName: {
                      name: 'iszero',
                      nodeType: 'YulIdentifier',
                      src: '2322:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '2322:43:10',
                  },
                  nodeType: 'YulIf',
                  src: '2319:63:10',
                },
              ],
            },
            name: 'validator_revert_t_uint256',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '2302:5:10',
                type: '',
              },
            ],
            src: '2266:122:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '2446:87:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '2456:29:10',
                  value: {
                    arguments: [
                      {
                        name: 'offset',
                        nodeType: 'YulIdentifier',
                        src: '2478:6:10',
                      },
                    ],
                    functionName: {
                      name: 'calldataload',
                      nodeType: 'YulIdentifier',
                      src: '2465:12:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '2465:20:10',
                  },
                  variableNames: [
                    {
                      name: 'value',
                      nodeType: 'YulIdentifier',
                      src: '2456:5:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'value',
                        nodeType: 'YulIdentifier',
                        src: '2521:5:10',
                      },
                    ],
                    functionName: {
                      name: 'validator_revert_t_uint256',
                      nodeType: 'YulIdentifier',
                      src: '2494:26:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '2494:33:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '2494:33:10',
                },
              ],
            },
            name: 'abi_decode_t_uint256',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'offset',
                nodeType: 'YulTypedName',
                src: '2424:6:10',
                type: '',
              },
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '2432:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '2440:5:10',
                type: '',
              },
            ],
            src: '2394:139:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '2622:391:10',
              statements: [
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '2668:83:10',
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: 'revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b',
                            nodeType: 'YulIdentifier',
                            src: '2670:77:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '2670:79:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '2670:79:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'dataEnd',
                            nodeType: 'YulIdentifier',
                            src: '2643:7:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '2652:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '2639:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '2639:23:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '2664:2:10',
                        type: '',
                        value: '64',
                      },
                    ],
                    functionName: {
                      name: 'slt',
                      nodeType: 'YulIdentifier',
                      src: '2635:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '2635:32:10',
                  },
                  nodeType: 'YulIf',
                  src: '2632:119:10',
                },
                {
                  nodeType: 'YulBlock',
                  src: '2761:117:10',
                  statements: [
                    {
                      nodeType: 'YulVariableDeclaration',
                      src: '2776:15:10',
                      value: {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '2790:1:10',
                        type: '',
                        value: '0',
                      },
                      variables: [
                        {
                          name: 'offset',
                          nodeType: 'YulTypedName',
                          src: '2780:6:10',
                          type: '',
                        },
                      ],
                    },
                    {
                      nodeType: 'YulAssignment',
                      src: '2805:63:10',
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: 'headStart',
                                nodeType: 'YulIdentifier',
                                src: '2840:9:10',
                              },
                              {
                                name: 'offset',
                                nodeType: 'YulIdentifier',
                                src: '2851:6:10',
                              },
                            ],
                            functionName: {
                              name: 'add',
                              nodeType: 'YulIdentifier',
                              src: '2836:3:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '2836:22:10',
                          },
                          {
                            name: 'dataEnd',
                            nodeType: 'YulIdentifier',
                            src: '2860:7:10',
                          },
                        ],
                        functionName: {
                          name: 'abi_decode_t_address',
                          nodeType: 'YulIdentifier',
                          src: '2815:20:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '2815:53:10',
                      },
                      variableNames: [
                        {
                          name: 'value0',
                          nodeType: 'YulIdentifier',
                          src: '2805:6:10',
                        },
                      ],
                    },
                  ],
                },
                {
                  nodeType: 'YulBlock',
                  src: '2888:118:10',
                  statements: [
                    {
                      nodeType: 'YulVariableDeclaration',
                      src: '2903:16:10',
                      value: {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '2917:2:10',
                        type: '',
                        value: '32',
                      },
                      variables: [
                        {
                          name: 'offset',
                          nodeType: 'YulTypedName',
                          src: '2907:6:10',
                          type: '',
                        },
                      ],
                    },
                    {
                      nodeType: 'YulAssignment',
                      src: '2933:63:10',
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: 'headStart',
                                nodeType: 'YulIdentifier',
                                src: '2968:9:10',
                              },
                              {
                                name: 'offset',
                                nodeType: 'YulIdentifier',
                                src: '2979:6:10',
                              },
                            ],
                            functionName: {
                              name: 'add',
                              nodeType: 'YulIdentifier',
                              src: '2964:3:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '2964:22:10',
                          },
                          {
                            name: 'dataEnd',
                            nodeType: 'YulIdentifier',
                            src: '2988:7:10',
                          },
                        ],
                        functionName: {
                          name: 'abi_decode_t_uint256',
                          nodeType: 'YulIdentifier',
                          src: '2943:20:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '2943:53:10',
                      },
                      variableNames: [
                        {
                          name: 'value1',
                          nodeType: 'YulIdentifier',
                          src: '2933:6:10',
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            name: 'abi_decode_tuple_t_addresst_uint256',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '2584:9:10',
                type: '',
              },
              {
                name: 'dataEnd',
                nodeType: 'YulTypedName',
                src: '2595:7:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'value0',
                nodeType: 'YulTypedName',
                src: '2607:6:10',
                type: '',
              },
              {
                name: 'value1',
                nodeType: 'YulTypedName',
                src: '2615:6:10',
                type: '',
              },
            ],
            src: '2539:474:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '3061:48:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '3071:32:10',
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'value',
                            nodeType: 'YulIdentifier',
                            src: '3096:5:10',
                          },
                        ],
                        functionName: {
                          name: 'iszero',
                          nodeType: 'YulIdentifier',
                          src: '3089:6:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '3089:13:10',
                      },
                    ],
                    functionName: {
                      name: 'iszero',
                      nodeType: 'YulIdentifier',
                      src: '3082:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '3082:21:10',
                  },
                  variableNames: [
                    {
                      name: 'cleaned',
                      nodeType: 'YulIdentifier',
                      src: '3071:7:10',
                    },
                  ],
                },
              ],
            },
            name: 'cleanup_t_bool',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '3043:5:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'cleaned',
                nodeType: 'YulTypedName',
                src: '3053:7:10',
                type: '',
              },
            ],
            src: '3019:90:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '3174:50:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '3191:3:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'value',
                            nodeType: 'YulIdentifier',
                            src: '3211:5:10',
                          },
                        ],
                        functionName: {
                          name: 'cleanup_t_bool',
                          nodeType: 'YulIdentifier',
                          src: '3196:14:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '3196:21:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '3184:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '3184:34:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '3184:34:10',
                },
              ],
            },
            name: 'abi_encode_t_bool_to_t_bool_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '3162:5:10',
                type: '',
              },
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '3169:3:10',
                type: '',
              },
            ],
            src: '3115:109:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '3322:118:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '3332:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '3344:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '3355:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '3340:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '3340:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '3332:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'value0',
                        nodeType: 'YulIdentifier',
                        src: '3406:6:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '3419:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '3430:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '3415:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '3415:17:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_bool_to_t_bool_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '3368:37:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '3368:65:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '3368:65:10',
                },
              ],
            },
            name: 'abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '3294:9:10',
                type: '',
              },
              {
                name: 'value0',
                nodeType: 'YulTypedName',
                src: '3306:6:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '3317:4:10',
                type: '',
              },
            ],
            src: '3230:210:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '3512:263:10',
              statements: [
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '3558:83:10',
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: 'revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b',
                            nodeType: 'YulIdentifier',
                            src: '3560:77:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '3560:79:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '3560:79:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'dataEnd',
                            nodeType: 'YulIdentifier',
                            src: '3533:7:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '3542:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '3529:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '3529:23:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '3554:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'slt',
                      nodeType: 'YulIdentifier',
                      src: '3525:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '3525:32:10',
                  },
                  nodeType: 'YulIf',
                  src: '3522:119:10',
                },
                {
                  nodeType: 'YulBlock',
                  src: '3651:117:10',
                  statements: [
                    {
                      nodeType: 'YulVariableDeclaration',
                      src: '3666:15:10',
                      value: {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '3680:1:10',
                        type: '',
                        value: '0',
                      },
                      variables: [
                        {
                          name: 'offset',
                          nodeType: 'YulTypedName',
                          src: '3670:6:10',
                          type: '',
                        },
                      ],
                    },
                    {
                      nodeType: 'YulAssignment',
                      src: '3695:63:10',
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: 'headStart',
                                nodeType: 'YulIdentifier',
                                src: '3730:9:10',
                              },
                              {
                                name: 'offset',
                                nodeType: 'YulIdentifier',
                                src: '3741:6:10',
                              },
                            ],
                            functionName: {
                              name: 'add',
                              nodeType: 'YulIdentifier',
                              src: '3726:3:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '3726:22:10',
                          },
                          {
                            name: 'dataEnd',
                            nodeType: 'YulIdentifier',
                            src: '3750:7:10',
                          },
                        ],
                        functionName: {
                          name: 'abi_decode_t_address',
                          nodeType: 'YulIdentifier',
                          src: '3705:20:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '3705:53:10',
                      },
                      variableNames: [
                        {
                          name: 'value0',
                          nodeType: 'YulIdentifier',
                          src: '3695:6:10',
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            name: 'abi_decode_tuple_t_address',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '3482:9:10',
                type: '',
              },
              {
                name: 'dataEnd',
                nodeType: 'YulTypedName',
                src: '3493:7:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'value0',
                nodeType: 'YulTypedName',
                src: '3505:6:10',
                type: '',
              },
            ],
            src: '3446:329:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '3846:53:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '3863:3:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'value',
                            nodeType: 'YulIdentifier',
                            src: '3886:5:10',
                          },
                        ],
                        functionName: {
                          name: 'cleanup_t_uint256',
                          nodeType: 'YulIdentifier',
                          src: '3868:17:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '3868:24:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '3856:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '3856:37:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '3856:37:10',
                },
              ],
            },
            name: 'abi_encode_t_uint256_to_t_uint256_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '3834:5:10',
                type: '',
              },
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '3841:3:10',
                type: '',
              },
            ],
            src: '3781:118:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '4003:124:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '4013:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '4025:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '4036:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '4021:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '4021:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '4013:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'value0',
                        nodeType: 'YulIdentifier',
                        src: '4093:6:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '4106:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '4117:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '4102:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '4102:17:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_uint256_to_t_uint256_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '4049:43:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '4049:71:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '4049:71:10',
                },
              ],
            },
            name: 'abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '3975:9:10',
                type: '',
              },
              {
                name: 'value0',
                nodeType: 'YulTypedName',
                src: '3987:6:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '3998:4:10',
                type: '',
              },
            ],
            src: '3905:222:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '4233:519:10',
              statements: [
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '4279:83:10',
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: 'revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b',
                            nodeType: 'YulIdentifier',
                            src: '4281:77:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '4281:79:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '4281:79:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'dataEnd',
                            nodeType: 'YulIdentifier',
                            src: '4254:7:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '4263:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '4250:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '4250:23:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '4275:2:10',
                        type: '',
                        value: '96',
                      },
                    ],
                    functionName: {
                      name: 'slt',
                      nodeType: 'YulIdentifier',
                      src: '4246:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '4246:32:10',
                  },
                  nodeType: 'YulIf',
                  src: '4243:119:10',
                },
                {
                  nodeType: 'YulBlock',
                  src: '4372:117:10',
                  statements: [
                    {
                      nodeType: 'YulVariableDeclaration',
                      src: '4387:15:10',
                      value: {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '4401:1:10',
                        type: '',
                        value: '0',
                      },
                      variables: [
                        {
                          name: 'offset',
                          nodeType: 'YulTypedName',
                          src: '4391:6:10',
                          type: '',
                        },
                      ],
                    },
                    {
                      nodeType: 'YulAssignment',
                      src: '4416:63:10',
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: 'headStart',
                                nodeType: 'YulIdentifier',
                                src: '4451:9:10',
                              },
                              {
                                name: 'offset',
                                nodeType: 'YulIdentifier',
                                src: '4462:6:10',
                              },
                            ],
                            functionName: {
                              name: 'add',
                              nodeType: 'YulIdentifier',
                              src: '4447:3:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '4447:22:10',
                          },
                          {
                            name: 'dataEnd',
                            nodeType: 'YulIdentifier',
                            src: '4471:7:10',
                          },
                        ],
                        functionName: {
                          name: 'abi_decode_t_address',
                          nodeType: 'YulIdentifier',
                          src: '4426:20:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '4426:53:10',
                      },
                      variableNames: [
                        {
                          name: 'value0',
                          nodeType: 'YulIdentifier',
                          src: '4416:6:10',
                        },
                      ],
                    },
                  ],
                },
                {
                  nodeType: 'YulBlock',
                  src: '4499:118:10',
                  statements: [
                    {
                      nodeType: 'YulVariableDeclaration',
                      src: '4514:16:10',
                      value: {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '4528:2:10',
                        type: '',
                        value: '32',
                      },
                      variables: [
                        {
                          name: 'offset',
                          nodeType: 'YulTypedName',
                          src: '4518:6:10',
                          type: '',
                        },
                      ],
                    },
                    {
                      nodeType: 'YulAssignment',
                      src: '4544:63:10',
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: 'headStart',
                                nodeType: 'YulIdentifier',
                                src: '4579:9:10',
                              },
                              {
                                name: 'offset',
                                nodeType: 'YulIdentifier',
                                src: '4590:6:10',
                              },
                            ],
                            functionName: {
                              name: 'add',
                              nodeType: 'YulIdentifier',
                              src: '4575:3:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '4575:22:10',
                          },
                          {
                            name: 'dataEnd',
                            nodeType: 'YulIdentifier',
                            src: '4599:7:10',
                          },
                        ],
                        functionName: {
                          name: 'abi_decode_t_address',
                          nodeType: 'YulIdentifier',
                          src: '4554:20:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '4554:53:10',
                      },
                      variableNames: [
                        {
                          name: 'value1',
                          nodeType: 'YulIdentifier',
                          src: '4544:6:10',
                        },
                      ],
                    },
                  ],
                },
                {
                  nodeType: 'YulBlock',
                  src: '4627:118:10',
                  statements: [
                    {
                      nodeType: 'YulVariableDeclaration',
                      src: '4642:16:10',
                      value: {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '4656:2:10',
                        type: '',
                        value: '64',
                      },
                      variables: [
                        {
                          name: 'offset',
                          nodeType: 'YulTypedName',
                          src: '4646:6:10',
                          type: '',
                        },
                      ],
                    },
                    {
                      nodeType: 'YulAssignment',
                      src: '4672:63:10',
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: 'headStart',
                                nodeType: 'YulIdentifier',
                                src: '4707:9:10',
                              },
                              {
                                name: 'offset',
                                nodeType: 'YulIdentifier',
                                src: '4718:6:10',
                              },
                            ],
                            functionName: {
                              name: 'add',
                              nodeType: 'YulIdentifier',
                              src: '4703:3:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '4703:22:10',
                          },
                          {
                            name: 'dataEnd',
                            nodeType: 'YulIdentifier',
                            src: '4727:7:10',
                          },
                        ],
                        functionName: {
                          name: 'abi_decode_t_uint256',
                          nodeType: 'YulIdentifier',
                          src: '4682:20:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '4682:53:10',
                      },
                      variableNames: [
                        {
                          name: 'value2',
                          nodeType: 'YulIdentifier',
                          src: '4672:6:10',
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            name: 'abi_decode_tuple_t_addresst_addresst_uint256',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '4187:9:10',
                type: '',
              },
              {
                name: 'dataEnd',
                nodeType: 'YulTypedName',
                src: '4198:7:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'value0',
                nodeType: 'YulTypedName',
                src: '4210:6:10',
                type: '',
              },
              {
                name: 'value1',
                nodeType: 'YulTypedName',
                src: '4218:6:10',
                type: '',
              },
              {
                name: 'value2',
                nodeType: 'YulTypedName',
                src: '4226:6:10',
                type: '',
              },
            ],
            src: '4133:619:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '4824:263:10',
              statements: [
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '4870:83:10',
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: 'revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b',
                            nodeType: 'YulIdentifier',
                            src: '4872:77:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '4872:79:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '4872:79:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'dataEnd',
                            nodeType: 'YulIdentifier',
                            src: '4845:7:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '4854:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '4841:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '4841:23:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '4866:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'slt',
                      nodeType: 'YulIdentifier',
                      src: '4837:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '4837:32:10',
                  },
                  nodeType: 'YulIf',
                  src: '4834:119:10',
                },
                {
                  nodeType: 'YulBlock',
                  src: '4963:117:10',
                  statements: [
                    {
                      nodeType: 'YulVariableDeclaration',
                      src: '4978:15:10',
                      value: {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '4992:1:10',
                        type: '',
                        value: '0',
                      },
                      variables: [
                        {
                          name: 'offset',
                          nodeType: 'YulTypedName',
                          src: '4982:6:10',
                          type: '',
                        },
                      ],
                    },
                    {
                      nodeType: 'YulAssignment',
                      src: '5007:63:10',
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: 'headStart',
                                nodeType: 'YulIdentifier',
                                src: '5042:9:10',
                              },
                              {
                                name: 'offset',
                                nodeType: 'YulIdentifier',
                                src: '5053:6:10',
                              },
                            ],
                            functionName: {
                              name: 'add',
                              nodeType: 'YulIdentifier',
                              src: '5038:3:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '5038:22:10',
                          },
                          {
                            name: 'dataEnd',
                            nodeType: 'YulIdentifier',
                            src: '5062:7:10',
                          },
                        ],
                        functionName: {
                          name: 'abi_decode_t_uint256',
                          nodeType: 'YulIdentifier',
                          src: '5017:20:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '5017:53:10',
                      },
                      variableNames: [
                        {
                          name: 'value0',
                          nodeType: 'YulIdentifier',
                          src: '5007:6:10',
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            name: 'abi_decode_tuple_t_uint256',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '4794:9:10',
                type: '',
              },
              {
                name: 'dataEnd',
                nodeType: 'YulTypedName',
                src: '4805:7:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'value0',
                nodeType: 'YulTypedName',
                src: '4817:6:10',
                type: '',
              },
            ],
            src: '4758:329:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '5136:43:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '5146:27:10',
                  value: {
                    arguments: [
                      {
                        name: 'value',
                        nodeType: 'YulIdentifier',
                        src: '5161:5:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '5168:4:10',
                        type: '',
                        value: '0xff',
                      },
                    ],
                    functionName: {
                      name: 'and',
                      nodeType: 'YulIdentifier',
                      src: '5157:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '5157:16:10',
                  },
                  variableNames: [
                    {
                      name: 'cleaned',
                      nodeType: 'YulIdentifier',
                      src: '5146:7:10',
                    },
                  ],
                },
              ],
            },
            name: 'cleanup_t_uint8',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '5118:5:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'cleaned',
                nodeType: 'YulTypedName',
                src: '5128:7:10',
                type: '',
              },
            ],
            src: '5093:86:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '5246:51:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '5263:3:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'value',
                            nodeType: 'YulIdentifier',
                            src: '5284:5:10',
                          },
                        ],
                        functionName: {
                          name: 'cleanup_t_uint8',
                          nodeType: 'YulIdentifier',
                          src: '5268:15:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '5268:22:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '5256:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '5256:35:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '5256:35:10',
                },
              ],
            },
            name: 'abi_encode_t_uint8_to_t_uint8_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '5234:5:10',
                type: '',
              },
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '5241:3:10',
                type: '',
              },
            ],
            src: '5185:112:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '5397:120:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '5407:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '5419:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '5430:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '5415:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '5415:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '5407:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'value0',
                        nodeType: 'YulIdentifier',
                        src: '5483:6:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '5496:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '5507:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '5492:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '5492:17:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_uint8_to_t_uint8_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '5443:39:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '5443:67:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '5443:67:10',
                },
              ],
            },
            name: 'abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '5369:9:10',
                type: '',
              },
              {
                name: 'value0',
                nodeType: 'YulTypedName',
                src: '5381:6:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '5392:4:10',
                type: '',
              },
            ],
            src: '5303:214:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '5575:56:10',
              statements: [
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '5609:16:10',
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: 'number',
                              nodeType: 'YulLiteral',
                              src: '5618:1:10',
                              type: '',
                              value: '0',
                            },
                            {
                              kind: 'number',
                              nodeType: 'YulLiteral',
                              src: '5621:1:10',
                              type: '',
                              value: '0',
                            },
                          ],
                          functionName: {
                            name: 'revert',
                            nodeType: 'YulIdentifier',
                            src: '5611:6:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '5611:12:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '5611:12:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'value',
                            nodeType: 'YulIdentifier',
                            src: '5598:5:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '5605:1:10',
                            type: '',
                            value: '7',
                          },
                        ],
                        functionName: {
                          name: 'lt',
                          nodeType: 'YulIdentifier',
                          src: '5595:2:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '5595:12:10',
                      },
                    ],
                    functionName: {
                      name: 'iszero',
                      nodeType: 'YulIdentifier',
                      src: '5588:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '5588:20:10',
                  },
                  nodeType: 'YulIf',
                  src: '5585:40:10',
                },
              ],
            },
            name: 'validator_revert_t_enum$_Pools_$861',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '5568:5:10',
                type: '',
              },
            ],
            src: '5523:108:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '5698:96:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '5708:29:10',
                  value: {
                    arguments: [
                      {
                        name: 'offset',
                        nodeType: 'YulIdentifier',
                        src: '5730:6:10',
                      },
                    ],
                    functionName: {
                      name: 'calldataload',
                      nodeType: 'YulIdentifier',
                      src: '5717:12:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '5717:20:10',
                  },
                  variableNames: [
                    {
                      name: 'value',
                      nodeType: 'YulIdentifier',
                      src: '5708:5:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'value',
                        nodeType: 'YulIdentifier',
                        src: '5782:5:10',
                      },
                    ],
                    functionName: {
                      name: 'validator_revert_t_enum$_Pools_$861',
                      nodeType: 'YulIdentifier',
                      src: '5746:35:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '5746:42:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '5746:42:10',
                },
              ],
            },
            name: 'abi_decode_t_enum$_Pools_$861',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'offset',
                nodeType: 'YulTypedName',
                src: '5676:6:10',
                type: '',
              },
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '5684:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '5692:5:10',
                type: '',
              },
            ],
            src: '5637:157:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '5841:77:10',
              statements: [
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '5896:16:10',
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: 'number',
                              nodeType: 'YulLiteral',
                              src: '5905:1:10',
                              type: '',
                              value: '0',
                            },
                            {
                              kind: 'number',
                              nodeType: 'YulLiteral',
                              src: '5908:1:10',
                              type: '',
                              value: '0',
                            },
                          ],
                          functionName: {
                            name: 'revert',
                            nodeType: 'YulIdentifier',
                            src: '5898:6:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '5898:12:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '5898:12:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'value',
                            nodeType: 'YulIdentifier',
                            src: '5864:5:10',
                          },
                          {
                            arguments: [
                              {
                                name: 'value',
                                nodeType: 'YulIdentifier',
                                src: '5887:5:10',
                              },
                            ],
                            functionName: {
                              name: 'cleanup_t_uint8',
                              nodeType: 'YulIdentifier',
                              src: '5871:15:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '5871:22:10',
                          },
                        ],
                        functionName: {
                          name: 'eq',
                          nodeType: 'YulIdentifier',
                          src: '5861:2:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '5861:33:10',
                      },
                    ],
                    functionName: {
                      name: 'iszero',
                      nodeType: 'YulIdentifier',
                      src: '5854:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '5854:41:10',
                  },
                  nodeType: 'YulIf',
                  src: '5851:61:10',
                },
              ],
            },
            name: 'validator_revert_t_uint8',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '5834:5:10',
                type: '',
              },
            ],
            src: '5800:118:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '5974:85:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '5984:29:10',
                  value: {
                    arguments: [
                      {
                        name: 'offset',
                        nodeType: 'YulIdentifier',
                        src: '6006:6:10',
                      },
                    ],
                    functionName: {
                      name: 'calldataload',
                      nodeType: 'YulIdentifier',
                      src: '5993:12:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '5993:20:10',
                  },
                  variableNames: [
                    {
                      name: 'value',
                      nodeType: 'YulIdentifier',
                      src: '5984:5:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'value',
                        nodeType: 'YulIdentifier',
                        src: '6047:5:10',
                      },
                    ],
                    functionName: {
                      name: 'validator_revert_t_uint8',
                      nodeType: 'YulIdentifier',
                      src: '6022:24:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '6022:31:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '6022:31:10',
                },
              ],
            },
            name: 'abi_decode_t_uint8',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'offset',
                nodeType: 'YulTypedName',
                src: '5952:6:10',
                type: '',
              },
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '5960:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '5968:5:10',
                type: '',
              },
            ],
            src: '5924:135:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '6155:398:10',
              statements: [
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '6201:83:10',
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: 'revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b',
                            nodeType: 'YulIdentifier',
                            src: '6203:77:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '6203:79:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '6203:79:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'dataEnd',
                            nodeType: 'YulIdentifier',
                            src: '6176:7:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '6185:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '6172:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '6172:23:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '6197:2:10',
                        type: '',
                        value: '64',
                      },
                    ],
                    functionName: {
                      name: 'slt',
                      nodeType: 'YulIdentifier',
                      src: '6168:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '6168:32:10',
                  },
                  nodeType: 'YulIf',
                  src: '6165:119:10',
                },
                {
                  nodeType: 'YulBlock',
                  src: '6294:126:10',
                  statements: [
                    {
                      nodeType: 'YulVariableDeclaration',
                      src: '6309:15:10',
                      value: {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '6323:1:10',
                        type: '',
                        value: '0',
                      },
                      variables: [
                        {
                          name: 'offset',
                          nodeType: 'YulTypedName',
                          src: '6313:6:10',
                          type: '',
                        },
                      ],
                    },
                    {
                      nodeType: 'YulAssignment',
                      src: '6338:72:10',
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: 'headStart',
                                nodeType: 'YulIdentifier',
                                src: '6382:9:10',
                              },
                              {
                                name: 'offset',
                                nodeType: 'YulIdentifier',
                                src: '6393:6:10',
                              },
                            ],
                            functionName: {
                              name: 'add',
                              nodeType: 'YulIdentifier',
                              src: '6378:3:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '6378:22:10',
                          },
                          {
                            name: 'dataEnd',
                            nodeType: 'YulIdentifier',
                            src: '6402:7:10',
                          },
                        ],
                        functionName: {
                          name: 'abi_decode_t_enum$_Pools_$861',
                          nodeType: 'YulIdentifier',
                          src: '6348:29:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '6348:62:10',
                      },
                      variableNames: [
                        {
                          name: 'value0',
                          nodeType: 'YulIdentifier',
                          src: '6338:6:10',
                        },
                      ],
                    },
                  ],
                },
                {
                  nodeType: 'YulBlock',
                  src: '6430:116:10',
                  statements: [
                    {
                      nodeType: 'YulVariableDeclaration',
                      src: '6445:16:10',
                      value: {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '6459:2:10',
                        type: '',
                        value: '32',
                      },
                      variables: [
                        {
                          name: 'offset',
                          nodeType: 'YulTypedName',
                          src: '6449:6:10',
                          type: '',
                        },
                      ],
                    },
                    {
                      nodeType: 'YulAssignment',
                      src: '6475:61:10',
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: 'headStart',
                                nodeType: 'YulIdentifier',
                                src: '6508:9:10',
                              },
                              {
                                name: 'offset',
                                nodeType: 'YulIdentifier',
                                src: '6519:6:10',
                              },
                            ],
                            functionName: {
                              name: 'add',
                              nodeType: 'YulIdentifier',
                              src: '6504:3:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '6504:22:10',
                          },
                          {
                            name: 'dataEnd',
                            nodeType: 'YulIdentifier',
                            src: '6528:7:10',
                          },
                        ],
                        functionName: {
                          name: 'abi_decode_t_uint8',
                          nodeType: 'YulIdentifier',
                          src: '6485:18:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '6485:51:10',
                      },
                      variableNames: [
                        {
                          name: 'value1',
                          nodeType: 'YulIdentifier',
                          src: '6475:6:10',
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            name: 'abi_decode_tuple_t_enum$_Pools_$861t_uint8',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '6117:9:10',
                type: '',
              },
              {
                name: 'dataEnd',
                nodeType: 'YulTypedName',
                src: '6128:7:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'value0',
                nodeType: 'YulTypedName',
                src: '6140:6:10',
                type: '',
              },
              {
                name: 'value1',
                nodeType: 'YulTypedName',
                src: '6148:6:10',
                type: '',
              },
            ],
            src: '6065:488:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '6634:272:10',
              statements: [
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '6680:83:10',
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: 'revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b',
                            nodeType: 'YulIdentifier',
                            src: '6682:77:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '6682:79:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '6682:79:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'dataEnd',
                            nodeType: 'YulIdentifier',
                            src: '6655:7:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '6664:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '6651:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '6651:23:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '6676:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'slt',
                      nodeType: 'YulIdentifier',
                      src: '6647:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '6647:32:10',
                  },
                  nodeType: 'YulIf',
                  src: '6644:119:10',
                },
                {
                  nodeType: 'YulBlock',
                  src: '6773:126:10',
                  statements: [
                    {
                      nodeType: 'YulVariableDeclaration',
                      src: '6788:15:10',
                      value: {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '6802:1:10',
                        type: '',
                        value: '0',
                      },
                      variables: [
                        {
                          name: 'offset',
                          nodeType: 'YulTypedName',
                          src: '6792:6:10',
                          type: '',
                        },
                      ],
                    },
                    {
                      nodeType: 'YulAssignment',
                      src: '6817:72:10',
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: 'headStart',
                                nodeType: 'YulIdentifier',
                                src: '6861:9:10',
                              },
                              {
                                name: 'offset',
                                nodeType: 'YulIdentifier',
                                src: '6872:6:10',
                              },
                            ],
                            functionName: {
                              name: 'add',
                              nodeType: 'YulIdentifier',
                              src: '6857:3:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '6857:22:10',
                          },
                          {
                            name: 'dataEnd',
                            nodeType: 'YulIdentifier',
                            src: '6881:7:10',
                          },
                        ],
                        functionName: {
                          name: 'abi_decode_t_enum$_Pools_$861',
                          nodeType: 'YulIdentifier',
                          src: '6827:29:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '6827:62:10',
                      },
                      variableNames: [
                        {
                          name: 'value0',
                          nodeType: 'YulIdentifier',
                          src: '6817:6:10',
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            name: 'abi_decode_tuple_t_enum$_Pools_$861',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '6604:9:10',
                type: '',
              },
              {
                name: 'dataEnd',
                nodeType: 'YulTypedName',
                src: '6615:7:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'value0',
                nodeType: 'YulTypedName',
                src: '6627:6:10',
                type: '',
              },
            ],
            src: '6559:347:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '6977:53:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '6994:3:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'value',
                            nodeType: 'YulIdentifier',
                            src: '7017:5:10',
                          },
                        ],
                        functionName: {
                          name: 'cleanup_t_address',
                          nodeType: 'YulIdentifier',
                          src: '6999:17:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '6999:24:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '6987:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '6987:37:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '6987:37:10',
                },
              ],
            },
            name: 'abi_encode_t_address_to_t_address_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '6965:5:10',
                type: '',
              },
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '6972:3:10',
                type: '',
              },
            ],
            src: '6912:118:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '7134:124:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '7144:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '7156:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '7167:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '7152:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '7152:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '7144:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'value0',
                        nodeType: 'YulIdentifier',
                        src: '7224:6:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '7237:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '7248:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '7233:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '7233:17:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_address_to_t_address_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '7180:43:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '7180:71:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '7180:71:10',
                },
              ],
            },
            name: 'abi_encode_tuple_t_address__to_t_address__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '7106:9:10',
                type: '',
              },
              {
                name: 'value0',
                nodeType: 'YulTypedName',
                src: '7118:6:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '7129:4:10',
                type: '',
              },
            ],
            src: '7036:222:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '7356:400:10',
              statements: [
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '7402:83:10',
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: 'revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b',
                            nodeType: 'YulIdentifier',
                            src: '7404:77:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '7404:79:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '7404:79:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'dataEnd',
                            nodeType: 'YulIdentifier',
                            src: '7377:7:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '7386:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '7373:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '7373:23:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '7398:2:10',
                        type: '',
                        value: '64',
                      },
                    ],
                    functionName: {
                      name: 'slt',
                      nodeType: 'YulIdentifier',
                      src: '7369:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '7369:32:10',
                  },
                  nodeType: 'YulIf',
                  src: '7366:119:10',
                },
                {
                  nodeType: 'YulBlock',
                  src: '7495:126:10',
                  statements: [
                    {
                      nodeType: 'YulVariableDeclaration',
                      src: '7510:15:10',
                      value: {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '7524:1:10',
                        type: '',
                        value: '0',
                      },
                      variables: [
                        {
                          name: 'offset',
                          nodeType: 'YulTypedName',
                          src: '7514:6:10',
                          type: '',
                        },
                      ],
                    },
                    {
                      nodeType: 'YulAssignment',
                      src: '7539:72:10',
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: 'headStart',
                                nodeType: 'YulIdentifier',
                                src: '7583:9:10',
                              },
                              {
                                name: 'offset',
                                nodeType: 'YulIdentifier',
                                src: '7594:6:10',
                              },
                            ],
                            functionName: {
                              name: 'add',
                              nodeType: 'YulIdentifier',
                              src: '7579:3:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '7579:22:10',
                          },
                          {
                            name: 'dataEnd',
                            nodeType: 'YulIdentifier',
                            src: '7603:7:10',
                          },
                        ],
                        functionName: {
                          name: 'abi_decode_t_enum$_Pools_$861',
                          nodeType: 'YulIdentifier',
                          src: '7549:29:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '7549:62:10',
                      },
                      variableNames: [
                        {
                          name: 'value0',
                          nodeType: 'YulIdentifier',
                          src: '7539:6:10',
                        },
                      ],
                    },
                  ],
                },
                {
                  nodeType: 'YulBlock',
                  src: '7631:118:10',
                  statements: [
                    {
                      nodeType: 'YulVariableDeclaration',
                      src: '7646:16:10',
                      value: {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '7660:2:10',
                        type: '',
                        value: '32',
                      },
                      variables: [
                        {
                          name: 'offset',
                          nodeType: 'YulTypedName',
                          src: '7650:6:10',
                          type: '',
                        },
                      ],
                    },
                    {
                      nodeType: 'YulAssignment',
                      src: '7676:63:10',
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: 'headStart',
                                nodeType: 'YulIdentifier',
                                src: '7711:9:10',
                              },
                              {
                                name: 'offset',
                                nodeType: 'YulIdentifier',
                                src: '7722:6:10',
                              },
                            ],
                            functionName: {
                              name: 'add',
                              nodeType: 'YulIdentifier',
                              src: '7707:3:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '7707:22:10',
                          },
                          {
                            name: 'dataEnd',
                            nodeType: 'YulIdentifier',
                            src: '7731:7:10',
                          },
                        ],
                        functionName: {
                          name: 'abi_decode_t_address',
                          nodeType: 'YulIdentifier',
                          src: '7686:20:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '7686:53:10',
                      },
                      variableNames: [
                        {
                          name: 'value1',
                          nodeType: 'YulIdentifier',
                          src: '7676:6:10',
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            name: 'abi_decode_tuple_t_enum$_Pools_$861t_address',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '7318:9:10',
                type: '',
              },
              {
                name: 'dataEnd',
                nodeType: 'YulTypedName',
                src: '7329:7:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'value0',
                nodeType: 'YulTypedName',
                src: '7341:6:10',
                type: '',
              },
              {
                name: 'value1',
                nodeType: 'YulTypedName',
                src: '7349:6:10',
                type: '',
              },
            ],
            src: '7264:492:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '7845:391:10',
              statements: [
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '7891:83:10',
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: 'revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b',
                            nodeType: 'YulIdentifier',
                            src: '7893:77:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '7893:79:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '7893:79:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'dataEnd',
                            nodeType: 'YulIdentifier',
                            src: '7866:7:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '7875:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '7862:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '7862:23:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '7887:2:10',
                        type: '',
                        value: '64',
                      },
                    ],
                    functionName: {
                      name: 'slt',
                      nodeType: 'YulIdentifier',
                      src: '7858:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '7858:32:10',
                  },
                  nodeType: 'YulIf',
                  src: '7855:119:10',
                },
                {
                  nodeType: 'YulBlock',
                  src: '7984:117:10',
                  statements: [
                    {
                      nodeType: 'YulVariableDeclaration',
                      src: '7999:15:10',
                      value: {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '8013:1:10',
                        type: '',
                        value: '0',
                      },
                      variables: [
                        {
                          name: 'offset',
                          nodeType: 'YulTypedName',
                          src: '8003:6:10',
                          type: '',
                        },
                      ],
                    },
                    {
                      nodeType: 'YulAssignment',
                      src: '8028:63:10',
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: 'headStart',
                                nodeType: 'YulIdentifier',
                                src: '8063:9:10',
                              },
                              {
                                name: 'offset',
                                nodeType: 'YulIdentifier',
                                src: '8074:6:10',
                              },
                            ],
                            functionName: {
                              name: 'add',
                              nodeType: 'YulIdentifier',
                              src: '8059:3:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '8059:22:10',
                          },
                          {
                            name: 'dataEnd',
                            nodeType: 'YulIdentifier',
                            src: '8083:7:10',
                          },
                        ],
                        functionName: {
                          name: 'abi_decode_t_address',
                          nodeType: 'YulIdentifier',
                          src: '8038:20:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '8038:53:10',
                      },
                      variableNames: [
                        {
                          name: 'value0',
                          nodeType: 'YulIdentifier',
                          src: '8028:6:10',
                        },
                      ],
                    },
                  ],
                },
                {
                  nodeType: 'YulBlock',
                  src: '8111:118:10',
                  statements: [
                    {
                      nodeType: 'YulVariableDeclaration',
                      src: '8126:16:10',
                      value: {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '8140:2:10',
                        type: '',
                        value: '32',
                      },
                      variables: [
                        {
                          name: 'offset',
                          nodeType: 'YulTypedName',
                          src: '8130:6:10',
                          type: '',
                        },
                      ],
                    },
                    {
                      nodeType: 'YulAssignment',
                      src: '8156:63:10',
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: 'headStart',
                                nodeType: 'YulIdentifier',
                                src: '8191:9:10',
                              },
                              {
                                name: 'offset',
                                nodeType: 'YulIdentifier',
                                src: '8202:6:10',
                              },
                            ],
                            functionName: {
                              name: 'add',
                              nodeType: 'YulIdentifier',
                              src: '8187:3:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '8187:22:10',
                          },
                          {
                            name: 'dataEnd',
                            nodeType: 'YulIdentifier',
                            src: '8211:7:10',
                          },
                        ],
                        functionName: {
                          name: 'abi_decode_t_address',
                          nodeType: 'YulIdentifier',
                          src: '8166:20:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '8166:53:10',
                      },
                      variableNames: [
                        {
                          name: 'value1',
                          nodeType: 'YulIdentifier',
                          src: '8156:6:10',
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            name: 'abi_decode_tuple_t_addresst_address',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '7807:9:10',
                type: '',
              },
              {
                name: 'dataEnd',
                nodeType: 'YulTypedName',
                src: '7818:7:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'value0',
                nodeType: 'YulTypedName',
                src: '7830:6:10',
                type: '',
              },
              {
                name: 'value1',
                nodeType: 'YulTypedName',
                src: '7838:6:10',
                type: '',
              },
            ],
            src: '7762:474:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '8270:152:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '8287:1:10',
                        type: '',
                        value: '0',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '8290:77:10',
                        type: '',
                        value:
                          '35408467139433450592217433187231851964531694900788300625387963629091585785856',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '8280:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '8280:88:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '8280:88:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '8384:1:10',
                        type: '',
                        value: '4',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '8387:4:10',
                        type: '',
                        value: '0x22',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '8377:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '8377:15:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '8377:15:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '8408:1:10',
                        type: '',
                        value: '0',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '8411:4:10',
                        type: '',
                        value: '0x24',
                      },
                    ],
                    functionName: {
                      name: 'revert',
                      nodeType: 'YulIdentifier',
                      src: '8401:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '8401:15:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '8401:15:10',
                },
              ],
            },
            name: 'panic_error_0x22',
            nodeType: 'YulFunctionDefinition',
            src: '8242:180:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '8479:269:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '8489:22:10',
                  value: {
                    arguments: [
                      {
                        name: 'data',
                        nodeType: 'YulIdentifier',
                        src: '8503:4:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '8509:1:10',
                        type: '',
                        value: '2',
                      },
                    ],
                    functionName: {
                      name: 'div',
                      nodeType: 'YulIdentifier',
                      src: '8499:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '8499:12:10',
                  },
                  variableNames: [
                    {
                      name: 'length',
                      nodeType: 'YulIdentifier',
                      src: '8489:6:10',
                    },
                  ],
                },
                {
                  nodeType: 'YulVariableDeclaration',
                  src: '8520:38:10',
                  value: {
                    arguments: [
                      {
                        name: 'data',
                        nodeType: 'YulIdentifier',
                        src: '8550:4:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '8556:1:10',
                        type: '',
                        value: '1',
                      },
                    ],
                    functionName: {
                      name: 'and',
                      nodeType: 'YulIdentifier',
                      src: '8546:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '8546:12:10',
                  },
                  variables: [
                    {
                      name: 'outOfPlaceEncoding',
                      nodeType: 'YulTypedName',
                      src: '8524:18:10',
                      type: '',
                    },
                  ],
                },
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '8597:51:10',
                    statements: [
                      {
                        nodeType: 'YulAssignment',
                        src: '8611:27:10',
                        value: {
                          arguments: [
                            {
                              name: 'length',
                              nodeType: 'YulIdentifier',
                              src: '8625:6:10',
                            },
                            {
                              kind: 'number',
                              nodeType: 'YulLiteral',
                              src: '8633:4:10',
                              type: '',
                              value: '0x7f',
                            },
                          ],
                          functionName: {
                            name: 'and',
                            nodeType: 'YulIdentifier',
                            src: '8621:3:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '8621:17:10',
                        },
                        variableNames: [
                          {
                            name: 'length',
                            nodeType: 'YulIdentifier',
                            src: '8611:6:10',
                          },
                        ],
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: 'outOfPlaceEncoding',
                        nodeType: 'YulIdentifier',
                        src: '8577:18:10',
                      },
                    ],
                    functionName: {
                      name: 'iszero',
                      nodeType: 'YulIdentifier',
                      src: '8570:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '8570:26:10',
                  },
                  nodeType: 'YulIf',
                  src: '8567:81:10',
                },
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '8700:42:10',
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: 'panic_error_0x22',
                            nodeType: 'YulIdentifier',
                            src: '8714:16:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '8714:18:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '8714:18:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: 'outOfPlaceEncoding',
                        nodeType: 'YulIdentifier',
                        src: '8664:18:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'length',
                            nodeType: 'YulIdentifier',
                            src: '8687:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '8695:2:10',
                            type: '',
                            value: '32',
                          },
                        ],
                        functionName: {
                          name: 'lt',
                          nodeType: 'YulIdentifier',
                          src: '8684:2:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '8684:14:10',
                      },
                    ],
                    functionName: {
                      name: 'eq',
                      nodeType: 'YulIdentifier',
                      src: '8661:2:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '8661:38:10',
                  },
                  nodeType: 'YulIf',
                  src: '8658:84:10',
                },
              ],
            },
            name: 'extract_byte_array_length',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'data',
                nodeType: 'YulTypedName',
                src: '8463:4:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'length',
                nodeType: 'YulTypedName',
                src: '8472:6:10',
                type: '',
              },
            ],
            src: '8428:320:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '8860:116:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '8882:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '8890:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '8878:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '8878:14:10',
                      },
                      {
                        hexValue:
                          '4f6e6c792061646d696e732063616e2063616c6c20746869732066756e637469',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '8894:34:10',
                        type: '',
                        value: 'Only admins can call this functi',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '8871:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '8871:58:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '8871:58:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '8950:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '8958:2:10',
                            type: '',
                            value: '32',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '8946:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '8946:15:10',
                      },
                      {
                        hexValue: '6f6e2e',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '8963:5:10',
                        type: '',
                        value: 'on.',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '8939:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '8939:30:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '8939:30:10',
                },
              ],
            },
            name: 'store_literal_in_memory_89f2fc1fb3fe768132d50b5b31f1bd6d568e5bf11f17f118e36b91c92aea4831',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'memPtr',
                nodeType: 'YulTypedName',
                src: '8852:6:10',
                type: '',
              },
            ],
            src: '8754:222:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '9128:220:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '9138:74:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '9204:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '9209:2:10',
                        type: '',
                        value: '35',
                      },
                    ],
                    functionName: {
                      name: 'array_storeLengthForEncoding_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '9145:58:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '9145:67:10',
                  },
                  variableNames: [
                    {
                      name: 'pos',
                      nodeType: 'YulIdentifier',
                      src: '9138:3:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '9310:3:10',
                      },
                    ],
                    functionName: {
                      name: 'store_literal_in_memory_89f2fc1fb3fe768132d50b5b31f1bd6d568e5bf11f17f118e36b91c92aea4831',
                      nodeType: 'YulIdentifier',
                      src: '9221:88:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '9221:93:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '9221:93:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '9323:19:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '9334:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '9339:2:10',
                        type: '',
                        value: '64',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '9330:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '9330:12:10',
                  },
                  variableNames: [
                    {
                      name: 'end',
                      nodeType: 'YulIdentifier',
                      src: '9323:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_t_stringliteral_89f2fc1fb3fe768132d50b5b31f1bd6d568e5bf11f17f118e36b91c92aea4831_to_t_string_memory_ptr_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '9116:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '9124:3:10',
                type: '',
              },
            ],
            src: '8982:366:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '9525:248:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '9535:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '9547:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '9558:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '9543:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '9543:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '9535:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '9582:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '9593:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '9578:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '9578:17:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'tail',
                            nodeType: 'YulIdentifier',
                            src: '9601:4:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '9607:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '9597:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '9597:20:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '9571:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '9571:47:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '9571:47:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '9627:139:10',
                  value: {
                    arguments: [
                      {
                        name: 'tail',
                        nodeType: 'YulIdentifier',
                        src: '9761:4:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_stringliteral_89f2fc1fb3fe768132d50b5b31f1bd6d568e5bf11f17f118e36b91c92aea4831_to_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '9635:124:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '9635:131:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '9627:4:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_tuple_t_stringliteral_89f2fc1fb3fe768132d50b5b31f1bd6d568e5bf11f17f118e36b91c92aea4831__to_t_string_memory_ptr__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '9505:9:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '9520:4:10',
                type: '',
              },
            ],
            src: '9354:419:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '9885:73:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '9907:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '9915:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '9903:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '9903:14:10',
                      },
                      {
                        hexValue: '496e73756666696369656e7420636f6e74726163742062616c616e6365',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '9919:31:10',
                        type: '',
                        value: 'Insufficient contract balance',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '9896:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '9896:55:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '9896:55:10',
                },
              ],
            },
            name: 'store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'memPtr',
                nodeType: 'YulTypedName',
                src: '9877:6:10',
                type: '',
              },
            ],
            src: '9779:179:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '10110:220:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '10120:74:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '10186:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '10191:2:10',
                        type: '',
                        value: '29',
                      },
                    ],
                    functionName: {
                      name: 'array_storeLengthForEncoding_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '10127:58:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '10127:67:10',
                  },
                  variableNames: [
                    {
                      name: 'pos',
                      nodeType: 'YulIdentifier',
                      src: '10120:3:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '10292:3:10',
                      },
                    ],
                    functionName: {
                      name: 'store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749',
                      nodeType: 'YulIdentifier',
                      src: '10203:88:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '10203:93:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '10203:93:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '10305:19:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '10316:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '10321:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '10312:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '10312:12:10',
                  },
                  variableNames: [
                    {
                      name: 'end',
                      nodeType: 'YulIdentifier',
                      src: '10305:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '10098:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '10106:3:10',
                type: '',
              },
            ],
            src: '9964:366:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '10507:248:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '10517:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '10529:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '10540:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '10525:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '10525:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '10517:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '10564:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '10575:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '10560:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '10560:17:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'tail',
                            nodeType: 'YulIdentifier',
                            src: '10583:4:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '10589:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '10579:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '10579:20:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '10553:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '10553:47:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '10553:47:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '10609:139:10',
                  value: {
                    arguments: [
                      {
                        name: 'tail',
                        nodeType: 'YulIdentifier',
                        src: '10743:4:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '10617:124:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '10617:131:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '10609:4:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '10487:9:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '10502:4:10',
                type: '',
              },
            ],
            src: '10336:419:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '10789:152:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '10806:1:10',
                        type: '',
                        value: '0',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '10809:77:10',
                        type: '',
                        value:
                          '35408467139433450592217433187231851964531694900788300625387963629091585785856',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '10799:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '10799:88:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '10799:88:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '10903:1:10',
                        type: '',
                        value: '4',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '10906:4:10',
                        type: '',
                        value: '0x12',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '10896:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '10896:15:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '10896:15:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '10927:1:10',
                        type: '',
                        value: '0',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '10930:4:10',
                        type: '',
                        value: '0x24',
                      },
                    ],
                    functionName: {
                      name: 'revert',
                      nodeType: 'YulIdentifier',
                      src: '10920:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '10920:15:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '10920:15:10',
                },
              ],
            },
            name: 'panic_error_0x12',
            nodeType: 'YulFunctionDefinition',
            src: '10761:180:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '10975:152:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '10992:1:10',
                        type: '',
                        value: '0',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '10995:77:10',
                        type: '',
                        value:
                          '35408467139433450592217433187231851964531694900788300625387963629091585785856',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '10985:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '10985:88:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '10985:88:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '11089:1:10',
                        type: '',
                        value: '4',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '11092:4:10',
                        type: '',
                        value: '0x11',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '11082:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '11082:15:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '11082:15:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '11113:1:10',
                        type: '',
                        value: '0',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '11116:4:10',
                        type: '',
                        value: '0x24',
                      },
                    ],
                    functionName: {
                      name: 'revert',
                      nodeType: 'YulIdentifier',
                      src: '11106:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '11106:15:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '11106:15:10',
                },
              ],
            },
            name: 'panic_error_0x11',
            nodeType: 'YulFunctionDefinition',
            src: '10947:180:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '11175:143:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '11185:25:10',
                  value: {
                    arguments: [
                      {
                        name: 'x',
                        nodeType: 'YulIdentifier',
                        src: '11208:1:10',
                      },
                    ],
                    functionName: {
                      name: 'cleanup_t_uint256',
                      nodeType: 'YulIdentifier',
                      src: '11190:17:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '11190:20:10',
                  },
                  variableNames: [
                    {
                      name: 'x',
                      nodeType: 'YulIdentifier',
                      src: '11185:1:10',
                    },
                  ],
                },
                {
                  nodeType: 'YulAssignment',
                  src: '11219:25:10',
                  value: {
                    arguments: [
                      {
                        name: 'y',
                        nodeType: 'YulIdentifier',
                        src: '11242:1:10',
                      },
                    ],
                    functionName: {
                      name: 'cleanup_t_uint256',
                      nodeType: 'YulIdentifier',
                      src: '11224:17:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '11224:20:10',
                  },
                  variableNames: [
                    {
                      name: 'y',
                      nodeType: 'YulIdentifier',
                      src: '11219:1:10',
                    },
                  ],
                },
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '11266:22:10',
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: 'panic_error_0x12',
                            nodeType: 'YulIdentifier',
                            src: '11268:16:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '11268:18:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '11268:18:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: 'y',
                        nodeType: 'YulIdentifier',
                        src: '11263:1:10',
                      },
                    ],
                    functionName: {
                      name: 'iszero',
                      nodeType: 'YulIdentifier',
                      src: '11256:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '11256:9:10',
                  },
                  nodeType: 'YulIf',
                  src: '11253:35:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '11298:14:10',
                  value: {
                    arguments: [
                      {
                        name: 'x',
                        nodeType: 'YulIdentifier',
                        src: '11307:1:10',
                      },
                      {
                        name: 'y',
                        nodeType: 'YulIdentifier',
                        src: '11310:1:10',
                      },
                    ],
                    functionName: {
                      name: 'div',
                      nodeType: 'YulIdentifier',
                      src: '11303:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '11303:9:10',
                  },
                  variableNames: [
                    {
                      name: 'r',
                      nodeType: 'YulIdentifier',
                      src: '11298:1:10',
                    },
                  ],
                },
              ],
            },
            name: 'checked_div_t_uint256',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'x',
                nodeType: 'YulTypedName',
                src: '11164:1:10',
                type: '',
              },
              {
                name: 'y',
                nodeType: 'YulTypedName',
                src: '11167:1:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'r',
                nodeType: 'YulTypedName',
                src: '11173:1:10',
                type: '',
              },
            ],
            src: '11133:185:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '11430:117:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '11452:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '11460:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '11448:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '11448:14:10',
                      },
                      {
                        hexValue:
                          '4572726f723a20546f6f20736d616c6c20616d6f756e7420666f722070757263',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '11464:34:10',
                        type: '',
                        value: 'Error: Too small amount for purc',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '11441:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '11441:58:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '11441:58:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '11520:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '11528:2:10',
                            type: '',
                            value: '32',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '11516:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '11516:15:10',
                      },
                      {
                        hexValue: '68617365',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '11533:6:10',
                        type: '',
                        value: 'hase',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '11509:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '11509:31:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '11509:31:10',
                },
              ],
            },
            name: 'store_literal_in_memory_6d4b7b6ea91bf03c4485f47f306c833859d6464346b33323495200ab472d0f32',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'memPtr',
                nodeType: 'YulTypedName',
                src: '11422:6:10',
                type: '',
              },
            ],
            src: '11324:223:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '11699:220:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '11709:74:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '11775:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '11780:2:10',
                        type: '',
                        value: '36',
                      },
                    ],
                    functionName: {
                      name: 'array_storeLengthForEncoding_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '11716:58:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '11716:67:10',
                  },
                  variableNames: [
                    {
                      name: 'pos',
                      nodeType: 'YulIdentifier',
                      src: '11709:3:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '11881:3:10',
                      },
                    ],
                    functionName: {
                      name: 'store_literal_in_memory_6d4b7b6ea91bf03c4485f47f306c833859d6464346b33323495200ab472d0f32',
                      nodeType: 'YulIdentifier',
                      src: '11792:88:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '11792:93:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '11792:93:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '11894:19:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '11905:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '11910:2:10',
                        type: '',
                        value: '64',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '11901:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '11901:12:10',
                  },
                  variableNames: [
                    {
                      name: 'end',
                      nodeType: 'YulIdentifier',
                      src: '11894:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_t_stringliteral_6d4b7b6ea91bf03c4485f47f306c833859d6464346b33323495200ab472d0f32_to_t_string_memory_ptr_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '11687:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '11695:3:10',
                type: '',
              },
            ],
            src: '11553:366:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '12096:248:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '12106:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '12118:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '12129:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '12114:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '12114:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '12106:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '12153:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '12164:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '12149:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '12149:17:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'tail',
                            nodeType: 'YulIdentifier',
                            src: '12172:4:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '12178:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '12168:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '12168:20:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '12142:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '12142:47:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '12142:47:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '12198:139:10',
                  value: {
                    arguments: [
                      {
                        name: 'tail',
                        nodeType: 'YulIdentifier',
                        src: '12332:4:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_stringliteral_6d4b7b6ea91bf03c4485f47f306c833859d6464346b33323495200ab472d0f32_to_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '12206:124:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '12206:131:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '12198:4:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_tuple_t_stringliteral_6d4b7b6ea91bf03c4485f47f306c833859d6464346b33323495200ab472d0f32__to_t_string_memory_ptr__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '12076:9:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '12091:4:10',
                type: '',
              },
            ],
            src: '11925:419:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '12456:115:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '12478:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '12486:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '12474:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '12474:14:10',
                      },
                      {
                        hexValue:
                          '4572726f723a20546f6f2062696720616d6f756e7420666f7220707572636861',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '12490:34:10',
                        type: '',
                        value: 'Error: Too big amount for purcha',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '12467:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '12467:58:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '12467:58:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '12546:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '12554:2:10',
                            type: '',
                            value: '32',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '12542:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '12542:15:10',
                      },
                      {
                        hexValue: '7365',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '12559:4:10',
                        type: '',
                        value: 'se',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '12535:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '12535:29:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '12535:29:10',
                },
              ],
            },
            name: 'store_literal_in_memory_4e88686c280eed3d76475d5d474311d14c5816ed524747dc2ba1bff433320f8d',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'memPtr',
                nodeType: 'YulTypedName',
                src: '12448:6:10',
                type: '',
              },
            ],
            src: '12350:221:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '12723:220:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '12733:74:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '12799:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '12804:2:10',
                        type: '',
                        value: '34',
                      },
                    ],
                    functionName: {
                      name: 'array_storeLengthForEncoding_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '12740:58:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '12740:67:10',
                  },
                  variableNames: [
                    {
                      name: 'pos',
                      nodeType: 'YulIdentifier',
                      src: '12733:3:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '12905:3:10',
                      },
                    ],
                    functionName: {
                      name: 'store_literal_in_memory_4e88686c280eed3d76475d5d474311d14c5816ed524747dc2ba1bff433320f8d',
                      nodeType: 'YulIdentifier',
                      src: '12816:88:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '12816:93:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '12816:93:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '12918:19:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '12929:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '12934:2:10',
                        type: '',
                        value: '64',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '12925:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '12925:12:10',
                  },
                  variableNames: [
                    {
                      name: 'end',
                      nodeType: 'YulIdentifier',
                      src: '12918:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_t_stringliteral_4e88686c280eed3d76475d5d474311d14c5816ed524747dc2ba1bff433320f8d_to_t_string_memory_ptr_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '12711:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '12719:3:10',
                type: '',
              },
            ],
            src: '12577:366:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '13120:248:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '13130:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '13142:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '13153:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '13138:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '13138:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '13130:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '13177:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '13188:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '13173:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '13173:17:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'tail',
                            nodeType: 'YulIdentifier',
                            src: '13196:4:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '13202:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '13192:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '13192:20:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '13166:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '13166:47:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '13166:47:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '13222:139:10',
                  value: {
                    arguments: [
                      {
                        name: 'tail',
                        nodeType: 'YulIdentifier',
                        src: '13356:4:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_stringliteral_4e88686c280eed3d76475d5d474311d14c5816ed524747dc2ba1bff433320f8d_to_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '13230:124:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '13230:131:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '13222:4:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_tuple_t_stringliteral_4e88686c280eed3d76475d5d474311d14c5816ed524747dc2ba1bff433320f8d__to_t_string_memory_ptr__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '13100:9:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '13115:4:10',
                type: '',
              },
            ],
            src: '12949:419:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '13425:51:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '13435:34:10',
                  value: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '13460:1:10',
                        type: '',
                        value: '1',
                      },
                      {
                        name: 'value',
                        nodeType: 'YulIdentifier',
                        src: '13463:5:10',
                      },
                    ],
                    functionName: {
                      name: 'shr',
                      nodeType: 'YulIdentifier',
                      src: '13456:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '13456:13:10',
                  },
                  variableNames: [
                    {
                      name: 'newValue',
                      nodeType: 'YulIdentifier',
                      src: '13435:8:10',
                    },
                  ],
                },
              ],
            },
            name: 'shift_right_1_unsigned',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'value',
                nodeType: 'YulTypedName',
                src: '13406:5:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'newValue',
                nodeType: 'YulTypedName',
                src: '13416:8:10',
                type: '',
              },
            ],
            src: '13374:102:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '13555:775:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '13565:15:10',
                  value: {
                    name: '_power',
                    nodeType: 'YulIdentifier',
                    src: '13574:6:10',
                  },
                  variableNames: [
                    {
                      name: 'power',
                      nodeType: 'YulIdentifier',
                      src: '13565:5:10',
                    },
                  ],
                },
                {
                  nodeType: 'YulAssignment',
                  src: '13589:14:10',
                  value: {
                    name: '_base',
                    nodeType: 'YulIdentifier',
                    src: '13598:5:10',
                  },
                  variableNames: [
                    {
                      name: 'base',
                      nodeType: 'YulIdentifier',
                      src: '13589:4:10',
                    },
                  ],
                },
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '13647:677:10',
                    statements: [
                      {
                        body: {
                          nodeType: 'YulBlock',
                          src: '13735:22:10',
                          statements: [
                            {
                              expression: {
                                arguments: [],
                                functionName: {
                                  name: 'panic_error_0x11',
                                  nodeType: 'YulIdentifier',
                                  src: '13737:16:10',
                                },
                                nodeType: 'YulFunctionCall',
                                src: '13737:18:10',
                              },
                              nodeType: 'YulExpressionStatement',
                              src: '13737:18:10',
                            },
                          ],
                        },
                        condition: {
                          arguments: [
                            {
                              name: 'base',
                              nodeType: 'YulIdentifier',
                              src: '13713:4:10',
                            },
                            {
                              arguments: [
                                {
                                  name: 'max',
                                  nodeType: 'YulIdentifier',
                                  src: '13723:3:10',
                                },
                                {
                                  name: 'base',
                                  nodeType: 'YulIdentifier',
                                  src: '13728:4:10',
                                },
                              ],
                              functionName: {
                                name: 'div',
                                nodeType: 'YulIdentifier',
                                src: '13719:3:10',
                              },
                              nodeType: 'YulFunctionCall',
                              src: '13719:14:10',
                            },
                          ],
                          functionName: {
                            name: 'gt',
                            nodeType: 'YulIdentifier',
                            src: '13710:2:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '13710:24:10',
                        },
                        nodeType: 'YulIf',
                        src: '13707:50:10',
                      },
                      {
                        body: {
                          nodeType: 'YulBlock',
                          src: '13802:419:10',
                          statements: [
                            {
                              nodeType: 'YulAssignment',
                              src: '14182:25:10',
                              value: {
                                arguments: [
                                  {
                                    name: 'power',
                                    nodeType: 'YulIdentifier',
                                    src: '14195:5:10',
                                  },
                                  {
                                    name: 'base',
                                    nodeType: 'YulIdentifier',
                                    src: '14202:4:10',
                                  },
                                ],
                                functionName: {
                                  name: 'mul',
                                  nodeType: 'YulIdentifier',
                                  src: '14191:3:10',
                                },
                                nodeType: 'YulFunctionCall',
                                src: '14191:16:10',
                              },
                              variableNames: [
                                {
                                  name: 'power',
                                  nodeType: 'YulIdentifier',
                                  src: '14182:5:10',
                                },
                              ],
                            },
                          ],
                        },
                        condition: {
                          arguments: [
                            {
                              name: 'exponent',
                              nodeType: 'YulIdentifier',
                              src: '13777:8:10',
                            },
                            {
                              kind: 'number',
                              nodeType: 'YulLiteral',
                              src: '13787:1:10',
                              type: '',
                              value: '1',
                            },
                          ],
                          functionName: {
                            name: 'and',
                            nodeType: 'YulIdentifier',
                            src: '13773:3:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '13773:16:10',
                        },
                        nodeType: 'YulIf',
                        src: '13770:451:10',
                      },
                      {
                        nodeType: 'YulAssignment',
                        src: '14234:23:10',
                        value: {
                          arguments: [
                            {
                              name: 'base',
                              nodeType: 'YulIdentifier',
                              src: '14246:4:10',
                            },
                            {
                              name: 'base',
                              nodeType: 'YulIdentifier',
                              src: '14252:4:10',
                            },
                          ],
                          functionName: {
                            name: 'mul',
                            nodeType: 'YulIdentifier',
                            src: '14242:3:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '14242:15:10',
                        },
                        variableNames: [
                          {
                            name: 'base',
                            nodeType: 'YulIdentifier',
                            src: '14234:4:10',
                          },
                        ],
                      },
                      {
                        nodeType: 'YulAssignment',
                        src: '14270:44:10',
                        value: {
                          arguments: [
                            {
                              name: 'exponent',
                              nodeType: 'YulIdentifier',
                              src: '14305:8:10',
                            },
                          ],
                          functionName: {
                            name: 'shift_right_1_unsigned',
                            nodeType: 'YulIdentifier',
                            src: '14282:22:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '14282:32:10',
                        },
                        variableNames: [
                          {
                            name: 'exponent',
                            nodeType: 'YulIdentifier',
                            src: '14270:8:10',
                          },
                        ],
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: 'exponent',
                        nodeType: 'YulIdentifier',
                        src: '13623:8:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '13633:1:10',
                        type: '',
                        value: '1',
                      },
                    ],
                    functionName: {
                      name: 'gt',
                      nodeType: 'YulIdentifier',
                      src: '13620:2:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '13620:15:10',
                  },
                  nodeType: 'YulForLoop',
                  post: {
                    nodeType: 'YulBlock',
                    src: '13636:2:10',
                    statements: [],
                  },
                  pre: {
                    nodeType: 'YulBlock',
                    src: '13616:3:10',
                    statements: [],
                  },
                  src: '13612:712:10',
                },
              ],
            },
            name: 'checked_exp_helper',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: '_power',
                nodeType: 'YulTypedName',
                src: '13510:6:10',
                type: '',
              },
              {
                name: '_base',
                nodeType: 'YulTypedName',
                src: '13518:5:10',
                type: '',
              },
              {
                name: 'exponent',
                nodeType: 'YulTypedName',
                src: '13525:8:10',
                type: '',
              },
              {
                name: 'max',
                nodeType: 'YulTypedName',
                src: '13535:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'power',
                nodeType: 'YulTypedName',
                src: '13543:5:10',
                type: '',
              },
              {
                name: 'base',
                nodeType: 'YulTypedName',
                src: '13550:4:10',
                type: '',
              },
            ],
            src: '13482:848:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '14396:1013:10',
              statements: [
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '14591:20:10',
                    statements: [
                      {
                        nodeType: 'YulAssignment',
                        src: '14593:10:10',
                        value: {
                          kind: 'number',
                          nodeType: 'YulLiteral',
                          src: '14602:1:10',
                          type: '',
                          value: '1',
                        },
                        variableNames: [
                          {
                            name: 'power',
                            nodeType: 'YulIdentifier',
                            src: '14593:5:10',
                          },
                        ],
                      },
                      {
                        nodeType: 'YulLeave',
                        src: '14604:5:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: 'exponent',
                        nodeType: 'YulIdentifier',
                        src: '14581:8:10',
                      },
                    ],
                    functionName: {
                      name: 'iszero',
                      nodeType: 'YulIdentifier',
                      src: '14574:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '14574:16:10',
                  },
                  nodeType: 'YulIf',
                  src: '14571:40:10',
                },
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '14636:20:10',
                    statements: [
                      {
                        nodeType: 'YulAssignment',
                        src: '14638:10:10',
                        value: {
                          kind: 'number',
                          nodeType: 'YulLiteral',
                          src: '14647:1:10',
                          type: '',
                          value: '0',
                        },
                        variableNames: [
                          {
                            name: 'power',
                            nodeType: 'YulIdentifier',
                            src: '14638:5:10',
                          },
                        ],
                      },
                      {
                        nodeType: 'YulLeave',
                        src: '14649:5:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: 'base',
                        nodeType: 'YulIdentifier',
                        src: '14630:4:10',
                      },
                    ],
                    functionName: {
                      name: 'iszero',
                      nodeType: 'YulIdentifier',
                      src: '14623:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '14623:12:10',
                  },
                  nodeType: 'YulIf',
                  src: '14620:36:10',
                },
                {
                  cases: [
                    {
                      body: {
                        nodeType: 'YulBlock',
                        src: '14766:20:10',
                        statements: [
                          {
                            nodeType: 'YulAssignment',
                            src: '14768:10:10',
                            value: {
                              kind: 'number',
                              nodeType: 'YulLiteral',
                              src: '14777:1:10',
                              type: '',
                              value: '1',
                            },
                            variableNames: [
                              {
                                name: 'power',
                                nodeType: 'YulIdentifier',
                                src: '14768:5:10',
                              },
                            ],
                          },
                          {
                            nodeType: 'YulLeave',
                            src: '14779:5:10',
                          },
                        ],
                      },
                      nodeType: 'YulCase',
                      src: '14759:27:10',
                      value: {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '14764:1:10',
                        type: '',
                        value: '1',
                      },
                    },
                    {
                      body: {
                        nodeType: 'YulBlock',
                        src: '14810:176:10',
                        statements: [
                          {
                            body: {
                              nodeType: 'YulBlock',
                              src: '14845:22:10',
                              statements: [
                                {
                                  expression: {
                                    arguments: [],
                                    functionName: {
                                      name: 'panic_error_0x11',
                                      nodeType: 'YulIdentifier',
                                      src: '14847:16:10',
                                    },
                                    nodeType: 'YulFunctionCall',
                                    src: '14847:18:10',
                                  },
                                  nodeType: 'YulExpressionStatement',
                                  src: '14847:18:10',
                                },
                              ],
                            },
                            condition: {
                              arguments: [
                                {
                                  name: 'exponent',
                                  nodeType: 'YulIdentifier',
                                  src: '14830:8:10',
                                },
                                {
                                  kind: 'number',
                                  nodeType: 'YulLiteral',
                                  src: '14840:3:10',
                                  type: '',
                                  value: '255',
                                },
                              ],
                              functionName: {
                                name: 'gt',
                                nodeType: 'YulIdentifier',
                                src: '14827:2:10',
                              },
                              nodeType: 'YulFunctionCall',
                              src: '14827:17:10',
                            },
                            nodeType: 'YulIf',
                            src: '14824:43:10',
                          },
                          {
                            nodeType: 'YulAssignment',
                            src: '14880:25:10',
                            value: {
                              arguments: [
                                {
                                  kind: 'number',
                                  nodeType: 'YulLiteral',
                                  src: '14893:1:10',
                                  type: '',
                                  value: '2',
                                },
                                {
                                  name: 'exponent',
                                  nodeType: 'YulIdentifier',
                                  src: '14896:8:10',
                                },
                              ],
                              functionName: {
                                name: 'exp',
                                nodeType: 'YulIdentifier',
                                src: '14889:3:10',
                              },
                              nodeType: 'YulFunctionCall',
                              src: '14889:16:10',
                            },
                            variableNames: [
                              {
                                name: 'power',
                                nodeType: 'YulIdentifier',
                                src: '14880:5:10',
                              },
                            ],
                          },
                          {
                            body: {
                              nodeType: 'YulBlock',
                              src: '14936:22:10',
                              statements: [
                                {
                                  expression: {
                                    arguments: [],
                                    functionName: {
                                      name: 'panic_error_0x11',
                                      nodeType: 'YulIdentifier',
                                      src: '14938:16:10',
                                    },
                                    nodeType: 'YulFunctionCall',
                                    src: '14938:18:10',
                                  },
                                  nodeType: 'YulExpressionStatement',
                                  src: '14938:18:10',
                                },
                              ],
                            },
                            condition: {
                              arguments: [
                                {
                                  name: 'power',
                                  nodeType: 'YulIdentifier',
                                  src: '14924:5:10',
                                },
                                {
                                  name: 'max',
                                  nodeType: 'YulIdentifier',
                                  src: '14931:3:10',
                                },
                              ],
                              functionName: {
                                name: 'gt',
                                nodeType: 'YulIdentifier',
                                src: '14921:2:10',
                              },
                              nodeType: 'YulFunctionCall',
                              src: '14921:14:10',
                            },
                            nodeType: 'YulIf',
                            src: '14918:40:10',
                          },
                          {
                            nodeType: 'YulLeave',
                            src: '14971:5:10',
                          },
                        ],
                      },
                      nodeType: 'YulCase',
                      src: '14795:191:10',
                      value: {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '14800:1:10',
                        type: '',
                        value: '2',
                      },
                    },
                  ],
                  expression: {
                    name: 'base',
                    nodeType: 'YulIdentifier',
                    src: '14716:4:10',
                  },
                  nodeType: 'YulSwitch',
                  src: '14709:277:10',
                },
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '15118:123:10',
                    statements: [
                      {
                        nodeType: 'YulAssignment',
                        src: '15132:28:10',
                        value: {
                          arguments: [
                            {
                              name: 'base',
                              nodeType: 'YulIdentifier',
                              src: '15145:4:10',
                            },
                            {
                              name: 'exponent',
                              nodeType: 'YulIdentifier',
                              src: '15151:8:10',
                            },
                          ],
                          functionName: {
                            name: 'exp',
                            nodeType: 'YulIdentifier',
                            src: '15141:3:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '15141:19:10',
                        },
                        variableNames: [
                          {
                            name: 'power',
                            nodeType: 'YulIdentifier',
                            src: '15132:5:10',
                          },
                        ],
                      },
                      {
                        body: {
                          nodeType: 'YulBlock',
                          src: '15191:22:10',
                          statements: [
                            {
                              expression: {
                                arguments: [],
                                functionName: {
                                  name: 'panic_error_0x11',
                                  nodeType: 'YulIdentifier',
                                  src: '15193:16:10',
                                },
                                nodeType: 'YulFunctionCall',
                                src: '15193:18:10',
                              },
                              nodeType: 'YulExpressionStatement',
                              src: '15193:18:10',
                            },
                          ],
                        },
                        condition: {
                          arguments: [
                            {
                              name: 'power',
                              nodeType: 'YulIdentifier',
                              src: '15179:5:10',
                            },
                            {
                              name: 'max',
                              nodeType: 'YulIdentifier',
                              src: '15186:3:10',
                            },
                          ],
                          functionName: {
                            name: 'gt',
                            nodeType: 'YulIdentifier',
                            src: '15176:2:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '15176:14:10',
                        },
                        nodeType: 'YulIf',
                        src: '15173:40:10',
                      },
                      {
                        nodeType: 'YulLeave',
                        src: '15226:5:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: 'base',
                                nodeType: 'YulIdentifier',
                                src: '15021:4:10',
                              },
                              {
                                kind: 'number',
                                nodeType: 'YulLiteral',
                                src: '15027:2:10',
                                type: '',
                                value: '11',
                              },
                            ],
                            functionName: {
                              name: 'lt',
                              nodeType: 'YulIdentifier',
                              src: '15018:2:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '15018:12:10',
                          },
                          {
                            arguments: [
                              {
                                name: 'exponent',
                                nodeType: 'YulIdentifier',
                                src: '15035:8:10',
                              },
                              {
                                kind: 'number',
                                nodeType: 'YulLiteral',
                                src: '15045:2:10',
                                type: '',
                                value: '78',
                              },
                            ],
                            functionName: {
                              name: 'lt',
                              nodeType: 'YulIdentifier',
                              src: '15032:2:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '15032:16:10',
                          },
                        ],
                        functionName: {
                          name: 'and',
                          nodeType: 'YulIdentifier',
                          src: '15014:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '15014:35:10',
                      },
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: 'base',
                                nodeType: 'YulIdentifier',
                                src: '15070:4:10',
                              },
                              {
                                kind: 'number',
                                nodeType: 'YulLiteral',
                                src: '15076:3:10',
                                type: '',
                                value: '307',
                              },
                            ],
                            functionName: {
                              name: 'lt',
                              nodeType: 'YulIdentifier',
                              src: '15067:2:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '15067:13:10',
                          },
                          {
                            arguments: [
                              {
                                name: 'exponent',
                                nodeType: 'YulIdentifier',
                                src: '15085:8:10',
                              },
                              {
                                kind: 'number',
                                nodeType: 'YulLiteral',
                                src: '15095:2:10',
                                type: '',
                                value: '32',
                              },
                            ],
                            functionName: {
                              name: 'lt',
                              nodeType: 'YulIdentifier',
                              src: '15082:2:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '15082:16:10',
                          },
                        ],
                        functionName: {
                          name: 'and',
                          nodeType: 'YulIdentifier',
                          src: '15063:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '15063:36:10',
                      },
                    ],
                    functionName: {
                      name: 'or',
                      nodeType: 'YulIdentifier',
                      src: '14998:2:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '14998:111:10',
                  },
                  nodeType: 'YulIf',
                  src: '14995:246:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '15251:57:10',
                  value: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '15285:1:10',
                        type: '',
                        value: '1',
                      },
                      {
                        name: 'base',
                        nodeType: 'YulIdentifier',
                        src: '15288:4:10',
                      },
                      {
                        name: 'exponent',
                        nodeType: 'YulIdentifier',
                        src: '15294:8:10',
                      },
                      {
                        name: 'max',
                        nodeType: 'YulIdentifier',
                        src: '15304:3:10',
                      },
                    ],
                    functionName: {
                      name: 'checked_exp_helper',
                      nodeType: 'YulIdentifier',
                      src: '15266:18:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '15266:42:10',
                  },
                  variableNames: [
                    {
                      name: 'power',
                      nodeType: 'YulIdentifier',
                      src: '15251:5:10',
                    },
                    {
                      name: 'base',
                      nodeType: 'YulIdentifier',
                      src: '15258:4:10',
                    },
                  ],
                },
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '15347:22:10',
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: 'panic_error_0x11',
                            nodeType: 'YulIdentifier',
                            src: '15349:16:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '15349:18:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '15349:18:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: 'power',
                        nodeType: 'YulIdentifier',
                        src: '15324:5:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'max',
                            nodeType: 'YulIdentifier',
                            src: '15335:3:10',
                          },
                          {
                            name: 'base',
                            nodeType: 'YulIdentifier',
                            src: '15340:4:10',
                          },
                        ],
                        functionName: {
                          name: 'div',
                          nodeType: 'YulIdentifier',
                          src: '15331:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '15331:14:10',
                      },
                    ],
                    functionName: {
                      name: 'gt',
                      nodeType: 'YulIdentifier',
                      src: '15321:2:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '15321:25:10',
                  },
                  nodeType: 'YulIf',
                  src: '15318:51:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '15378:25:10',
                  value: {
                    arguments: [
                      {
                        name: 'power',
                        nodeType: 'YulIdentifier',
                        src: '15391:5:10',
                      },
                      {
                        name: 'base',
                        nodeType: 'YulIdentifier',
                        src: '15398:4:10',
                      },
                    ],
                    functionName: {
                      name: 'mul',
                      nodeType: 'YulIdentifier',
                      src: '15387:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '15387:16:10',
                  },
                  variableNames: [
                    {
                      name: 'power',
                      nodeType: 'YulIdentifier',
                      src: '15378:5:10',
                    },
                  ],
                },
              ],
            },
            name: 'checked_exp_unsigned',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'base',
                nodeType: 'YulTypedName',
                src: '14366:4:10',
                type: '',
              },
              {
                name: 'exponent',
                nodeType: 'YulTypedName',
                src: '14372:8:10',
                type: '',
              },
              {
                name: 'max',
                nodeType: 'YulTypedName',
                src: '14382:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'power',
                nodeType: 'YulTypedName',
                src: '14390:5:10',
                type: '',
              },
            ],
            src: '14336:1073:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '15479:217:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '15489:31:10',
                  value: {
                    arguments: [
                      {
                        name: 'base',
                        nodeType: 'YulIdentifier',
                        src: '15515:4:10',
                      },
                    ],
                    functionName: {
                      name: 'cleanup_t_uint256',
                      nodeType: 'YulIdentifier',
                      src: '15497:17:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '15497:23:10',
                  },
                  variableNames: [
                    {
                      name: 'base',
                      nodeType: 'YulIdentifier',
                      src: '15489:4:10',
                    },
                  ],
                },
                {
                  nodeType: 'YulAssignment',
                  src: '15529:37:10',
                  value: {
                    arguments: [
                      {
                        name: 'exponent',
                        nodeType: 'YulIdentifier',
                        src: '15557:8:10',
                      },
                    ],
                    functionName: {
                      name: 'cleanup_t_uint8',
                      nodeType: 'YulIdentifier',
                      src: '15541:15:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '15541:25:10',
                  },
                  variableNames: [
                    {
                      name: 'exponent',
                      nodeType: 'YulIdentifier',
                      src: '15529:8:10',
                    },
                  ],
                },
                {
                  nodeType: 'YulAssignment',
                  src: '15576:113:10',
                  value: {
                    arguments: [
                      {
                        name: 'base',
                        nodeType: 'YulIdentifier',
                        src: '15606:4:10',
                      },
                      {
                        name: 'exponent',
                        nodeType: 'YulIdentifier',
                        src: '15612:8:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '15622:66:10',
                        type: '',
                        value: '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',
                      },
                    ],
                    functionName: {
                      name: 'checked_exp_unsigned',
                      nodeType: 'YulIdentifier',
                      src: '15585:20:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '15585:104:10',
                  },
                  variableNames: [
                    {
                      name: 'power',
                      nodeType: 'YulIdentifier',
                      src: '15576:5:10',
                    },
                  ],
                },
              ],
            },
            name: 'checked_exp_t_uint256_t_uint8',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'base',
                nodeType: 'YulTypedName',
                src: '15454:4:10',
                type: '',
              },
              {
                name: 'exponent',
                nodeType: 'YulTypedName',
                src: '15460:8:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'power',
                nodeType: 'YulTypedName',
                src: '15473:5:10',
                type: '',
              },
            ],
            src: '15415:281:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '15750:362:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '15760:25:10',
                  value: {
                    arguments: [
                      {
                        name: 'x',
                        nodeType: 'YulIdentifier',
                        src: '15783:1:10',
                      },
                    ],
                    functionName: {
                      name: 'cleanup_t_uint256',
                      nodeType: 'YulIdentifier',
                      src: '15765:17:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '15765:20:10',
                  },
                  variableNames: [
                    {
                      name: 'x',
                      nodeType: 'YulIdentifier',
                      src: '15760:1:10',
                    },
                  ],
                },
                {
                  nodeType: 'YulAssignment',
                  src: '15794:25:10',
                  value: {
                    arguments: [
                      {
                        name: 'y',
                        nodeType: 'YulIdentifier',
                        src: '15817:1:10',
                      },
                    ],
                    functionName: {
                      name: 'cleanup_t_uint256',
                      nodeType: 'YulIdentifier',
                      src: '15799:17:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '15799:20:10',
                  },
                  variableNames: [
                    {
                      name: 'y',
                      nodeType: 'YulIdentifier',
                      src: '15794:1:10',
                    },
                  ],
                },
                {
                  nodeType: 'YulVariableDeclaration',
                  src: '15828:28:10',
                  value: {
                    arguments: [
                      {
                        name: 'x',
                        nodeType: 'YulIdentifier',
                        src: '15851:1:10',
                      },
                      {
                        name: 'y',
                        nodeType: 'YulIdentifier',
                        src: '15854:1:10',
                      },
                    ],
                    functionName: {
                      name: 'mul',
                      nodeType: 'YulIdentifier',
                      src: '15847:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '15847:9:10',
                  },
                  variables: [
                    {
                      name: 'product_raw',
                      nodeType: 'YulTypedName',
                      src: '15832:11:10',
                      type: '',
                    },
                  ],
                },
                {
                  nodeType: 'YulAssignment',
                  src: '15865:41:10',
                  value: {
                    arguments: [
                      {
                        name: 'product_raw',
                        nodeType: 'YulIdentifier',
                        src: '15894:11:10',
                      },
                    ],
                    functionName: {
                      name: 'cleanup_t_uint256',
                      nodeType: 'YulIdentifier',
                      src: '15876:17:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '15876:30:10',
                  },
                  variableNames: [
                    {
                      name: 'product',
                      nodeType: 'YulIdentifier',
                      src: '15865:7:10',
                    },
                  ],
                },
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '16083:22:10',
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: 'panic_error_0x11',
                            nodeType: 'YulIdentifier',
                            src: '16085:16:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '16085:18:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '16085:18:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: 'x',
                                nodeType: 'YulIdentifier',
                                src: '16016:1:10',
                              },
                            ],
                            functionName: {
                              name: 'iszero',
                              nodeType: 'YulIdentifier',
                              src: '16009:6:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '16009:9:10',
                          },
                          {
                            arguments: [
                              {
                                name: 'y',
                                nodeType: 'YulIdentifier',
                                src: '16039:1:10',
                              },
                              {
                                arguments: [
                                  {
                                    name: 'product',
                                    nodeType: 'YulIdentifier',
                                    src: '16046:7:10',
                                  },
                                  {
                                    name: 'x',
                                    nodeType: 'YulIdentifier',
                                    src: '16055:1:10',
                                  },
                                ],
                                functionName: {
                                  name: 'div',
                                  nodeType: 'YulIdentifier',
                                  src: '16042:3:10',
                                },
                                nodeType: 'YulFunctionCall',
                                src: '16042:15:10',
                              },
                            ],
                            functionName: {
                              name: 'eq',
                              nodeType: 'YulIdentifier',
                              src: '16036:2:10',
                            },
                            nodeType: 'YulFunctionCall',
                            src: '16036:22:10',
                          },
                        ],
                        functionName: {
                          name: 'or',
                          nodeType: 'YulIdentifier',
                          src: '15989:2:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '15989:83:10',
                      },
                    ],
                    functionName: {
                      name: 'iszero',
                      nodeType: 'YulIdentifier',
                      src: '15969:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '15969:113:10',
                  },
                  nodeType: 'YulIf',
                  src: '15966:139:10',
                },
              ],
            },
            name: 'checked_mul_t_uint256',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'x',
                nodeType: 'YulTypedName',
                src: '15733:1:10',
                type: '',
              },
              {
                name: 'y',
                nodeType: 'YulTypedName',
                src: '15736:1:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'product',
                nodeType: 'YulTypedName',
                src: '15742:7:10',
                type: '',
              },
            ],
            src: '15702:410:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '16163:149:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '16173:25:10',
                  value: {
                    arguments: [
                      {
                        name: 'x',
                        nodeType: 'YulIdentifier',
                        src: '16196:1:10',
                      },
                    ],
                    functionName: {
                      name: 'cleanup_t_uint256',
                      nodeType: 'YulIdentifier',
                      src: '16178:17:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '16178:20:10',
                  },
                  variableNames: [
                    {
                      name: 'x',
                      nodeType: 'YulIdentifier',
                      src: '16173:1:10',
                    },
                  ],
                },
                {
                  nodeType: 'YulAssignment',
                  src: '16207:25:10',
                  value: {
                    arguments: [
                      {
                        name: 'y',
                        nodeType: 'YulIdentifier',
                        src: '16230:1:10',
                      },
                    ],
                    functionName: {
                      name: 'cleanup_t_uint256',
                      nodeType: 'YulIdentifier',
                      src: '16212:17:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '16212:20:10',
                  },
                  variableNames: [
                    {
                      name: 'y',
                      nodeType: 'YulIdentifier',
                      src: '16207:1:10',
                    },
                  ],
                },
                {
                  nodeType: 'YulAssignment',
                  src: '16241:17:10',
                  value: {
                    arguments: [
                      {
                        name: 'x',
                        nodeType: 'YulIdentifier',
                        src: '16253:1:10',
                      },
                      {
                        name: 'y',
                        nodeType: 'YulIdentifier',
                        src: '16256:1:10',
                      },
                    ],
                    functionName: {
                      name: 'sub',
                      nodeType: 'YulIdentifier',
                      src: '16249:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '16249:9:10',
                  },
                  variableNames: [
                    {
                      name: 'diff',
                      nodeType: 'YulIdentifier',
                      src: '16241:4:10',
                    },
                  ],
                },
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '16283:22:10',
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: 'panic_error_0x11',
                            nodeType: 'YulIdentifier',
                            src: '16285:16:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '16285:18:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '16285:18:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: 'diff',
                        nodeType: 'YulIdentifier',
                        src: '16274:4:10',
                      },
                      {
                        name: 'x',
                        nodeType: 'YulIdentifier',
                        src: '16280:1:10',
                      },
                    ],
                    functionName: {
                      name: 'gt',
                      nodeType: 'YulIdentifier',
                      src: '16271:2:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '16271:11:10',
                  },
                  nodeType: 'YulIf',
                  src: '16268:37:10',
                },
              ],
            },
            name: 'checked_sub_t_uint256',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'x',
                nodeType: 'YulTypedName',
                src: '16149:1:10',
                type: '',
              },
              {
                name: 'y',
                nodeType: 'YulTypedName',
                src: '16152:1:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'diff',
                nodeType: 'YulTypedName',
                src: '16158:4:10',
                type: '',
              },
            ],
            src: '16118:194:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '16362:147:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '16372:25:10',
                  value: {
                    arguments: [
                      {
                        name: 'x',
                        nodeType: 'YulIdentifier',
                        src: '16395:1:10',
                      },
                    ],
                    functionName: {
                      name: 'cleanup_t_uint256',
                      nodeType: 'YulIdentifier',
                      src: '16377:17:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '16377:20:10',
                  },
                  variableNames: [
                    {
                      name: 'x',
                      nodeType: 'YulIdentifier',
                      src: '16372:1:10',
                    },
                  ],
                },
                {
                  nodeType: 'YulAssignment',
                  src: '16406:25:10',
                  value: {
                    arguments: [
                      {
                        name: 'y',
                        nodeType: 'YulIdentifier',
                        src: '16429:1:10',
                      },
                    ],
                    functionName: {
                      name: 'cleanup_t_uint256',
                      nodeType: 'YulIdentifier',
                      src: '16411:17:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '16411:20:10',
                  },
                  variableNames: [
                    {
                      name: 'y',
                      nodeType: 'YulIdentifier',
                      src: '16406:1:10',
                    },
                  ],
                },
                {
                  nodeType: 'YulAssignment',
                  src: '16440:16:10',
                  value: {
                    arguments: [
                      {
                        name: 'x',
                        nodeType: 'YulIdentifier',
                        src: '16451:1:10',
                      },
                      {
                        name: 'y',
                        nodeType: 'YulIdentifier',
                        src: '16454:1:10',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '16447:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '16447:9:10',
                  },
                  variableNames: [
                    {
                      name: 'sum',
                      nodeType: 'YulIdentifier',
                      src: '16440:3:10',
                    },
                  ],
                },
                {
                  body: {
                    nodeType: 'YulBlock',
                    src: '16480:22:10',
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: 'panic_error_0x11',
                            nodeType: 'YulIdentifier',
                            src: '16482:16:10',
                          },
                          nodeType: 'YulFunctionCall',
                          src: '16482:18:10',
                        },
                        nodeType: 'YulExpressionStatement',
                        src: '16482:18:10',
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: 'x',
                        nodeType: 'YulIdentifier',
                        src: '16472:1:10',
                      },
                      {
                        name: 'sum',
                        nodeType: 'YulIdentifier',
                        src: '16475:3:10',
                      },
                    ],
                    functionName: {
                      name: 'gt',
                      nodeType: 'YulIdentifier',
                      src: '16469:2:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '16469:10:10',
                  },
                  nodeType: 'YulIf',
                  src: '16466:36:10',
                },
              ],
            },
            name: 'checked_add_t_uint256',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'x',
                nodeType: 'YulTypedName',
                src: '16349:1:10',
                type: '',
              },
              {
                name: 'y',
                nodeType: 'YulTypedName',
                src: '16352:1:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'sum',
                nodeType: 'YulTypedName',
                src: '16358:3:10',
                type: '',
              },
            ],
            src: '16318:191:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '16621:73:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '16643:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '16651:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '16639:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '16639:14:10',
                      },
                      {
                        hexValue: '4572726f723a20496e7365727420612076616c69642061646472657373',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '16655:31:10',
                        type: '',
                        value: 'Error: Insert a valid address',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '16632:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '16632:55:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '16632:55:10',
                },
              ],
            },
            name: 'store_literal_in_memory_8f0cfd8cd2fcca001b9ad444ba4e3773eb28dd21c64c137b7634bfdf918b0d52',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'memPtr',
                nodeType: 'YulTypedName',
                src: '16613:6:10',
                type: '',
              },
            ],
            src: '16515:179:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '16846:220:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '16856:74:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '16922:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '16927:2:10',
                        type: '',
                        value: '29',
                      },
                    ],
                    functionName: {
                      name: 'array_storeLengthForEncoding_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '16863:58:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '16863:67:10',
                  },
                  variableNames: [
                    {
                      name: 'pos',
                      nodeType: 'YulIdentifier',
                      src: '16856:3:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '17028:3:10',
                      },
                    ],
                    functionName: {
                      name: 'store_literal_in_memory_8f0cfd8cd2fcca001b9ad444ba4e3773eb28dd21c64c137b7634bfdf918b0d52',
                      nodeType: 'YulIdentifier',
                      src: '16939:88:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '16939:93:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '16939:93:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '17041:19:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '17052:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '17057:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '17048:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '17048:12:10',
                  },
                  variableNames: [
                    {
                      name: 'end',
                      nodeType: 'YulIdentifier',
                      src: '17041:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_t_stringliteral_8f0cfd8cd2fcca001b9ad444ba4e3773eb28dd21c64c137b7634bfdf918b0d52_to_t_string_memory_ptr_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '16834:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '16842:3:10',
                type: '',
              },
            ],
            src: '16700:366:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '17243:248:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '17253:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '17265:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '17276:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '17261:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '17261:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '17253:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '17300:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '17311:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '17296:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '17296:17:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'tail',
                            nodeType: 'YulIdentifier',
                            src: '17319:4:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '17325:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '17315:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '17315:20:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '17289:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '17289:47:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '17289:47:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '17345:139:10',
                  value: {
                    arguments: [
                      {
                        name: 'tail',
                        nodeType: 'YulIdentifier',
                        src: '17479:4:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_stringliteral_8f0cfd8cd2fcca001b9ad444ba4e3773eb28dd21c64c137b7634bfdf918b0d52_to_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '17353:124:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '17353:131:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '17345:4:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_tuple_t_stringliteral_8f0cfd8cd2fcca001b9ad444ba4e3773eb28dd21c64c137b7634bfdf918b0d52__to_t_string_memory_ptr__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '17223:9:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '17238:4:10',
                type: '',
              },
            ],
            src: '17072:419:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '17525:152:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '17542:1:10',
                        type: '',
                        value: '0',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '17545:77:10',
                        type: '',
                        value:
                          '35408467139433450592217433187231851964531694900788300625387963629091585785856',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '17535:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '17535:88:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '17535:88:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '17639:1:10',
                        type: '',
                        value: '4',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '17642:4:10',
                        type: '',
                        value: '0x21',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '17632:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '17632:15:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '17632:15:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '17663:1:10',
                        type: '',
                        value: '0',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '17666:4:10',
                        type: '',
                        value: '0x24',
                      },
                    ],
                    functionName: {
                      name: 'revert',
                      nodeType: 'YulIdentifier',
                      src: '17656:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '17656:15:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '17656:15:10',
                },
              ],
            },
            name: 'panic_error_0x21',
            nodeType: 'YulFunctionDefinition',
            src: '17497:180:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '17789:63:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '17811:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '17819:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '17807:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '17807:14:10',
                      },
                      {
                        hexValue: '57726f6e6720717561727465722076616c7565',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '17823:21:10',
                        type: '',
                        value: 'Wrong quarter value',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '17800:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '17800:45:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '17800:45:10',
                },
              ],
            },
            name: 'store_literal_in_memory_c77d3b8ea0c01711d5459e0ce6670d5e66167523171300239843fc7ff0b63925',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'memPtr',
                nodeType: 'YulTypedName',
                src: '17781:6:10',
                type: '',
              },
            ],
            src: '17683:169:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '18004:220:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '18014:74:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '18080:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '18085:2:10',
                        type: '',
                        value: '19',
                      },
                    ],
                    functionName: {
                      name: 'array_storeLengthForEncoding_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '18021:58:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '18021:67:10',
                  },
                  variableNames: [
                    {
                      name: 'pos',
                      nodeType: 'YulIdentifier',
                      src: '18014:3:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '18186:3:10',
                      },
                    ],
                    functionName: {
                      name: 'store_literal_in_memory_c77d3b8ea0c01711d5459e0ce6670d5e66167523171300239843fc7ff0b63925',
                      nodeType: 'YulIdentifier',
                      src: '18097:88:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '18097:93:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '18097:93:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '18199:19:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '18210:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '18215:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '18206:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '18206:12:10',
                  },
                  variableNames: [
                    {
                      name: 'end',
                      nodeType: 'YulIdentifier',
                      src: '18199:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_t_stringliteral_c77d3b8ea0c01711d5459e0ce6670d5e66167523171300239843fc7ff0b63925_to_t_string_memory_ptr_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '17992:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '18000:3:10',
                type: '',
              },
            ],
            src: '17858:366:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '18401:248:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '18411:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '18423:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '18434:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '18419:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '18419:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '18411:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '18458:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '18469:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '18454:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '18454:17:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'tail',
                            nodeType: 'YulIdentifier',
                            src: '18477:4:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '18483:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '18473:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '18473:20:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '18447:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '18447:47:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '18447:47:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '18503:139:10',
                  value: {
                    arguments: [
                      {
                        name: 'tail',
                        nodeType: 'YulIdentifier',
                        src: '18637:4:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_stringliteral_c77d3b8ea0c01711d5459e0ce6670d5e66167523171300239843fc7ff0b63925_to_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '18511:124:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '18511:131:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '18503:4:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_tuple_t_stringliteral_c77d3b8ea0c01711d5459e0ce6670d5e66167523171300239843fc7ff0b63925__to_t_string_memory_ptr__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '18381:9:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '18396:4:10',
                type: '',
              },
            ],
            src: '18230:419:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '18761:60:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '18783:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '18791:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '18779:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '18779:14:10',
                      },
                      {
                        hexValue: '4572726f723a20546f6f206561726c79',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '18795:18:10',
                        type: '',
                        value: 'Error: Too early',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '18772:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '18772:42:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '18772:42:10',
                },
              ],
            },
            name: 'store_literal_in_memory_5464526ec0704ec6b9cefd949942cd2bbfd1e4db9db52460069a56f4be8bda77',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'memPtr',
                nodeType: 'YulTypedName',
                src: '18753:6:10',
                type: '',
              },
            ],
            src: '18655:166:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '18973:220:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '18983:74:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '19049:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '19054:2:10',
                        type: '',
                        value: '16',
                      },
                    ],
                    functionName: {
                      name: 'array_storeLengthForEncoding_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '18990:58:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '18990:67:10',
                  },
                  variableNames: [
                    {
                      name: 'pos',
                      nodeType: 'YulIdentifier',
                      src: '18983:3:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '19155:3:10',
                      },
                    ],
                    functionName: {
                      name: 'store_literal_in_memory_5464526ec0704ec6b9cefd949942cd2bbfd1e4db9db52460069a56f4be8bda77',
                      nodeType: 'YulIdentifier',
                      src: '19066:88:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '19066:93:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '19066:93:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '19168:19:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '19179:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '19184:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '19175:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '19175:12:10',
                  },
                  variableNames: [
                    {
                      name: 'end',
                      nodeType: 'YulIdentifier',
                      src: '19168:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_t_stringliteral_5464526ec0704ec6b9cefd949942cd2bbfd1e4db9db52460069a56f4be8bda77_to_t_string_memory_ptr_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '18961:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '18969:3:10',
                type: '',
              },
            ],
            src: '18827:366:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '19370:248:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '19380:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '19392:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '19403:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '19388:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '19388:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '19380:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '19427:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '19438:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '19423:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '19423:17:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'tail',
                            nodeType: 'YulIdentifier',
                            src: '19446:4:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '19452:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '19442:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '19442:20:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '19416:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '19416:47:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '19416:47:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '19472:139:10',
                  value: {
                    arguments: [
                      {
                        name: 'tail',
                        nodeType: 'YulIdentifier',
                        src: '19606:4:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_stringliteral_5464526ec0704ec6b9cefd949942cd2bbfd1e4db9db52460069a56f4be8bda77_to_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '19480:124:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '19480:131:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '19472:4:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_tuple_t_stringliteral_5464526ec0704ec6b9cefd949942cd2bbfd1e4db9db52460069a56f4be8bda77__to_t_string_memory_ptr__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '19350:9:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '19365:4:10',
                type: '',
              },
            ],
            src: '19199:419:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '19730:66:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '19752:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '19760:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '19748:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '19748:14:10',
                      },
                      {
                        hexValue: '457272726f723a20416c72656164792066756e646564',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '19764:24:10',
                        type: '',
                        value: 'Errror: Already funded',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '19741:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '19741:48:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '19741:48:10',
                },
              ],
            },
            name: 'store_literal_in_memory_36ea2bb795312ab83ff321f78b7e5f1d318c82acdadce977f53048753d716e9c',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'memPtr',
                nodeType: 'YulTypedName',
                src: '19722:6:10',
                type: '',
              },
            ],
            src: '19624:172:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '19948:220:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '19958:74:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '20024:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '20029:2:10',
                        type: '',
                        value: '22',
                      },
                    ],
                    functionName: {
                      name: 'array_storeLengthForEncoding_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '19965:58:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '19965:67:10',
                  },
                  variableNames: [
                    {
                      name: 'pos',
                      nodeType: 'YulIdentifier',
                      src: '19958:3:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '20130:3:10',
                      },
                    ],
                    functionName: {
                      name: 'store_literal_in_memory_36ea2bb795312ab83ff321f78b7e5f1d318c82acdadce977f53048753d716e9c',
                      nodeType: 'YulIdentifier',
                      src: '20041:88:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '20041:93:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '20041:93:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '20143:19:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '20154:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '20159:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '20150:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '20150:12:10',
                  },
                  variableNames: [
                    {
                      name: 'end',
                      nodeType: 'YulIdentifier',
                      src: '20143:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_t_stringliteral_36ea2bb795312ab83ff321f78b7e5f1d318c82acdadce977f53048753d716e9c_to_t_string_memory_ptr_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '19936:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '19944:3:10',
                type: '',
              },
            ],
            src: '19802:366:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '20345:248:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '20355:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '20367:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '20378:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '20363:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '20363:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '20355:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '20402:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '20413:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '20398:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '20398:17:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'tail',
                            nodeType: 'YulIdentifier',
                            src: '20421:4:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '20427:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '20417:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '20417:20:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '20391:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '20391:47:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '20391:47:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '20447:139:10',
                  value: {
                    arguments: [
                      {
                        name: 'tail',
                        nodeType: 'YulIdentifier',
                        src: '20581:4:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_stringliteral_36ea2bb795312ab83ff321f78b7e5f1d318c82acdadce977f53048753d716e9c_to_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '20455:124:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '20455:131:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '20447:4:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_tuple_t_stringliteral_36ea2bb795312ab83ff321f78b7e5f1d318c82acdadce977f53048753d716e9c__to_t_string_memory_ptr__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '20325:9:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '20340:4:10',
                type: '',
              },
            ],
            src: '20174:419:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '20705:72:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '20727:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '20735:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '20723:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '20723:14:10',
                      },
                      {
                        hexValue: '457272726f723a20506f6f6c206e6f7420696e697469616c69736564',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '20739:30:10',
                        type: '',
                        value: 'Errror: Pool not initialised',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '20716:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '20716:54:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '20716:54:10',
                },
              ],
            },
            name: 'store_literal_in_memory_fbe7dc8cb6967492f3774ced390347af24ac362c6fe000589004d0e76dec16da',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'memPtr',
                nodeType: 'YulTypedName',
                src: '20697:6:10',
                type: '',
              },
            ],
            src: '20599:178:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '20929:220:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '20939:74:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '21005:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '21010:2:10',
                        type: '',
                        value: '28',
                      },
                    ],
                    functionName: {
                      name: 'array_storeLengthForEncoding_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '20946:58:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '20946:67:10',
                  },
                  variableNames: [
                    {
                      name: 'pos',
                      nodeType: 'YulIdentifier',
                      src: '20939:3:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '21111:3:10',
                      },
                    ],
                    functionName: {
                      name: 'store_literal_in_memory_fbe7dc8cb6967492f3774ced390347af24ac362c6fe000589004d0e76dec16da',
                      nodeType: 'YulIdentifier',
                      src: '21022:88:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '21022:93:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '21022:93:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '21124:19:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '21135:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '21140:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '21131:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '21131:12:10',
                  },
                  variableNames: [
                    {
                      name: 'end',
                      nodeType: 'YulIdentifier',
                      src: '21124:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_t_stringliteral_fbe7dc8cb6967492f3774ced390347af24ac362c6fe000589004d0e76dec16da_to_t_string_memory_ptr_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '20917:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '20925:3:10',
                type: '',
              },
            ],
            src: '20783:366:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '21326:248:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '21336:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '21348:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '21359:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '21344:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '21344:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '21336:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '21383:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '21394:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '21379:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '21379:17:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'tail',
                            nodeType: 'YulIdentifier',
                            src: '21402:4:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '21408:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '21398:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '21398:20:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '21372:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '21372:47:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '21372:47:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '21428:139:10',
                  value: {
                    arguments: [
                      {
                        name: 'tail',
                        nodeType: 'YulIdentifier',
                        src: '21562:4:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_stringliteral_fbe7dc8cb6967492f3774ced390347af24ac362c6fe000589004d0e76dec16da_to_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '21436:124:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '21436:131:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '21428:4:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_tuple_t_stringliteral_fbe7dc8cb6967492f3774ced390347af24ac362c6fe000589004d0e76dec16da__to_t_string_memory_ptr__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '21306:9:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '21321:4:10',
                type: '',
              },
            ],
            src: '21155:419:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '21686:118:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '21708:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '21716:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '21704:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '21704:14:10',
                      },
                      {
                        hexValue:
                          '45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '21720:34:10',
                        type: '',
                        value: 'ERC20: decreased allowance below',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '21697:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '21697:58:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '21697:58:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '21776:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '21784:2:10',
                            type: '',
                            value: '32',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '21772:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '21772:15:10',
                      },
                      {
                        hexValue: '207a65726f',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '21789:7:10',
                        type: '',
                        value: ' zero',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '21765:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '21765:32:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '21765:32:10',
                },
              ],
            },
            name: 'store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'memPtr',
                nodeType: 'YulTypedName',
                src: '21678:6:10',
                type: '',
              },
            ],
            src: '21580:224:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '21956:220:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '21966:74:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '22032:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '22037:2:10',
                        type: '',
                        value: '37',
                      },
                    ],
                    functionName: {
                      name: 'array_storeLengthForEncoding_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '21973:58:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '21973:67:10',
                  },
                  variableNames: [
                    {
                      name: 'pos',
                      nodeType: 'YulIdentifier',
                      src: '21966:3:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '22138:3:10',
                      },
                    ],
                    functionName: {
                      name: 'store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8',
                      nodeType: 'YulIdentifier',
                      src: '22049:88:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '22049:93:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '22049:93:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '22151:19:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '22162:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '22167:2:10',
                        type: '',
                        value: '64',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '22158:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '22158:12:10',
                  },
                  variableNames: [
                    {
                      name: 'end',
                      nodeType: 'YulIdentifier',
                      src: '22151:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '21944:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '21952:3:10',
                type: '',
              },
            ],
            src: '21810:366:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '22353:248:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '22363:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '22375:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '22386:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '22371:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '22371:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '22363:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '22410:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '22421:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '22406:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '22406:17:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'tail',
                            nodeType: 'YulIdentifier',
                            src: '22429:4:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '22435:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '22425:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '22425:20:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '22399:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '22399:47:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '22399:47:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '22455:139:10',
                  value: {
                    arguments: [
                      {
                        name: 'tail',
                        nodeType: 'YulIdentifier',
                        src: '22589:4:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '22463:124:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '22463:131:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '22455:4:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '22333:9:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '22348:4:10',
                type: '',
              },
            ],
            src: '22182:419:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '22713:119:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '22735:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '22743:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '22731:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '22731:14:10',
                      },
                      {
                        hexValue:
                          '4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '22747:34:10',
                        type: '',
                        value: 'Ownable: new owner is the zero a',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '22724:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '22724:58:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '22724:58:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '22803:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '22811:2:10',
                            type: '',
                            value: '32',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '22799:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '22799:15:10',
                      },
                      {
                        hexValue: '646472657373',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '22816:8:10',
                        type: '',
                        value: 'ddress',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '22792:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '22792:33:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '22792:33:10',
                },
              ],
            },
            name: 'store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'memPtr',
                nodeType: 'YulTypedName',
                src: '22705:6:10',
                type: '',
              },
            ],
            src: '22607:225:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '22984:220:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '22994:74:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '23060:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '23065:2:10',
                        type: '',
                        value: '38',
                      },
                    ],
                    functionName: {
                      name: 'array_storeLengthForEncoding_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '23001:58:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '23001:67:10',
                  },
                  variableNames: [
                    {
                      name: 'pos',
                      nodeType: 'YulIdentifier',
                      src: '22994:3:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '23166:3:10',
                      },
                    ],
                    functionName: {
                      name: 'store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe',
                      nodeType: 'YulIdentifier',
                      src: '23077:88:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '23077:93:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '23077:93:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '23179:19:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '23190:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '23195:2:10',
                        type: '',
                        value: '64',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '23186:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '23186:12:10',
                  },
                  variableNames: [
                    {
                      name: 'end',
                      nodeType: 'YulIdentifier',
                      src: '23179:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '22972:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '22980:3:10',
                type: '',
              },
            ],
            src: '22838:366:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '23381:248:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '23391:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '23403:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '23414:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '23399:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '23399:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '23391:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '23438:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '23449:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '23434:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '23434:17:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'tail',
                            nodeType: 'YulIdentifier',
                            src: '23457:4:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '23463:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '23453:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '23453:20:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '23427:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '23427:47:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '23427:47:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '23483:139:10',
                  value: {
                    arguments: [
                      {
                        name: 'tail',
                        nodeType: 'YulIdentifier',
                        src: '23617:4:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '23491:124:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '23491:131:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '23483:4:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '23361:9:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '23376:4:10',
                type: '',
              },
            ],
            src: '23210:419:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '23741:117:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '23763:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '23771:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '23759:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '23759:14:10',
                      },
                      {
                        hexValue:
                          '45524332303a20617070726f76652066726f6d20746865207a65726f20616464',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '23775:34:10',
                        type: '',
                        value: 'ERC20: approve from the zero add',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '23752:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '23752:58:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '23752:58:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '23831:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '23839:2:10',
                            type: '',
                            value: '32',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '23827:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '23827:15:10',
                      },
                      {
                        hexValue: '72657373',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '23844:6:10',
                        type: '',
                        value: 'ress',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '23820:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '23820:31:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '23820:31:10',
                },
              ],
            },
            name: 'store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'memPtr',
                nodeType: 'YulTypedName',
                src: '23733:6:10',
                type: '',
              },
            ],
            src: '23635:223:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '24010:220:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '24020:74:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '24086:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '24091:2:10',
                        type: '',
                        value: '36',
                      },
                    ],
                    functionName: {
                      name: 'array_storeLengthForEncoding_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '24027:58:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '24027:67:10',
                  },
                  variableNames: [
                    {
                      name: 'pos',
                      nodeType: 'YulIdentifier',
                      src: '24020:3:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '24192:3:10',
                      },
                    ],
                    functionName: {
                      name: 'store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208',
                      nodeType: 'YulIdentifier',
                      src: '24103:88:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '24103:93:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '24103:93:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '24205:19:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '24216:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '24221:2:10',
                        type: '',
                        value: '64',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '24212:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '24212:12:10',
                  },
                  variableNames: [
                    {
                      name: 'end',
                      nodeType: 'YulIdentifier',
                      src: '24205:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '23998:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '24006:3:10',
                type: '',
              },
            ],
            src: '23864:366:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '24407:248:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '24417:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '24429:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '24440:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '24425:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '24425:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '24417:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '24464:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '24475:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '24460:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '24460:17:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'tail',
                            nodeType: 'YulIdentifier',
                            src: '24483:4:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '24489:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '24479:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '24479:20:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '24453:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '24453:47:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '24453:47:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '24509:139:10',
                  value: {
                    arguments: [
                      {
                        name: 'tail',
                        nodeType: 'YulIdentifier',
                        src: '24643:4:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '24517:124:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '24517:131:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '24509:4:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '24387:9:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '24402:4:10',
                type: '',
              },
            ],
            src: '24236:419:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '24767:115:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '24789:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '24797:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '24785:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '24785:14:10',
                      },
                      {
                        hexValue:
                          '45524332303a20617070726f766520746f20746865207a65726f206164647265',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '24801:34:10',
                        type: '',
                        value: 'ERC20: approve to the zero addre',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '24778:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '24778:58:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '24778:58:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '24857:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '24865:2:10',
                            type: '',
                            value: '32',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '24853:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '24853:15:10',
                      },
                      {
                        hexValue: '7373',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '24870:4:10',
                        type: '',
                        value: 'ss',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '24846:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '24846:29:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '24846:29:10',
                },
              ],
            },
            name: 'store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'memPtr',
                nodeType: 'YulTypedName',
                src: '24759:6:10',
                type: '',
              },
            ],
            src: '24661:221:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '25034:220:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '25044:74:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '25110:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '25115:2:10',
                        type: '',
                        value: '34',
                      },
                    ],
                    functionName: {
                      name: 'array_storeLengthForEncoding_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '25051:58:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '25051:67:10',
                  },
                  variableNames: [
                    {
                      name: 'pos',
                      nodeType: 'YulIdentifier',
                      src: '25044:3:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '25216:3:10',
                      },
                    ],
                    functionName: {
                      name: 'store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029',
                      nodeType: 'YulIdentifier',
                      src: '25127:88:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '25127:93:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '25127:93:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '25229:19:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '25240:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '25245:2:10',
                        type: '',
                        value: '64',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '25236:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '25236:12:10',
                  },
                  variableNames: [
                    {
                      name: 'end',
                      nodeType: 'YulIdentifier',
                      src: '25229:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '25022:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '25030:3:10',
                type: '',
              },
            ],
            src: '24888:366:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '25431:248:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '25441:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '25453:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '25464:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '25449:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '25449:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '25441:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '25488:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '25499:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '25484:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '25484:17:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'tail',
                            nodeType: 'YulIdentifier',
                            src: '25507:4:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '25513:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '25503:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '25503:20:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '25477:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '25477:47:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '25477:47:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '25533:139:10',
                  value: {
                    arguments: [
                      {
                        name: 'tail',
                        nodeType: 'YulIdentifier',
                        src: '25667:4:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '25541:124:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '25541:131:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '25533:4:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '25411:9:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '25426:4:10',
                type: '',
              },
            ],
            src: '25260:419:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '25791:73:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '25813:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '25821:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '25809:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '25809:14:10',
                      },
                      {
                        hexValue: '45524332303a20696e73756666696369656e7420616c6c6f77616e6365',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '25825:31:10',
                        type: '',
                        value: 'ERC20: insufficient allowance',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '25802:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '25802:55:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '25802:55:10',
                },
              ],
            },
            name: 'store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'memPtr',
                nodeType: 'YulTypedName',
                src: '25783:6:10',
                type: '',
              },
            ],
            src: '25685:179:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '26016:220:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '26026:74:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '26092:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '26097:2:10',
                        type: '',
                        value: '29',
                      },
                    ],
                    functionName: {
                      name: 'array_storeLengthForEncoding_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '26033:58:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '26033:67:10',
                  },
                  variableNames: [
                    {
                      name: 'pos',
                      nodeType: 'YulIdentifier',
                      src: '26026:3:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '26198:3:10',
                      },
                    ],
                    functionName: {
                      name: 'store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe',
                      nodeType: 'YulIdentifier',
                      src: '26109:88:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '26109:93:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '26109:93:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '26211:19:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '26222:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '26227:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '26218:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '26218:12:10',
                  },
                  variableNames: [
                    {
                      name: 'end',
                      nodeType: 'YulIdentifier',
                      src: '26211:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '26004:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '26012:3:10',
                type: '',
              },
            ],
            src: '25870:366:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '26413:248:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '26423:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '26435:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '26446:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '26431:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '26431:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '26423:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '26470:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '26481:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '26466:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '26466:17:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'tail',
                            nodeType: 'YulIdentifier',
                            src: '26489:4:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '26495:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '26485:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '26485:20:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '26459:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '26459:47:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '26459:47:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '26515:139:10',
                  value: {
                    arguments: [
                      {
                        name: 'tail',
                        nodeType: 'YulIdentifier',
                        src: '26649:4:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '26523:124:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '26523:131:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '26515:4:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '26393:9:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '26408:4:10',
                type: '',
              },
            ],
            src: '26242:419:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '26773:118:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '26795:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '26803:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '26791:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '26791:14:10',
                      },
                      {
                        hexValue:
                          '45524332303a207472616e736665722066726f6d20746865207a65726f206164',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '26807:34:10',
                        type: '',
                        value: 'ERC20: transfer from the zero ad',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '26784:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '26784:58:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '26784:58:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '26863:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '26871:2:10',
                            type: '',
                            value: '32',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '26859:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '26859:15:10',
                      },
                      {
                        hexValue: '6472657373',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '26876:7:10',
                        type: '',
                        value: 'dress',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '26852:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '26852:32:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '26852:32:10',
                },
              ],
            },
            name: 'store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'memPtr',
                nodeType: 'YulTypedName',
                src: '26765:6:10',
                type: '',
              },
            ],
            src: '26667:224:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '27043:220:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '27053:74:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '27119:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '27124:2:10',
                        type: '',
                        value: '37',
                      },
                    ],
                    functionName: {
                      name: 'array_storeLengthForEncoding_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '27060:58:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '27060:67:10',
                  },
                  variableNames: [
                    {
                      name: 'pos',
                      nodeType: 'YulIdentifier',
                      src: '27053:3:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '27225:3:10',
                      },
                    ],
                    functionName: {
                      name: 'store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea',
                      nodeType: 'YulIdentifier',
                      src: '27136:88:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '27136:93:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '27136:93:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '27238:19:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '27249:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '27254:2:10',
                        type: '',
                        value: '64',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '27245:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '27245:12:10',
                  },
                  variableNames: [
                    {
                      name: 'end',
                      nodeType: 'YulIdentifier',
                      src: '27238:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '27031:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '27039:3:10',
                type: '',
              },
            ],
            src: '26897:366:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '27440:248:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '27450:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '27462:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '27473:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '27458:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '27458:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '27450:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '27497:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '27508:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '27493:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '27493:17:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'tail',
                            nodeType: 'YulIdentifier',
                            src: '27516:4:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '27522:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '27512:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '27512:20:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '27486:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '27486:47:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '27486:47:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '27542:139:10',
                  value: {
                    arguments: [
                      {
                        name: 'tail',
                        nodeType: 'YulIdentifier',
                        src: '27676:4:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '27550:124:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '27550:131:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '27542:4:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '27420:9:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '27435:4:10',
                type: '',
              },
            ],
            src: '27269:419:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '27800:116:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '27822:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '27830:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '27818:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '27818:14:10',
                      },
                      {
                        hexValue:
                          '45524332303a207472616e7366657220746f20746865207a65726f2061646472',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '27834:34:10',
                        type: '',
                        value: 'ERC20: transfer to the zero addr',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '27811:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '27811:58:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '27811:58:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '27890:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '27898:2:10',
                            type: '',
                            value: '32',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '27886:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '27886:15:10',
                      },
                      {
                        hexValue: '657373',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '27903:5:10',
                        type: '',
                        value: 'ess',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '27879:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '27879:30:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '27879:30:10',
                },
              ],
            },
            name: 'store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'memPtr',
                nodeType: 'YulTypedName',
                src: '27792:6:10',
                type: '',
              },
            ],
            src: '27694:222:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '28068:220:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '28078:74:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '28144:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '28149:2:10',
                        type: '',
                        value: '35',
                      },
                    ],
                    functionName: {
                      name: 'array_storeLengthForEncoding_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '28085:58:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '28085:67:10',
                  },
                  variableNames: [
                    {
                      name: 'pos',
                      nodeType: 'YulIdentifier',
                      src: '28078:3:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '28250:3:10',
                      },
                    ],
                    functionName: {
                      name: 'store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f',
                      nodeType: 'YulIdentifier',
                      src: '28161:88:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '28161:93:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '28161:93:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '28263:19:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '28274:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '28279:2:10',
                        type: '',
                        value: '64',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '28270:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '28270:12:10',
                  },
                  variableNames: [
                    {
                      name: 'end',
                      nodeType: 'YulIdentifier',
                      src: '28263:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '28056:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '28064:3:10',
                type: '',
              },
            ],
            src: '27922:366:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '28465:248:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '28475:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '28487:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '28498:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '28483:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '28483:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '28475:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '28522:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '28533:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '28518:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '28518:17:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'tail',
                            nodeType: 'YulIdentifier',
                            src: '28541:4:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '28547:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '28537:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '28537:20:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '28511:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '28511:47:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '28511:47:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '28567:139:10',
                  value: {
                    arguments: [
                      {
                        name: 'tail',
                        nodeType: 'YulIdentifier',
                        src: '28701:4:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '28575:124:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '28575:131:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '28567:4:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '28445:9:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '28460:4:10',
                type: '',
              },
            ],
            src: '28294:419:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '28825:119:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '28847:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '28855:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '28843:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '28843:14:10',
                      },
                      {
                        hexValue:
                          '45524332303a207472616e7366657220616d6f756e7420657863656564732062',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '28859:34:10',
                        type: '',
                        value: 'ERC20: transfer amount exceeds b',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '28836:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '28836:58:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '28836:58:10',
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '28915:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '28923:2:10',
                            type: '',
                            value: '32',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '28911:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '28911:15:10',
                      },
                      {
                        hexValue: '616c616e6365',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '28928:8:10',
                        type: '',
                        value: 'alance',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '28904:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '28904:33:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '28904:33:10',
                },
              ],
            },
            name: 'store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'memPtr',
                nodeType: 'YulTypedName',
                src: '28817:6:10',
                type: '',
              },
            ],
            src: '28719:225:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '29096:220:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '29106:74:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '29172:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '29177:2:10',
                        type: '',
                        value: '38',
                      },
                    ],
                    functionName: {
                      name: 'array_storeLengthForEncoding_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '29113:58:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '29113:67:10',
                  },
                  variableNames: [
                    {
                      name: 'pos',
                      nodeType: 'YulIdentifier',
                      src: '29106:3:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '29278:3:10',
                      },
                    ],
                    functionName: {
                      name: 'store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6',
                      nodeType: 'YulIdentifier',
                      src: '29189:88:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '29189:93:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '29189:93:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '29291:19:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '29302:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '29307:2:10',
                        type: '',
                        value: '64',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '29298:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '29298:12:10',
                  },
                  variableNames: [
                    {
                      name: 'end',
                      nodeType: 'YulIdentifier',
                      src: '29291:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '29084:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '29092:3:10',
                type: '',
              },
            ],
            src: '28950:366:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '29493:248:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '29503:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '29515:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '29526:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '29511:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '29511:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '29503:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '29550:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '29561:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '29546:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '29546:17:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'tail',
                            nodeType: 'YulIdentifier',
                            src: '29569:4:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '29575:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '29565:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '29565:20:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '29539:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '29539:47:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '29539:47:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '29595:139:10',
                  value: {
                    arguments: [
                      {
                        name: 'tail',
                        nodeType: 'YulIdentifier',
                        src: '29729:4:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '29603:124:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '29603:131:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '29595:4:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '29473:9:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '29488:4:10',
                type: '',
              },
            ],
            src: '29322:419:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '29853:75:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '29875:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '29883:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '29871:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '29871:14:10',
                      },
                      {
                        hexValue: '45524332303a206d696e7420746f20746865207a65726f2061646472657373',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '29887:33:10',
                        type: '',
                        value: 'ERC20: mint to the zero address',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '29864:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '29864:57:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '29864:57:10',
                },
              ],
            },
            name: 'store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'memPtr',
                nodeType: 'YulTypedName',
                src: '29845:6:10',
                type: '',
              },
            ],
            src: '29747:181:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '30080:220:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '30090:74:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '30156:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '30161:2:10',
                        type: '',
                        value: '31',
                      },
                    ],
                    functionName: {
                      name: 'array_storeLengthForEncoding_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '30097:58:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '30097:67:10',
                  },
                  variableNames: [
                    {
                      name: 'pos',
                      nodeType: 'YulIdentifier',
                      src: '30090:3:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '30262:3:10',
                      },
                    ],
                    functionName: {
                      name: 'store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e',
                      nodeType: 'YulIdentifier',
                      src: '30173:88:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '30173:93:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '30173:93:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '30275:19:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '30286:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '30291:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '30282:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '30282:12:10',
                  },
                  variableNames: [
                    {
                      name: 'end',
                      nodeType: 'YulIdentifier',
                      src: '30275:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '30068:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '30076:3:10',
                type: '',
              },
            ],
            src: '29934:366:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '30477:248:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '30487:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '30499:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '30510:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '30495:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '30495:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '30487:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '30534:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '30545:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '30530:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '30530:17:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'tail',
                            nodeType: 'YulIdentifier',
                            src: '30553:4:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '30559:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '30549:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '30549:20:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '30523:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '30523:47:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '30523:47:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '30579:139:10',
                  value: {
                    arguments: [
                      {
                        name: 'tail',
                        nodeType: 'YulIdentifier',
                        src: '30713:4:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '30587:124:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '30587:131:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '30579:4:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '30457:9:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '30472:4:10',
                type: '',
              },
            ],
            src: '30306:419:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '30837:76:10',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'memPtr',
                            nodeType: 'YulIdentifier',
                            src: '30859:6:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '30867:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '30855:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '30855:14:10',
                      },
                      {
                        hexValue:
                          '4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572',
                        kind: 'string',
                        nodeType: 'YulLiteral',
                        src: '30871:34:10',
                        type: '',
                        value: 'Ownable: caller is not the owner',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '30848:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '30848:58:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '30848:58:10',
                },
              ],
            },
            name: 'store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'memPtr',
                nodeType: 'YulTypedName',
                src: '30829:6:10',
                type: '',
              },
            ],
            src: '30731:182:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '31065:220:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '31075:74:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '31141:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '31146:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'array_storeLengthForEncoding_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '31082:58:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '31082:67:10',
                  },
                  variableNames: [
                    {
                      name: 'pos',
                      nodeType: 'YulIdentifier',
                      src: '31075:3:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '31247:3:10',
                      },
                    ],
                    functionName: {
                      name: 'store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe',
                      nodeType: 'YulIdentifier',
                      src: '31158:88:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '31158:93:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '31158:93:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '31260:19:10',
                  value: {
                    arguments: [
                      {
                        name: 'pos',
                        nodeType: 'YulIdentifier',
                        src: '31271:3:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '31276:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '31267:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '31267:12:10',
                  },
                  variableNames: [
                    {
                      name: 'end',
                      nodeType: 'YulIdentifier',
                      src: '31260:3:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'pos',
                nodeType: 'YulTypedName',
                src: '31053:3:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'end',
                nodeType: 'YulTypedName',
                src: '31061:3:10',
                type: '',
              },
            ],
            src: '30919:366:10',
          },
          {
            body: {
              nodeType: 'YulBlock',
              src: '31462:248:10',
              statements: [
                {
                  nodeType: 'YulAssignment',
                  src: '31472:26:10',
                  value: {
                    arguments: [
                      {
                        name: 'headStart',
                        nodeType: 'YulIdentifier',
                        src: '31484:9:10',
                      },
                      {
                        kind: 'number',
                        nodeType: 'YulLiteral',
                        src: '31495:2:10',
                        type: '',
                        value: '32',
                      },
                    ],
                    functionName: {
                      name: 'add',
                      nodeType: 'YulIdentifier',
                      src: '31480:3:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '31480:18:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '31472:4:10',
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '31519:9:10',
                          },
                          {
                            kind: 'number',
                            nodeType: 'YulLiteral',
                            src: '31530:1:10',
                            type: '',
                            value: '0',
                          },
                        ],
                        functionName: {
                          name: 'add',
                          nodeType: 'YulIdentifier',
                          src: '31515:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '31515:17:10',
                      },
                      {
                        arguments: [
                          {
                            name: 'tail',
                            nodeType: 'YulIdentifier',
                            src: '31538:4:10',
                          },
                          {
                            name: 'headStart',
                            nodeType: 'YulIdentifier',
                            src: '31544:9:10',
                          },
                        ],
                        functionName: {
                          name: 'sub',
                          nodeType: 'YulIdentifier',
                          src: '31534:3:10',
                        },
                        nodeType: 'YulFunctionCall',
                        src: '31534:20:10',
                      },
                    ],
                    functionName: {
                      name: 'mstore',
                      nodeType: 'YulIdentifier',
                      src: '31508:6:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '31508:47:10',
                  },
                  nodeType: 'YulExpressionStatement',
                  src: '31508:47:10',
                },
                {
                  nodeType: 'YulAssignment',
                  src: '31564:139:10',
                  value: {
                    arguments: [
                      {
                        name: 'tail',
                        nodeType: 'YulIdentifier',
                        src: '31698:4:10',
                      },
                    ],
                    functionName: {
                      name: 'abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack',
                      nodeType: 'YulIdentifier',
                      src: '31572:124:10',
                    },
                    nodeType: 'YulFunctionCall',
                    src: '31572:131:10',
                  },
                  variableNames: [
                    {
                      name: 'tail',
                      nodeType: 'YulIdentifier',
                      src: '31564:4:10',
                    },
                  ],
                },
              ],
            },
            name: 'abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed',
            nodeType: 'YulFunctionDefinition',
            parameters: [
              {
                name: 'headStart',
                nodeType: 'YulTypedName',
                src: '31442:9:10',
                type: '',
              },
            ],
            returnVariables: [
              {
                name: 'tail',
                nodeType: 'YulTypedName',
                src: '31457:4:10',
                type: '',
              },
            ],
            src: '31291:419:10',
          },
        ],
      },
      contents:
        '{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_enum$_Pools_$861(value) {\n        if iszero(lt(value, 7)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_Pools_$861(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Pools_$861(value)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_enum$_Pools_$861t_uint8(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Pools_$861(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_Pools_$861(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Pools_$861(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_enum$_Pools_$861t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Pools_$861(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_89f2fc1fb3fe768132d50b5b31f1bd6d568e5bf11f17f118e36b91c92aea4831(memPtr) {\n\n        mstore(add(memPtr, 0), "Only admins can call this functi")\n\n        mstore(add(memPtr, 32), "on.")\n\n    }\n\n    function abi_encode_t_stringliteral_89f2fc1fb3fe768132d50b5b31f1bd6d568e5bf11f17f118e36b91c92aea4831_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_89f2fc1fb3fe768132d50b5b31f1bd6d568e5bf11f17f118e36b91c92aea4831(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_89f2fc1fb3fe768132d50b5b31f1bd6d568e5bf11f17f118e36b91c92aea4831__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_89f2fc1fb3fe768132d50b5b31f1bd6d568e5bf11f17f118e36b91c92aea4831_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749(memPtr) {\n\n        mstore(add(memPtr, 0), "Insufficient contract balance")\n\n    }\n\n    function abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_6d4b7b6ea91bf03c4485f47f306c833859d6464346b33323495200ab472d0f32(memPtr) {\n\n        mstore(add(memPtr, 0), "Error: Too small amount for purc")\n\n        mstore(add(memPtr, 32), "hase")\n\n    }\n\n    function abi_encode_t_stringliteral_6d4b7b6ea91bf03c4485f47f306c833859d6464346b33323495200ab472d0f32_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_6d4b7b6ea91bf03c4485f47f306c833859d6464346b33323495200ab472d0f32(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d4b7b6ea91bf03c4485f47f306c833859d6464346b33323495200ab472d0f32__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d4b7b6ea91bf03c4485f47f306c833859d6464346b33323495200ab472d0f32_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4e88686c280eed3d76475d5d474311d14c5816ed524747dc2ba1bff433320f8d(memPtr) {\n\n        mstore(add(memPtr, 0), "Error: Too big amount for purcha")\n\n        mstore(add(memPtr, 32), "se")\n\n    }\n\n    function abi_encode_t_stringliteral_4e88686c280eed3d76475d5d474311d14c5816ed524747dc2ba1bff433320f8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_4e88686c280eed3d76475d5d474311d14c5816ed524747dc2ba1bff433320f8d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4e88686c280eed3d76475d5d474311d14c5816ed524747dc2ba1bff433320f8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4e88686c280eed3d76475d5d474311d14c5816ed524747dc2ba1bff433320f8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // "leave" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_8f0cfd8cd2fcca001b9ad444ba4e3773eb28dd21c64c137b7634bfdf918b0d52(memPtr) {\n\n        mstore(add(memPtr, 0), "Error: Insert a valid address")\n\n    }\n\n    function abi_encode_t_stringliteral_8f0cfd8cd2fcca001b9ad444ba4e3773eb28dd21c64c137b7634bfdf918b0d52_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_8f0cfd8cd2fcca001b9ad444ba4e3773eb28dd21c64c137b7634bfdf918b0d52(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8f0cfd8cd2fcca001b9ad444ba4e3773eb28dd21c64c137b7634bfdf918b0d52__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8f0cfd8cd2fcca001b9ad444ba4e3773eb28dd21c64c137b7634bfdf918b0d52_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_c77d3b8ea0c01711d5459e0ce6670d5e66167523171300239843fc7ff0b63925(memPtr) {\n\n        mstore(add(memPtr, 0), "Wrong quarter value")\n\n    }\n\n    function abi_encode_t_stringliteral_c77d3b8ea0c01711d5459e0ce6670d5e66167523171300239843fc7ff0b63925_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_c77d3b8ea0c01711d5459e0ce6670d5e66167523171300239843fc7ff0b63925(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c77d3b8ea0c01711d5459e0ce6670d5e66167523171300239843fc7ff0b63925__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c77d3b8ea0c01711d5459e0ce6670d5e66167523171300239843fc7ff0b63925_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5464526ec0704ec6b9cefd949942cd2bbfd1e4db9db52460069a56f4be8bda77(memPtr) {\n\n        mstore(add(memPtr, 0), "Error: Too early")\n\n    }\n\n    function abi_encode_t_stringliteral_5464526ec0704ec6b9cefd949942cd2bbfd1e4db9db52460069a56f4be8bda77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_5464526ec0704ec6b9cefd949942cd2bbfd1e4db9db52460069a56f4be8bda77(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5464526ec0704ec6b9cefd949942cd2bbfd1e4db9db52460069a56f4be8bda77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5464526ec0704ec6b9cefd949942cd2bbfd1e4db9db52460069a56f4be8bda77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_36ea2bb795312ab83ff321f78b7e5f1d318c82acdadce977f53048753d716e9c(memPtr) {\n\n        mstore(add(memPtr, 0), "Errror: Already funded")\n\n    }\n\n    function abi_encode_t_stringliteral_36ea2bb795312ab83ff321f78b7e5f1d318c82acdadce977f53048753d716e9c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_36ea2bb795312ab83ff321f78b7e5f1d318c82acdadce977f53048753d716e9c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_36ea2bb795312ab83ff321f78b7e5f1d318c82acdadce977f53048753d716e9c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_36ea2bb795312ab83ff321f78b7e5f1d318c82acdadce977f53048753d716e9c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fbe7dc8cb6967492f3774ced390347af24ac362c6fe000589004d0e76dec16da(memPtr) {\n\n        mstore(add(memPtr, 0), "Errror: Pool not initialised")\n\n    }\n\n    function abi_encode_t_stringliteral_fbe7dc8cb6967492f3774ced390347af24ac362c6fe000589004d0e76dec16da_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_fbe7dc8cb6967492f3774ced390347af24ac362c6fe000589004d0e76dec16da(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fbe7dc8cb6967492f3774ced390347af24ac362c6fe000589004d0e76dec16da__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fbe7dc8cb6967492f3774ced390347af24ac362c6fe000589004d0e76dec16da_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC20: decreased allowance below")\n\n        mstore(add(memPtr, 32), " zero")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), "Ownable: new owner is the zero a")\n\n        mstore(add(memPtr, 32), "ddress")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC20: approve from the zero add")\n\n        mstore(add(memPtr, 32), "ress")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC20: approve to the zero addre")\n\n        mstore(add(memPtr, 32), "ss")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC20: insufficient allowance")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC20: transfer from the zero ad")\n\n        mstore(add(memPtr, 32), "dress")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC20: transfer to the zero addr")\n\n        mstore(add(memPtr, 32), "ess")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC20: transfer amount exceeds b")\n\n        mstore(add(memPtr, 32), "alance")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC20: mint to the zero address")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), "Ownable: caller is not the owner")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n',
      id: 10,
      language: 'Yul',
      name: '#utility.yul',
    },
  ],
  sourceMap:
    '167:5405:5:-:0;;;247:2;210:39;;307:7;273:41;;949:2089;;;;;;;;;;1980:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2054:5;2046;:13;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;:::i;:::-;;1980:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1015:4:5::1;994:6;:18;1001:10;994:18;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;1108:10;1091:11;:14;1103:1;1091:14;;;;;;;;;;;;;:27;;;;1145:10;1128:11;:14;1140:1;1128:14;;;;;;;;;;;;;:27;;;;1182:10;1165:11;:14;1177:1;1165:14;;;;;;;;;;;;;:27;;;;1219:10;1202:11;:14;1214:1;1202:14;;;;;;;;;;;;;:27;;;;1256:10;1239:11;:14;1251:1;1239:14;;;;;;;;;;;;;:27;;;;1293:10;1276:11;:14;1288:1;1276:14;;;;;;;;;;;;;:27;;;;1330:10;1313:11;:14;1325:1;1313:14;;;;;;;;;;;;;:27;;;;1367:10;1350:11;:14;1362:1;1350:14;;;;;;;;;;;;;:27;;;;1404:10;1387:11;:14;1399:1;1387:14;;;;;;;;;;;;;:27;;;;1442:10;1424:11;:15;1436:2;1424:15;;;;;;;;;;;;;:28;;;;1480:10;1462:11;:15;1474:2;1462:15;;;;;;;;;;;;;:28;;;;1518:10;1500:11;:15;1512:2;1500:15;;;;;;;;;;;;;:28;;;;1556:10;1538:11;:15;1550:2;1538:15;;;;;;;;;;;;;:28;;;;1594:10;1576:11;:15;1588:2;1576:15;;;;;;;;;;;;;:28;;;;1632:10;1614:11;:15;1626:2;1614:15;;;;;;;;;;;;;:28;;;;1710:15;1692:11;:15;1704:2;1692:15;;;;;;;;;;;;;:33;;;;1788:7;1783:107;1805:1;1801;:5;;;1783:107;;;1868:11;1827:5;:22;1833:15:::0;1827:22:::1;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:35;;:38;1863:1;1827:38;;;;;;;;;;;;;;;:52;;;;1808:3;;;;;:::i;:::-;;;;1783:107;;;;1904:7;1914:1;1904:11;;1899:108;1921:1;1917;:5;;;1899:108;;;1984:12;1943:5;:22;1949:15:::0;1943:22:::1;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:35;;:38;1979:1;1943:38;;;;;;;;;;;;;;;:53;;;;1924:3;;;;;:::i;:::-;;;;1899:108;;;;2021:7;2031:2;2021:12;;2016:111;2039:2;2035:1;:6;;;2016:111;;;2103:13;2062:5;:22;2068:15:::0;2062:22:::1;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:35;;:38;2098:1;2062:38;;;;;;;;;;;;;;;:54;;;;2043:3;;;;;:::i;:::-;;;;2016:111;;;;2185:7;2195:1;2185:11;;2180:102;2202:1;2198;:5;;;2180:102;;;2259:12;2220:5;:20;2226:13;2220:20;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:33;;:36;2254:1;2220:36;;;;;;;;;;;;;;;:51;;;;2205:3;;;;;:::i;:::-;;;;2180:102;;;;2319:7;2329:1;2319:11;;2314:100;2336:1;2332;:5;;;2314:100;;;2396:7;2354:5;:23;2360:16;2354:23;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:36;;:39;2391:1;2354:39;;;;;;;;;;;;;;;:49;;;;2339:3;;;;;:::i;:::-;;;;2314:100;;;;2473:7;2483:1;2473:11;;2468:102;2490:1;2486;:5;;;2468:102;;;2548:11;2508:5;:21;2514:14;2508:21;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:34;;:37;2543:1;2508:37;;;;;;;;;;;;;;;:51;;;;2493:3;;;;;:::i;:::-;;;;2468:102;;;;2603:7;2613:1;2603:11;;2598:97;2620:1;2616;:5;;;2598:97;;;2677:7;2638:5;:20;2644:13;2638:20;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:33;;:36;2672:1;2638:36;;;;;;;;;;;;;;;:46;;;;2623:3;;;;;:::i;:::-;;;;2598:97;;;;2726:7;2736:1;2726:11;;2721:100;2743:2;2739:1;:6;;;2721:100;;;2798:12;2762:5;:17;2768:10;2762:17;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:30;;:33;2793:1;2762:33;;;;;;;;;;;;;;;:48;;;;2747:3;;;;;:::i;:::-;;;;2721:100;;;;2882:7;2892:1;2882:11;;2877:98;2899:1;2895;:5;;;2877:98;;;2958:6;2917:5;:22;2923:15;2917:22:::0;::::1;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:35;;:38;2953:1;2917:38;;;;;;;;;;;;;;;:47;;;;2902:3;;;;;:::i;:::-;;;;2877:98;;;;3025:6;2984:5;:22;2990:15;2984:22:::0;::::1;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:35;;:38;3020:1;2984:38;;;;;;;;;;;;;:47;;;;167:5405:::0;;640:96:4;693:7;719:10;712:17;;640:96;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:180::-;5282:77;5279:1;5272:88;5379:4;5376:1;5369:15;5403:4;5400:1;5393:15;5420:180;5468:77;5465:1;5458:88;5565:4;5562:1;5555:15;5589:4;5586:1;5579:15;5606:86;5641:7;5681:4;5674:5;5670:16;5659:27;;5606:86;;;:::o;5698:167::-;5735:3;5758:22;5774:5;5758:22;:::i;:::-;5749:31;;5802:4;5795:5;5792:15;5789:41;;5810:18;;:::i;:::-;5789:41;5857:1;5850:5;5846:13;5839:20;;5698:167;;;:::o;167:5405:5:-;;;;;;;',
  deployedSourceMap:
    '167:5405:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3513:95:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3255:106:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5326:244:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3104:91:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4851:464:5;;;:::i;:::-;;5854:234:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3044:227:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;320:38;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3970:163;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4178:667;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;210:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3847:117;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3309:163;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3419:125:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:0;;;;;;;;;;;;;:::i;:::-;;1201:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3614:227:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;273:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3987:149:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;693:35:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98:1;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3513:95:5:-;867:6;:18;874:10;867:18;;;;;;;;;;;;;;;;;;;;;;;;;859:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3596:5:::1;3579:6;:14;3586:6;3579:14;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;3513:95:::0;:::o;3255:106:1:-;3316:7;3342:12;;3335:19;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;5326:244:5:-;867:6;:18;874:10;867:18;;;;;;;;;;;;;;;;;;;;;;;;;859:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5438:6:::1;5414:21;:30;5406:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;5535:10;5527:28;;:36;5556:6;5527:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;5326:244:::0;:::o;3104:91:1:-;3162:5;3186:2;3179:9;;3104:91;:::o;4851:464:5:-;4950:18;4984:12;4971:9;:26;;;;:::i;:::-;4950:47;;5024:1;5011:10;:14;5007:91;;;5041:46;;;;;;;;;;:::i;:::-;;;;;;;;5007:91;5124:16;;5111:10;:29;5107:104;;;5156:44;;;;;;;;;;:::i;:::-;;;;;;;;5107:104;5220:48;5226:10;5257;:8;:10::i;:::-;5251:2;:16;;;;:::i;:::-;5238:10;:29;;;;:::i;:::-;5220:5;:48::i;:::-;5298:10;5278:16;;:30;;;;;;;:::i;:::-;;;;;;;;4888:427;4851:464::o;5854:234:1:-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;3044:227:5:-;1094:13:0;:11;:13::i;:::-;3179:1:5::1;3164:17;;:3;:17;;::::0;3156:59:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3226:38;3232:3;3253:10;:8;:10::i;:::-;3247:2;:16;;;;:::i;:::-;3237:7;:26;;;;:::i;:::-;3226:5;:38::i;:::-;3044:227:::0;;:::o;320:38::-;;;;;;;;;;;;;;;;;;;;;;:::o;3970:163::-;4067:7;4093:5;:11;4099:4;4093:11;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:24;;:33;4118:7;4093:33;;;;;;;;;;;;;;;;4086:40;;3970:163;;;;:::o;4178:667::-;867:6;:18;874:10;867:18;;;;;;;;;;;;;;;;;;;;;;;;;859:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;4273:1:::1;4262:8;:12;;;:29;;;;;4289:2;4278:8;:13;;;4262:29;4254:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4347:11;:21;4359:8;4347:21;;;;;;;;;;;;;;;;4329:15;:39;4325:96;;;4384:26;;;;;;;;;;:::i;:::-;;;;;;;;4325:96;4484:5;4451:38;;:5;:12;4457:5;4451:12;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:19;;:29;4471:8;4451:29;;;;;;;;;;;;;;;;;;;;;;;;;:38;;;4430:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;4604:1;4568:38;;:5;:12;4574:5;4568:12;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:24;;;;;;;;;;;;:38;;::::0;4547:113:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4671:121;4690:5;:12;4696:5;4690:12;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:24;;;;;;;;;;;;4772:10;:8;:10::i;:::-;4766:2;:16;;;;:::i;:::-;4728:5;:12;4734:5;4728:12;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:25;;:35;4754:8;4728:35;;;;;;;;;;;;;;;;:54;;;;:::i;:::-;4671:5;:121::i;:::-;4834:4;4802:5;:12;4808:5;4802:12;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:19;;:29;4822:8;4802:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;4178:667:::0;;:::o;210:39::-;;;;:::o;3847:117::-;3907:7;3933:5;:12;3939:5;3933:12;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:24;;;;;;;;;;;;3926:31;;3847:117;;;:::o;3309:163::-;867:6;:18;874:10;867:18;;;;;;;;;;;;;;;;;;;;;;;;;859:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3398:1:::1;3380:20;;:6;:20;;::::0;3372:62:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3461:4;3444:6;:14;3451:6;3444:14;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;3309:163:::0;:::o;3419:125:1:-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2369:102:1:-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;6575:427::-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;3614:227:5:-;867:6;:18;874:10;867:18;;;;;;;;;;;;;;;;;;;;;;;;;859:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3753:1:::1;3733:22;;:8;:22;;::::0;3725:64:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3826:8;3799:5;:12;3805:5;3799:12;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:24;;;:35;;;;;;;;;;;;;;;;;;3614:227:::0;;:::o;273:41::-;;;;:::o;3987:149:1:-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;693:35:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;10457:340:1:-;10575:1;10558:19;;:5;:19;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;8520:535::-;8622:1;8603:21;;:7;:21;;;8595:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;;;;;8921:6;8899:9;:18;8909:7;8899:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;8973:7;8952:37;;8969:1;8952:37;;;8982:6;8952:37;;;;;;:::i;:::-;;;;;;;;9000:48;9028:1;9032:7;9041:6;9000:19;:48::i;:::-;8520:535;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;12073:91:1:-;;;;:::o;12752:90::-;;;;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:329::-;3505:6;3554:2;3542:9;3533:7;3529:23;3525:32;3522:119;;;3560:79;;:::i;:::-;3522:119;3680:1;3705:53;3750:7;3741:6;3730:9;3726:22;3705:53;:::i;:::-;3695:63;;3651:117;3446:329;;;;:::o;3781:118::-;3868:24;3886:5;3868:24;:::i;:::-;3863:3;3856:37;3781:118;;:::o;3905:222::-;3998:4;4036:2;4025:9;4021:18;4013:26;;4049:71;4117:1;4106:9;4102:17;4093:6;4049:71;:::i;:::-;3905:222;;;;:::o;4133:619::-;4210:6;4218;4226;4275:2;4263:9;4254:7;4250:23;4246:32;4243:119;;;4281:79;;:::i;:::-;4243:119;4401:1;4426:53;4471:7;4462:6;4451:9;4447:22;4426:53;:::i;:::-;4416:63;;4372:117;4528:2;4554:53;4599:7;4590:6;4579:9;4575:22;4554:53;:::i;:::-;4544:63;;4499:118;4656:2;4682:53;4727:7;4718:6;4707:9;4703:22;4682:53;:::i;:::-;4672:63;;4627:118;4133:619;;;;;:::o;4758:329::-;4817:6;4866:2;4854:9;4845:7;4841:23;4837:32;4834:119;;;4872:79;;:::i;:::-;4834:119;4992:1;5017:53;5062:7;5053:6;5042:9;5038:22;5017:53;:::i;:::-;5007:63;;4963:117;4758:329;;;;:::o;5093:86::-;5128:7;5168:4;5161:5;5157:16;5146:27;;5093:86;;;:::o;5185:112::-;5268:22;5284:5;5268:22;:::i;:::-;5263:3;5256:35;5185:112;;:::o;5303:214::-;5392:4;5430:2;5419:9;5415:18;5407:26;;5443:67;5507:1;5496:9;5492:17;5483:6;5443:67;:::i;:::-;5303:214;;;;:::o;5523:108::-;5605:1;5598:5;5595:12;5585:40;;5621:1;5618;5611:12;5585:40;5523:108;:::o;5637:157::-;5692:5;5730:6;5717:20;5708:29;;5746:42;5782:5;5746:42;:::i;:::-;5637:157;;;;:::o;5800:118::-;5871:22;5887:5;5871:22;:::i;:::-;5864:5;5861:33;5851:61;;5908:1;5905;5898:12;5851:61;5800:118;:::o;5924:135::-;5968:5;6006:6;5993:20;5984:29;;6022:31;6047:5;6022:31;:::i;:::-;5924:135;;;;:::o;6065:488::-;6140:6;6148;6197:2;6185:9;6176:7;6172:23;6168:32;6165:119;;;6203:79;;:::i;:::-;6165:119;6323:1;6348:62;6402:7;6393:6;6382:9;6378:22;6348:62;:::i;:::-;6338:72;;6294:126;6459:2;6485:51;6528:7;6519:6;6508:9;6504:22;6485:51;:::i;:::-;6475:61;;6430:116;6065:488;;;;;:::o;6559:347::-;6627:6;6676:2;6664:9;6655:7;6651:23;6647:32;6644:119;;;6682:79;;:::i;:::-;6644:119;6802:1;6827:62;6881:7;6872:6;6861:9;6857:22;6827:62;:::i;:::-;6817:72;;6773:126;6559:347;;;;:::o;6912:118::-;6999:24;7017:5;6999:24;:::i;:::-;6994:3;6987:37;6912:118;;:::o;7036:222::-;7129:4;7167:2;7156:9;7152:18;7144:26;;7180:71;7248:1;7237:9;7233:17;7224:6;7180:71;:::i;:::-;7036:222;;;;:::o;7264:492::-;7341:6;7349;7398:2;7386:9;7377:7;7373:23;7369:32;7366:119;;;7404:79;;:::i;:::-;7366:119;7524:1;7549:62;7603:7;7594:6;7583:9;7579:22;7549:62;:::i;:::-;7539:72;;7495:126;7660:2;7686:53;7731:7;7722:6;7711:9;7707:22;7686:53;:::i;:::-;7676:63;;7631:118;7264:492;;;;;:::o;7762:474::-;7830:6;7838;7887:2;7875:9;7866:7;7862:23;7858:32;7855:119;;;7893:79;;:::i;:::-;7855:119;8013:1;8038:53;8083:7;8074:6;8063:9;8059:22;8038:53;:::i;:::-;8028:63;;7984:117;8140:2;8166:53;8211:7;8202:6;8191:9;8187:22;8166:53;:::i;:::-;8156:63;;8111:118;7762:474;;;;;:::o;8242:180::-;8290:77;8287:1;8280:88;8387:4;8384:1;8377:15;8411:4;8408:1;8401:15;8428:320;8472:6;8509:1;8503:4;8499:12;8489:22;;8556:1;8550:4;8546:12;8577:18;8567:81;;8633:4;8625:6;8621:17;8611:27;;8567:81;8695:2;8687:6;8684:14;8664:18;8661:38;8658:84;;8714:18;;:::i;:::-;8658:84;8479:269;8428:320;;;:::o;8754:222::-;8894:34;8890:1;8882:6;8878:14;8871:58;8963:5;8958:2;8950:6;8946:15;8939:30;8754:222;:::o;8982:366::-;9124:3;9145:67;9209:2;9204:3;9145:67;:::i;:::-;9138:74;;9221:93;9310:3;9221:93;:::i;:::-;9339:2;9334:3;9330:12;9323:19;;8982:366;;;:::o;9354:419::-;9520:4;9558:2;9547:9;9543:18;9535:26;;9607:9;9601:4;9597:20;9593:1;9582:9;9578:17;9571:47;9635:131;9761:4;9635:131;:::i;:::-;9627:139;;9354:419;;;:::o;9779:179::-;9919:31;9915:1;9907:6;9903:14;9896:55;9779:179;:::o;9964:366::-;10106:3;10127:67;10191:2;10186:3;10127:67;:::i;:::-;10120:74;;10203:93;10292:3;10203:93;:::i;:::-;10321:2;10316:3;10312:12;10305:19;;9964:366;;;:::o;10336:419::-;10502:4;10540:2;10529:9;10525:18;10517:26;;10589:9;10583:4;10579:20;10575:1;10564:9;10560:17;10553:47;10617:131;10743:4;10617:131;:::i;:::-;10609:139;;10336:419;;;:::o;10761:180::-;10809:77;10806:1;10799:88;10906:4;10903:1;10896:15;10930:4;10927:1;10920:15;10947:180;10995:77;10992:1;10985:88;11092:4;11089:1;11082:15;11116:4;11113:1;11106:15;11133:185;11173:1;11190:20;11208:1;11190:20;:::i;:::-;11185:25;;11224:20;11242:1;11224:20;:::i;:::-;11219:25;;11263:1;11253:35;;11268:18;;:::i;:::-;11253:35;11310:1;11307;11303:9;11298:14;;11133:185;;;;:::o;11324:223::-;11464:34;11460:1;11452:6;11448:14;11441:58;11533:6;11528:2;11520:6;11516:15;11509:31;11324:223;:::o;11553:366::-;11695:3;11716:67;11780:2;11775:3;11716:67;:::i;:::-;11709:74;;11792:93;11881:3;11792:93;:::i;:::-;11910:2;11905:3;11901:12;11894:19;;11553:366;;;:::o;11925:419::-;12091:4;12129:2;12118:9;12114:18;12106:26;;12178:9;12172:4;12168:20;12164:1;12153:9;12149:17;12142:47;12206:131;12332:4;12206:131;:::i;:::-;12198:139;;11925:419;;;:::o;12350:221::-;12490:34;12486:1;12478:6;12474:14;12467:58;12559:4;12554:2;12546:6;12542:15;12535:29;12350:221;:::o;12577:366::-;12719:3;12740:67;12804:2;12799:3;12740:67;:::i;:::-;12733:74;;12816:93;12905:3;12816:93;:::i;:::-;12934:2;12929:3;12925:12;12918:19;;12577:366;;;:::o;12949:419::-;13115:4;13153:2;13142:9;13138:18;13130:26;;13202:9;13196:4;13192:20;13188:1;13177:9;13173:17;13166:47;13230:131;13356:4;13230:131;:::i;:::-;13222:139;;12949:419;;;:::o;13374:102::-;13416:8;13463:5;13460:1;13456:13;13435:34;;13374:102;;;:::o;13482:848::-;13543:5;13550:4;13574:6;13565:15;;13598:5;13589:14;;13612:712;13633:1;13623:8;13620:15;13612:712;;;13728:4;13723:3;13719:14;13713:4;13710:24;13707:50;;;13737:18;;:::i;:::-;13707:50;13787:1;13777:8;13773:16;13770:451;;;14202:4;14195:5;14191:16;14182:25;;13770:451;14252:4;14246;14242:15;14234:23;;14282:32;14305:8;14282:32;:::i;:::-;14270:44;;13612:712;;;13482:848;;;;;;;:::o;14336:1073::-;14390:5;14581:8;14571:40;;14602:1;14593:10;;14604:5;;14571:40;14630:4;14620:36;;14647:1;14638:10;;14649:5;;14620:36;14716:4;14764:1;14759:27;;;;14800:1;14795:191;;;;14709:277;;14759:27;14777:1;14768:10;;14779:5;;;14795:191;14840:3;14830:8;14827:17;14824:43;;;14847:18;;:::i;:::-;14824:43;14896:8;14893:1;14889:16;14880:25;;14931:3;14924:5;14921:14;14918:40;;;14938:18;;:::i;:::-;14918:40;14971:5;;;14709:277;;15095:2;15085:8;15082:16;15076:3;15070:4;15067:13;15063:36;15045:2;15035:8;15032:16;15027:2;15021:4;15018:12;15014:35;14998:111;14995:246;;;15151:8;15145:4;15141:19;15132:28;;15186:3;15179:5;15176:14;15173:40;;;15193:18;;:::i;:::-;15173:40;15226:5;;14995:246;15266:42;15304:3;15294:8;15288:4;15285:1;15266:42;:::i;:::-;15251:57;;;;15340:4;15335:3;15331:14;15324:5;15321:25;15318:51;;;15349:18;;:::i;:::-;15318:51;15398:4;15391:5;15387:16;15378:25;;14336:1073;;;;;;:::o;15415:281::-;15473:5;15497:23;15515:4;15497:23;:::i;:::-;15489:31;;15541:25;15557:8;15541:25;:::i;:::-;15529:37;;15585:104;15622:66;15612:8;15606:4;15585:104;:::i;:::-;15576:113;;15415:281;;;;:::o;15702:410::-;15742:7;15765:20;15783:1;15765:20;:::i;:::-;15760:25;;15799:20;15817:1;15799:20;:::i;:::-;15794:25;;15854:1;15851;15847:9;15876:30;15894:11;15876:30;:::i;:::-;15865:41;;16055:1;16046:7;16042:15;16039:1;16036:22;16016:1;16009:9;15989:83;15966:139;;16085:18;;:::i;:::-;15966:139;15750:362;15702:410;;;;:::o;16118:194::-;16158:4;16178:20;16196:1;16178:20;:::i;:::-;16173:25;;16212:20;16230:1;16212:20;:::i;:::-;16207:25;;16256:1;16253;16249:9;16241:17;;16280:1;16274:4;16271:11;16268:37;;;16285:18;;:::i;:::-;16268:37;16118:194;;;;:::o;16318:191::-;16358:3;16377:20;16395:1;16377:20;:::i;:::-;16372:25;;16411:20;16429:1;16411:20;:::i;:::-;16406:25;;16454:1;16451;16447:9;16440:16;;16475:3;16472:1;16469:10;16466:36;;;16482:18;;:::i;:::-;16466:36;16318:191;;;;:::o;16515:179::-;16655:31;16651:1;16643:6;16639:14;16632:55;16515:179;:::o;16700:366::-;16842:3;16863:67;16927:2;16922:3;16863:67;:::i;:::-;16856:74;;16939:93;17028:3;16939:93;:::i;:::-;17057:2;17052:3;17048:12;17041:19;;16700:366;;;:::o;17072:419::-;17238:4;17276:2;17265:9;17261:18;17253:26;;17325:9;17319:4;17315:20;17311:1;17300:9;17296:17;17289:47;17353:131;17479:4;17353:131;:::i;:::-;17345:139;;17072:419;;;:::o;17497:180::-;17545:77;17542:1;17535:88;17642:4;17639:1;17632:15;17666:4;17663:1;17656:15;17683:169;17823:21;17819:1;17811:6;17807:14;17800:45;17683:169;:::o;17858:366::-;18000:3;18021:67;18085:2;18080:3;18021:67;:::i;:::-;18014:74;;18097:93;18186:3;18097:93;:::i;:::-;18215:2;18210:3;18206:12;18199:19;;17858:366;;;:::o;18230:419::-;18396:4;18434:2;18423:9;18419:18;18411:26;;18483:9;18477:4;18473:20;18469:1;18458:9;18454:17;18447:47;18511:131;18637:4;18511:131;:::i;:::-;18503:139;;18230:419;;;:::o;18655:166::-;18795:18;18791:1;18783:6;18779:14;18772:42;18655:166;:::o;18827:366::-;18969:3;18990:67;19054:2;19049:3;18990:67;:::i;:::-;18983:74;;19066:93;19155:3;19066:93;:::i;:::-;19184:2;19179:3;19175:12;19168:19;;18827:366;;;:::o;19199:419::-;19365:4;19403:2;19392:9;19388:18;19380:26;;19452:9;19446:4;19442:20;19438:1;19427:9;19423:17;19416:47;19480:131;19606:4;19480:131;:::i;:::-;19472:139;;19199:419;;;:::o;19624:172::-;19764:24;19760:1;19752:6;19748:14;19741:48;19624:172;:::o;19802:366::-;19944:3;19965:67;20029:2;20024:3;19965:67;:::i;:::-;19958:74;;20041:93;20130:3;20041:93;:::i;:::-;20159:2;20154:3;20150:12;20143:19;;19802:366;;;:::o;20174:419::-;20340:4;20378:2;20367:9;20363:18;20355:26;;20427:9;20421:4;20417:20;20413:1;20402:9;20398:17;20391:47;20455:131;20581:4;20455:131;:::i;:::-;20447:139;;20174:419;;;:::o;20599:178::-;20739:30;20735:1;20727:6;20723:14;20716:54;20599:178;:::o;20783:366::-;20925:3;20946:67;21010:2;21005:3;20946:67;:::i;:::-;20939:74;;21022:93;21111:3;21022:93;:::i;:::-;21140:2;21135:3;21131:12;21124:19;;20783:366;;;:::o;21155:419::-;21321:4;21359:2;21348:9;21344:18;21336:26;;21408:9;21402:4;21398:20;21394:1;21383:9;21379:17;21372:47;21436:131;21562:4;21436:131;:::i;:::-;21428:139;;21155:419;;;:::o;21580:224::-;21720:34;21716:1;21708:6;21704:14;21697:58;21789:7;21784:2;21776:6;21772:15;21765:32;21580:224;:::o;21810:366::-;21952:3;21973:67;22037:2;22032:3;21973:67;:::i;:::-;21966:74;;22049:93;22138:3;22049:93;:::i;:::-;22167:2;22162:3;22158:12;22151:19;;21810:366;;;:::o;22182:419::-;22348:4;22386:2;22375:9;22371:18;22363:26;;22435:9;22429:4;22425:20;22421:1;22410:9;22406:17;22399:47;22463:131;22589:4;22463:131;:::i;:::-;22455:139;;22182:419;;;:::o;22607:225::-;22747:34;22743:1;22735:6;22731:14;22724:58;22816:8;22811:2;22803:6;22799:15;22792:33;22607:225;:::o;22838:366::-;22980:3;23001:67;23065:2;23060:3;23001:67;:::i;:::-;22994:74;;23077:93;23166:3;23077:93;:::i;:::-;23195:2;23190:3;23186:12;23179:19;;22838:366;;;:::o;23210:419::-;23376:4;23414:2;23403:9;23399:18;23391:26;;23463:9;23457:4;23453:20;23449:1;23438:9;23434:17;23427:47;23491:131;23617:4;23491:131;:::i;:::-;23483:139;;23210:419;;;:::o;23635:223::-;23775:34;23771:1;23763:6;23759:14;23752:58;23844:6;23839:2;23831:6;23827:15;23820:31;23635:223;:::o;23864:366::-;24006:3;24027:67;24091:2;24086:3;24027:67;:::i;:::-;24020:74;;24103:93;24192:3;24103:93;:::i;:::-;24221:2;24216:3;24212:12;24205:19;;23864:366;;;:::o;24236:419::-;24402:4;24440:2;24429:9;24425:18;24417:26;;24489:9;24483:4;24479:20;24475:1;24464:9;24460:17;24453:47;24517:131;24643:4;24517:131;:::i;:::-;24509:139;;24236:419;;;:::o;24661:221::-;24801:34;24797:1;24789:6;24785:14;24778:58;24870:4;24865:2;24857:6;24853:15;24846:29;24661:221;:::o;24888:366::-;25030:3;25051:67;25115:2;25110:3;25051:67;:::i;:::-;25044:74;;25127:93;25216:3;25127:93;:::i;:::-;25245:2;25240:3;25236:12;25229:19;;24888:366;;;:::o;25260:419::-;25426:4;25464:2;25453:9;25449:18;25441:26;;25513:9;25507:4;25503:20;25499:1;25488:9;25484:17;25477:47;25541:131;25667:4;25541:131;:::i;:::-;25533:139;;25260:419;;;:::o;25685:179::-;25825:31;25821:1;25813:6;25809:14;25802:55;25685:179;:::o;25870:366::-;26012:3;26033:67;26097:2;26092:3;26033:67;:::i;:::-;26026:74;;26109:93;26198:3;26109:93;:::i;:::-;26227:2;26222:3;26218:12;26211:19;;25870:366;;;:::o;26242:419::-;26408:4;26446:2;26435:9;26431:18;26423:26;;26495:9;26489:4;26485:20;26481:1;26470:9;26466:17;26459:47;26523:131;26649:4;26523:131;:::i;:::-;26515:139;;26242:419;;;:::o;26667:224::-;26807:34;26803:1;26795:6;26791:14;26784:58;26876:7;26871:2;26863:6;26859:15;26852:32;26667:224;:::o;26897:366::-;27039:3;27060:67;27124:2;27119:3;27060:67;:::i;:::-;27053:74;;27136:93;27225:3;27136:93;:::i;:::-;27254:2;27249:3;27245:12;27238:19;;26897:366;;;:::o;27269:419::-;27435:4;27473:2;27462:9;27458:18;27450:26;;27522:9;27516:4;27512:20;27508:1;27497:9;27493:17;27486:47;27550:131;27676:4;27550:131;:::i;:::-;27542:139;;27269:419;;;:::o;27694:222::-;27834:34;27830:1;27822:6;27818:14;27811:58;27903:5;27898:2;27890:6;27886:15;27879:30;27694:222;:::o;27922:366::-;28064:3;28085:67;28149:2;28144:3;28085:67;:::i;:::-;28078:74;;28161:93;28250:3;28161:93;:::i;:::-;28279:2;28274:3;28270:12;28263:19;;27922:366;;;:::o;28294:419::-;28460:4;28498:2;28487:9;28483:18;28475:26;;28547:9;28541:4;28537:20;28533:1;28522:9;28518:17;28511:47;28575:131;28701:4;28575:131;:::i;:::-;28567:139;;28294:419;;;:::o;28719:225::-;28859:34;28855:1;28847:6;28843:14;28836:58;28928:8;28923:2;28915:6;28911:15;28904:33;28719:225;:::o;28950:366::-;29092:3;29113:67;29177:2;29172:3;29113:67;:::i;:::-;29106:74;;29189:93;29278:3;29189:93;:::i;:::-;29307:2;29302:3;29298:12;29291:19;;28950:366;;;:::o;29322:419::-;29488:4;29526:2;29515:9;29511:18;29503:26;;29575:9;29569:4;29565:20;29561:1;29550:9;29546:17;29539:47;29603:131;29729:4;29603:131;:::i;:::-;29595:139;;29322:419;;;:::o;29747:181::-;29887:33;29883:1;29875:6;29871:14;29864:57;29747:181;:::o;29934:366::-;30076:3;30097:67;30161:2;30156:3;30097:67;:::i;:::-;30090:74;;30173:93;30262:3;30173:93;:::i;:::-;30291:2;30286:3;30282:12;30275:19;;29934:366;;;:::o;30306:419::-;30472:4;30510:2;30499:9;30495:18;30487:26;;30559:9;30553:4;30549:20;30545:1;30534:9;30530:17;30523:47;30587:131;30713:4;30587:131;:::i;:::-;30579:139;;30306:419;;;:::o;30731:182::-;30871:34;30867:1;30859:6;30855:14;30848:58;30731:182;:::o;30919:366::-;31061:3;31082:67;31146:2;31141:3;31082:67;:::i;:::-;31075:74;;31158:93;31247:3;31158:93;:::i;:::-;31276:2;31271:3;31267:12;31260:19;;30919:366;;;:::o;31291:419::-;31457:4;31495:2;31484:9;31480:18;31472:26;;31544:9;31538:4;31534:20;31530:1;31519:9;31515:17;31508:47;31572:131;31698:4;31572:131;:::i;:::-;31564:139;;31291:419;;;:::o',
  source:
    '// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport "@openzeppelin/contracts/token/ERC20/ERC20.sol";\nimport "@openzeppelin/contracts/access/Ownable.sol";\n\ncontract BraqToken is ERC20, Ownable {\n    uint256 public allowListSaleSupply = 10; // in braq tokens\n    uint256 public publicSaleSupply = 3750000;\n    mapping(address => bool) public admins;\n\n    struct Pool {\n        mapping(uint8 => bool) funded;\n        mapping(uint8 => uint256) amountToFund; // In BraqTokens, multiply by decimals()\n        address poolAddress;\n    }\n\n    enum Pools {\n        Ecosystem,\n        Rewards,\n        Incentives,\n        Listings,\n        Private,\n        Team,\n        Marketing\n    }\n    mapping(Pools => Pool) public pools;\n    mapping(uint8 => uint256) fundingTime;\n\n    // Modifier to restrict access to admins only\n    modifier onlyAdmin() {\n        require(admins[msg.sender], "Only admins can call this function.");\n        _;\n    }\n\n    constructor() ERC20("Braq", "BRQ") {\n        admins[msg.sender] = true;\n\n        // Setting quarter timestamps\n        // 16 quarters\n        fundingTime[1] = 1688137200;\n        fundingTime[2] = 1696086000;\n        fundingTime[3] = 1704034800;\n        fundingTime[4] = 1711897200;\n        fundingTime[5] = 1719759600;\n        fundingTime[6] = 1727708400;\n        fundingTime[7] = 1735657200;\n        fundingTime[8] = 1743433200;\n        fundingTime[9] = 1751295600;\n        fundingTime[10] = 1759244400;\n        fundingTime[11] = 1767193200;\n        fundingTime[12] = 1774969200;\n        fundingTime[13] = 1782831600;\n        fundingTime[14] = 1790780400;\n        fundingTime[15] = 1798729200;\n        //fundingTime[16] = 1806505200;\n        fundingTime[16] = block.timestamp;\n\n\n        // Setting Pools\n        // Ecosystem\n        for (uint8 i = 0; i < 5; i++) {\n            pools[Pools.Ecosystem].amountToFund[i] = 5 * 10 ** 6;\n        }\n        for (uint8 i = 5; i < 9; i++) {\n            pools[Pools.Ecosystem].amountToFund[i] = 25 * 10 ** 5;\n        }\n        for (uint8 i = 10; i < 17; i++) {\n            pools[Pools.Ecosystem].amountToFund[i] = 125 * 10 ** 4;\n        }\n        // Rewards\n        // TGE 7 500 000\n        for (uint8 i = 2; i < 5; i++) {\n        pools[Pools.Rewards].amountToFund[i] = 75 * 10 ** 5;\n        }\n        // Incentives \n        for (uint8 i = 3; i < 7; i++) {\n        pools[Pools.Incentives].amountToFund[i] = 4687500;\n        }\n        // Listings\n        // TGE 7 500 000\n        for (uint8 i = 1; i < 5; i++) {\n        pools[Pools.Listings].amountToFund[i] = 5 * 10 ** 6;\n        }\n        // Private\n        for (uint8 i = 5; i < 9; i++) {\n        pools[Pools.Private].amountToFund[i] = 4687500;\n        }\n        // Team \n        for (uint8 i = 2; i < 12; i++) {\n        pools[Pools.Team].amountToFund[i] = 75 * 10 ** 4;\n        }\n        // Marketing \n        // TGE 7 500 000\n        for (uint8 i = 2; i < 5; i++) {\n        pools[Pools.Marketing].amountToFund[i] = 937500;\n        }\n        pools[Pools.Marketing].amountToFund[5] = 625000;\n    }\n\n    function mint(\n    address _to,\n    uint256 _amount\n    ) external onlyOwner { // Amount in Braq tokens\n        require(_to != address(0), "Error: Insert a valid address"); \n        _mint(_to, _amount * 10 ** decimals());\n    }\n\n    // Function to add an admin\n    function addAdmin(address _admin) external onlyAdmin {\n        require(_admin != address(0), "Error: Insert a valid address");\n        admins[_admin] = true;\n    }\n\n    // Function to remove an admin\n    function removeAdmin(address _admin) external onlyAdmin {\n        admins[_admin] = false;\n    }\n\n    function setPoolAddress(\n        Pools _pool, \n        address _address\n        ) external onlyAdmin {\n        require(_address != address(0), "Error: Insert a valid address");\n        pools[_pool].poolAddress = _address;\n    }\n\n    function getPoolAddress(Pools _pool) external view returns (address) {\n        return pools[_pool].poolAddress;\n    }\n\n    function getAmountToFund(\n        Pools pool,\n        uint8 quarter\n    ) external view returns (uint256) {\n        return pools[pool].amountToFund[quarter];\n    }\n\n    // Quarters counted from July 2023\n    function fundPool(Pools _pool, uint8 _quarter) external onlyAdmin {\n        require(_quarter > 0 && _quarter < 17, "Wrong quarter value");\n        if (block.timestamp < fundingTime[_quarter]) {\n            revert("Error: Too early");\n        }\n        require(\n            pools[_pool].funded[_quarter] == false,\n            "Errror: Already funded"\n        );\n        require(\n            pools[_pool].poolAddress != address(0),\n            "Errror: Pool not initialised"\n        );\n\n        _mint(\n            pools[_pool].poolAddress,\n            pools[_pool].amountToFund[_quarter] * 10 ** decimals()\n        );\n        pools[_pool].funded[_quarter] = true;\n    }\n\n    function publicSale() public payable {\n        //uint256 EthAmount = msg.value / 10 ** 18;\n        uint256 BraqAmount = msg.value / (5 * 10 ** 13);\n        if (BraqAmount < 1) {\n            revert("Error: Too small amount for purchase");\n        }\n        if (BraqAmount > publicSaleSupply) {\n            revert("Error: Too big amount for purchase");\n        }\n        _mint(msg.sender, BraqAmount * 10 ** decimals());\n        publicSaleSupply -= BraqAmount;\n    }\n\n    \n    function withdraw(uint256 amount) external onlyAdmin { // Amount in wei\n        require(address(this).balance > amount , "Insufficient contract balance");\n        // Transfer ETH to the caller\n        payable(msg.sender).transfer(amount);\n    }\n}\n',
  sourcePath: '/Users/vlad/Development/BRAQ/Token_IDO/contracts/BraqToken.sol',
  ast: {
    absolutePath: 'project:/contracts/BraqToken.sol',
    exportedSymbols: {
      BraqToken: [1519],
      Context: [824],
      ERC20: [699],
      IERC20: [777],
      IERC20Metadata: [802],
      Ownable: [112],
    },
    id: 1520,
    license: 'MIT',
    nodeType: 'SourceUnit',
    nodes: [
      {
        id: 826,
        literals: ['solidity', '^', '0.8', '.9'],
        nodeType: 'PragmaDirective',
        src: '32:23:5',
      },
      {
        absolutePath: '@openzeppelin/contracts/token/ERC20/ERC20.sol',
        file: '@openzeppelin/contracts/token/ERC20/ERC20.sol',
        id: 827,
        nameLocation: '-1:-1:-1',
        nodeType: 'ImportDirective',
        scope: 1520,
        sourceUnit: 700,
        src: '57:55:5',
        symbolAliases: [],
        unitAlias: '',
      },
      {
        absolutePath: '@openzeppelin/contracts/access/Ownable.sol',
        file: '@openzeppelin/contracts/access/Ownable.sol',
        id: 828,
        nameLocation: '-1:-1:-1',
        nodeType: 'ImportDirective',
        scope: 1520,
        sourceUnit: 113,
        src: '113:52:5',
        symbolAliases: [],
        unitAlias: '',
      },
      {
        abstract: false,
        baseContracts: [
          {
            baseName: {
              id: 829,
              name: 'ERC20',
              nameLocations: ['189:5:5'],
              nodeType: 'IdentifierPath',
              referencedDeclaration: 699,
              src: '189:5:5',
            },
            id: 830,
            nodeType: 'InheritanceSpecifier',
            src: '189:5:5',
          },
          {
            baseName: {
              id: 831,
              name: 'Ownable',
              nameLocations: ['196:7:5'],
              nodeType: 'IdentifierPath',
              referencedDeclaration: 112,
              src: '196:7:5',
            },
            id: 832,
            nodeType: 'InheritanceSpecifier',
            src: '196:7:5',
          },
        ],
        canonicalName: 'BraqToken',
        contractDependencies: [],
        contractKind: 'contract',
        fullyImplemented: true,
        id: 1519,
        linearizedBaseContracts: [1519, 112, 699, 802, 777, 824],
        name: 'BraqToken',
        nameLocation: '176:9:5',
        nodeType: 'ContractDefinition',
        nodes: [
          {
            constant: false,
            functionSelector: '51d63627',
            id: 835,
            mutability: 'mutable',
            name: 'allowListSaleSupply',
            nameLocation: '225:19:5',
            nodeType: 'VariableDeclaration',
            scope: 1519,
            src: '210:39:5',
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_uint256',
              typeString: 'uint256',
            },
            typeName: {
              id: 833,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '210:7:5',
              typeDescriptions: {
                typeIdentifier: 't_uint256',
                typeString: 'uint256',
              },
            },
            value: {
              hexValue: '3130',
              id: 834,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: 'number',
              lValueRequested: false,
              nodeType: 'Literal',
              src: '247:2:5',
              typeDescriptions: {
                typeIdentifier: 't_rational_10_by_1',
                typeString: 'int_const 10',
              },
              value: '10',
            },
            visibility: 'public',
          },
          {
            constant: false,
            functionSelector: 'cbfd14a2',
            id: 838,
            mutability: 'mutable',
            name: 'publicSaleSupply',
            nameLocation: '288:16:5',
            nodeType: 'VariableDeclaration',
            scope: 1519,
            src: '273:41:5',
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_uint256',
              typeString: 'uint256',
            },
            typeName: {
              id: 836,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '273:7:5',
              typeDescriptions: {
                typeIdentifier: 't_uint256',
                typeString: 'uint256',
              },
            },
            value: {
              hexValue: '33373530303030',
              id: 837,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: 'number',
              lValueRequested: false,
              nodeType: 'Literal',
              src: '307:7:5',
              typeDescriptions: {
                typeIdentifier: 't_rational_3750000_by_1',
                typeString: 'int_const 3750000',
              },
              value: '3750000',
            },
            visibility: 'public',
          },
          {
            constant: false,
            functionSelector: '429b62e5',
            id: 842,
            mutability: 'mutable',
            name: 'admins',
            nameLocation: '352:6:5',
            nodeType: 'VariableDeclaration',
            scope: 1519,
            src: '320:38:5',
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_mapping$_t_address_$_t_bool_$',
              typeString: 'mapping(address => bool)',
            },
            typeName: {
              id: 841,
              keyName: '',
              keyNameLocation: '-1:-1:-1',
              keyType: {
                id: 839,
                name: 'address',
                nodeType: 'ElementaryTypeName',
                src: '328:7:5',
                typeDescriptions: {
                  typeIdentifier: 't_address',
                  typeString: 'address',
                },
              },
              nodeType: 'Mapping',
              src: '320:24:5',
              typeDescriptions: {
                typeIdentifier: 't_mapping$_t_address_$_t_bool_$',
                typeString: 'mapping(address => bool)',
              },
              valueName: '',
              valueNameLocation: '-1:-1:-1',
              valueType: {
                id: 840,
                name: 'bool',
                nodeType: 'ElementaryTypeName',
                src: '339:4:5',
                typeDescriptions: {
                  typeIdentifier: 't_bool',
                  typeString: 'bool',
                },
              },
            },
            visibility: 'public',
          },
          {
            canonicalName: 'BraqToken.Pool',
            id: 853,
            members: [
              {
                constant: false,
                id: 846,
                mutability: 'mutable',
                name: 'funded',
                nameLocation: '410:6:5',
                nodeType: 'VariableDeclaration',
                scope: 853,
                src: '387:29:5',
                stateVariable: false,
                storageLocation: 'default',
                typeDescriptions: {
                  typeIdentifier: 't_mapping$_t_uint8_$_t_bool_$',
                  typeString: 'mapping(uint8 => bool)',
                },
                typeName: {
                  id: 845,
                  keyName: '',
                  keyNameLocation: '-1:-1:-1',
                  keyType: {
                    id: 843,
                    name: 'uint8',
                    nodeType: 'ElementaryTypeName',
                    src: '395:5:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint8',
                      typeString: 'uint8',
                    },
                  },
                  nodeType: 'Mapping',
                  src: '387:22:5',
                  typeDescriptions: {
                    typeIdentifier: 't_mapping$_t_uint8_$_t_bool_$',
                    typeString: 'mapping(uint8 => bool)',
                  },
                  valueName: '',
                  valueNameLocation: '-1:-1:-1',
                  valueType: {
                    id: 844,
                    name: 'bool',
                    nodeType: 'ElementaryTypeName',
                    src: '404:4:5',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                },
                visibility: 'internal',
              },
              {
                constant: false,
                id: 850,
                mutability: 'mutable',
                name: 'amountToFund',
                nameLocation: '452:12:5',
                nodeType: 'VariableDeclaration',
                scope: 853,
                src: '426:38:5',
                stateVariable: false,
                storageLocation: 'default',
                typeDescriptions: {
                  typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                  typeString: 'mapping(uint8 => uint256)',
                },
                typeName: {
                  id: 849,
                  keyName: '',
                  keyNameLocation: '-1:-1:-1',
                  keyType: {
                    id: 847,
                    name: 'uint8',
                    nodeType: 'ElementaryTypeName',
                    src: '434:5:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint8',
                      typeString: 'uint8',
                    },
                  },
                  nodeType: 'Mapping',
                  src: '426:25:5',
                  typeDescriptions: {
                    typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                    typeString: 'mapping(uint8 => uint256)',
                  },
                  valueName: '',
                  valueNameLocation: '-1:-1:-1',
                  valueType: {
                    id: 848,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '443:7:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                },
                visibility: 'internal',
              },
              {
                constant: false,
                id: 852,
                mutability: 'mutable',
                name: 'poolAddress',
                nameLocation: '523:11:5',
                nodeType: 'VariableDeclaration',
                scope: 853,
                src: '515:19:5',
                stateVariable: false,
                storageLocation: 'default',
                typeDescriptions: {
                  typeIdentifier: 't_address',
                  typeString: 'address',
                },
                typeName: {
                  id: 851,
                  name: 'address',
                  nodeType: 'ElementaryTypeName',
                  src: '515:7:5',
                  stateMutability: 'nonpayable',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                },
                visibility: 'internal',
              },
            ],
            name: 'Pool',
            nameLocation: '372:4:5',
            nodeType: 'StructDefinition',
            scope: 1519,
            src: '365:176:5',
            visibility: 'public',
          },
          {
            canonicalName: 'BraqToken.Pools',
            id: 861,
            members: [
              {
                id: 854,
                name: 'Ecosystem',
                nameLocation: '568:9:5',
                nodeType: 'EnumValue',
                src: '568:9:5',
              },
              {
                id: 855,
                name: 'Rewards',
                nameLocation: '587:7:5',
                nodeType: 'EnumValue',
                src: '587:7:5',
              },
              {
                id: 856,
                name: 'Incentives',
                nameLocation: '604:10:5',
                nodeType: 'EnumValue',
                src: '604:10:5',
              },
              {
                id: 857,
                name: 'Listings',
                nameLocation: '624:8:5',
                nodeType: 'EnumValue',
                src: '624:8:5',
              },
              {
                id: 858,
                name: 'Private',
                nameLocation: '642:7:5',
                nodeType: 'EnumValue',
                src: '642:7:5',
              },
              {
                id: 859,
                name: 'Team',
                nameLocation: '659:4:5',
                nodeType: 'EnumValue',
                src: '659:4:5',
              },
              {
                id: 860,
                name: 'Marketing',
                nameLocation: '673:9:5',
                nodeType: 'EnumValue',
                src: '673:9:5',
              },
            ],
            name: 'Pools',
            nameLocation: '552:5:5',
            nodeType: 'EnumDefinition',
            src: '547:141:5',
          },
          {
            constant: false,
            functionSelector: 'fb87a635',
            id: 867,
            mutability: 'mutable',
            name: 'pools',
            nameLocation: '723:5:5',
            nodeType: 'VariableDeclaration',
            scope: 1519,
            src: '693:35:5',
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_mapping$_t_enum$_Pools_$861_$_t_struct$_Pool_$853_storage_$',
              typeString: 'mapping(enum BraqToken.Pools => struct BraqToken.Pool)',
            },
            typeName: {
              id: 866,
              keyName: '',
              keyNameLocation: '-1:-1:-1',
              keyType: {
                id: 863,
                nodeType: 'UserDefinedTypeName',
                pathNode: {
                  id: 862,
                  name: 'Pools',
                  nameLocations: ['701:5:5'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 861,
                  src: '701:5:5',
                },
                referencedDeclaration: 861,
                src: '701:5:5',
                typeDescriptions: {
                  typeIdentifier: 't_enum$_Pools_$861',
                  typeString: 'enum BraqToken.Pools',
                },
              },
              nodeType: 'Mapping',
              src: '693:22:5',
              typeDescriptions: {
                typeIdentifier: 't_mapping$_t_enum$_Pools_$861_$_t_struct$_Pool_$853_storage_$',
                typeString: 'mapping(enum BraqToken.Pools => struct BraqToken.Pool)',
              },
              valueName: '',
              valueNameLocation: '-1:-1:-1',
              valueType: {
                id: 865,
                nodeType: 'UserDefinedTypeName',
                pathNode: {
                  id: 864,
                  name: 'Pool',
                  nameLocations: ['710:4:5'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 853,
                  src: '710:4:5',
                },
                referencedDeclaration: 853,
                src: '710:4:5',
                typeDescriptions: {
                  typeIdentifier: 't_struct$_Pool_$853_storage_ptr',
                  typeString: 'struct BraqToken.Pool',
                },
              },
            },
            visibility: 'public',
          },
          {
            constant: false,
            id: 871,
            mutability: 'mutable',
            name: 'fundingTime',
            nameLocation: '760:11:5',
            nodeType: 'VariableDeclaration',
            scope: 1519,
            src: '734:37:5',
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
              typeString: 'mapping(uint8 => uint256)',
            },
            typeName: {
              id: 870,
              keyName: '',
              keyNameLocation: '-1:-1:-1',
              keyType: {
                id: 868,
                name: 'uint8',
                nodeType: 'ElementaryTypeName',
                src: '742:5:5',
                typeDescriptions: {
                  typeIdentifier: 't_uint8',
                  typeString: 'uint8',
                },
              },
              nodeType: 'Mapping',
              src: '734:25:5',
              typeDescriptions: {
                typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                typeString: 'mapping(uint8 => uint256)',
              },
              valueName: '',
              valueNameLocation: '-1:-1:-1',
              valueType: {
                id: 869,
                name: 'uint256',
                nodeType: 'ElementaryTypeName',
                src: '751:7:5',
                typeDescriptions: {
                  typeIdentifier: 't_uint256',
                  typeString: 'uint256',
                },
              },
            },
            visibility: 'internal',
          },
          {
            body: {
              id: 882,
              nodeType: 'Block',
              src: '849:94:5',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        baseExpression: {
                          id: 874,
                          name: 'admins',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 842,
                          src: '867:6:5',
                          typeDescriptions: {
                            typeIdentifier: 't_mapping$_t_address_$_t_bool_$',
                            typeString: 'mapping(address => bool)',
                          },
                        },
                        id: 877,
                        indexExpression: {
                          expression: {
                            id: 875,
                            name: 'msg',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: '874:3:5',
                            typeDescriptions: {
                              typeIdentifier: 't_magic_message',
                              typeString: 'msg',
                            },
                          },
                          id: 876,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberLocation: '878:6:5',
                          memberName: 'sender',
                          nodeType: 'MemberAccess',
                          src: '874:10:5',
                          typeDescriptions: {
                            typeIdentifier: 't_address',
                            typeString: 'address',
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: 'IndexAccess',
                        src: '867:18:5',
                        typeDescriptions: {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                      },
                      {
                        hexValue:
                          '4f6e6c792061646d696e732063616e2063616c6c20746869732066756e6374696f6e2e',
                        id: 878,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'string',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '887:37:5',
                        typeDescriptions: {
                          typeIdentifier:
                            't_stringliteral_89f2fc1fb3fe768132d50b5b31f1bd6d568e5bf11f17f118e36b91c92aea4831',
                          typeString: 'literal_string "Only admins can call this function."',
                        },
                        value: 'Only admins can call this function.',
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                        {
                          typeIdentifier:
                            't_stringliteral_89f2fc1fb3fe768132d50b5b31f1bd6d568e5bf11f17f118e36b91c92aea4831',
                          typeString: 'literal_string "Only admins can call this function."',
                        },
                      ],
                      id: 873,
                      name: 'require',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: '859:7:5',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$',
                        typeString: 'function (bool,string memory) pure',
                      },
                    },
                    id: 879,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '859:66:5',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 880,
                  nodeType: 'ExpressionStatement',
                  src: '859:66:5',
                },
                {
                  id: 881,
                  nodeType: 'PlaceholderStatement',
                  src: '935:1:5',
                },
              ],
            },
            id: 883,
            name: 'onlyAdmin',
            nameLocation: '837:9:5',
            nodeType: 'ModifierDefinition',
            parameters: {
              id: 872,
              nodeType: 'ParameterList',
              parameters: [],
              src: '846:2:5',
            },
            src: '828:115:5',
            virtual: false,
            visibility: 'internal',
          },
          {
            body: {
              id: 1226,
              nodeType: 'Block',
              src: '984:2054:5',
              statements: [
                {
                  expression: {
                    id: 895,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 890,
                        name: 'admins',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 842,
                        src: '994:6:5',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_address_$_t_bool_$',
                          typeString: 'mapping(address => bool)',
                        },
                      },
                      id: 893,
                      indexExpression: {
                        expression: {
                          id: 891,
                          name: 'msg',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 4294967281,
                          src: '1001:3:5',
                          typeDescriptions: {
                            typeIdentifier: 't_magic_message',
                            typeString: 'msg',
                          },
                        },
                        id: 892,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '1005:6:5',
                        memberName: 'sender',
                        nodeType: 'MemberAccess',
                        src: '1001:10:5',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '994:18:5',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      hexValue: '74727565',
                      id: 894,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'bool',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '1015:4:5',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                      value: 'true',
                    },
                    src: '994:25:5',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 896,
                  nodeType: 'ExpressionStatement',
                  src: '994:25:5',
                },
                {
                  expression: {
                    id: 901,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 897,
                        name: 'fundingTime',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 871,
                        src: '1091:11:5',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                          typeString: 'mapping(uint8 => uint256)',
                        },
                      },
                      id: 899,
                      indexExpression: {
                        hexValue: '31',
                        id: 898,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '1103:1:5',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_1_by_1',
                          typeString: 'int_const 1',
                        },
                        value: '1',
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '1091:14:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      hexValue: '31363838313337323030',
                      id: 900,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '1108:10:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_1688137200_by_1',
                        typeString: 'int_const 1688137200',
                      },
                      value: '1688137200',
                    },
                    src: '1091:27:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 902,
                  nodeType: 'ExpressionStatement',
                  src: '1091:27:5',
                },
                {
                  expression: {
                    id: 907,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 903,
                        name: 'fundingTime',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 871,
                        src: '1128:11:5',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                          typeString: 'mapping(uint8 => uint256)',
                        },
                      },
                      id: 905,
                      indexExpression: {
                        hexValue: '32',
                        id: 904,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '1140:1:5',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_2_by_1',
                          typeString: 'int_const 2',
                        },
                        value: '2',
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '1128:14:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      hexValue: '31363936303836303030',
                      id: 906,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '1145:10:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_1696086000_by_1',
                        typeString: 'int_const 1696086000',
                      },
                      value: '1696086000',
                    },
                    src: '1128:27:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 908,
                  nodeType: 'ExpressionStatement',
                  src: '1128:27:5',
                },
                {
                  expression: {
                    id: 913,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 909,
                        name: 'fundingTime',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 871,
                        src: '1165:11:5',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                          typeString: 'mapping(uint8 => uint256)',
                        },
                      },
                      id: 911,
                      indexExpression: {
                        hexValue: '33',
                        id: 910,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '1177:1:5',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_3_by_1',
                          typeString: 'int_const 3',
                        },
                        value: '3',
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '1165:14:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      hexValue: '31373034303334383030',
                      id: 912,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '1182:10:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_1704034800_by_1',
                        typeString: 'int_const 1704034800',
                      },
                      value: '1704034800',
                    },
                    src: '1165:27:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 914,
                  nodeType: 'ExpressionStatement',
                  src: '1165:27:5',
                },
                {
                  expression: {
                    id: 919,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 915,
                        name: 'fundingTime',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 871,
                        src: '1202:11:5',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                          typeString: 'mapping(uint8 => uint256)',
                        },
                      },
                      id: 917,
                      indexExpression: {
                        hexValue: '34',
                        id: 916,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '1214:1:5',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_4_by_1',
                          typeString: 'int_const 4',
                        },
                        value: '4',
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '1202:14:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      hexValue: '31373131383937323030',
                      id: 918,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '1219:10:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_1711897200_by_1',
                        typeString: 'int_const 1711897200',
                      },
                      value: '1711897200',
                    },
                    src: '1202:27:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 920,
                  nodeType: 'ExpressionStatement',
                  src: '1202:27:5',
                },
                {
                  expression: {
                    id: 925,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 921,
                        name: 'fundingTime',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 871,
                        src: '1239:11:5',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                          typeString: 'mapping(uint8 => uint256)',
                        },
                      },
                      id: 923,
                      indexExpression: {
                        hexValue: '35',
                        id: 922,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '1251:1:5',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_5_by_1',
                          typeString: 'int_const 5',
                        },
                        value: '5',
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '1239:14:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      hexValue: '31373139373539363030',
                      id: 924,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '1256:10:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_1719759600_by_1',
                        typeString: 'int_const 1719759600',
                      },
                      value: '1719759600',
                    },
                    src: '1239:27:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 926,
                  nodeType: 'ExpressionStatement',
                  src: '1239:27:5',
                },
                {
                  expression: {
                    id: 931,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 927,
                        name: 'fundingTime',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 871,
                        src: '1276:11:5',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                          typeString: 'mapping(uint8 => uint256)',
                        },
                      },
                      id: 929,
                      indexExpression: {
                        hexValue: '36',
                        id: 928,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '1288:1:5',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_6_by_1',
                          typeString: 'int_const 6',
                        },
                        value: '6',
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '1276:14:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      hexValue: '31373237373038343030',
                      id: 930,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '1293:10:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_1727708400_by_1',
                        typeString: 'int_const 1727708400',
                      },
                      value: '1727708400',
                    },
                    src: '1276:27:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 932,
                  nodeType: 'ExpressionStatement',
                  src: '1276:27:5',
                },
                {
                  expression: {
                    id: 937,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 933,
                        name: 'fundingTime',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 871,
                        src: '1313:11:5',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                          typeString: 'mapping(uint8 => uint256)',
                        },
                      },
                      id: 935,
                      indexExpression: {
                        hexValue: '37',
                        id: 934,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '1325:1:5',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_7_by_1',
                          typeString: 'int_const 7',
                        },
                        value: '7',
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '1313:14:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      hexValue: '31373335363537323030',
                      id: 936,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '1330:10:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_1735657200_by_1',
                        typeString: 'int_const 1735657200',
                      },
                      value: '1735657200',
                    },
                    src: '1313:27:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 938,
                  nodeType: 'ExpressionStatement',
                  src: '1313:27:5',
                },
                {
                  expression: {
                    id: 943,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 939,
                        name: 'fundingTime',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 871,
                        src: '1350:11:5',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                          typeString: 'mapping(uint8 => uint256)',
                        },
                      },
                      id: 941,
                      indexExpression: {
                        hexValue: '38',
                        id: 940,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '1362:1:5',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_8_by_1',
                          typeString: 'int_const 8',
                        },
                        value: '8',
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '1350:14:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      hexValue: '31373433343333323030',
                      id: 942,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '1367:10:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_1743433200_by_1',
                        typeString: 'int_const 1743433200',
                      },
                      value: '1743433200',
                    },
                    src: '1350:27:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 944,
                  nodeType: 'ExpressionStatement',
                  src: '1350:27:5',
                },
                {
                  expression: {
                    id: 949,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 945,
                        name: 'fundingTime',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 871,
                        src: '1387:11:5',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                          typeString: 'mapping(uint8 => uint256)',
                        },
                      },
                      id: 947,
                      indexExpression: {
                        hexValue: '39',
                        id: 946,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '1399:1:5',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_9_by_1',
                          typeString: 'int_const 9',
                        },
                        value: '9',
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '1387:14:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      hexValue: '31373531323935363030',
                      id: 948,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '1404:10:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_1751295600_by_1',
                        typeString: 'int_const 1751295600',
                      },
                      value: '1751295600',
                    },
                    src: '1387:27:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 950,
                  nodeType: 'ExpressionStatement',
                  src: '1387:27:5',
                },
                {
                  expression: {
                    id: 955,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 951,
                        name: 'fundingTime',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 871,
                        src: '1424:11:5',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                          typeString: 'mapping(uint8 => uint256)',
                        },
                      },
                      id: 953,
                      indexExpression: {
                        hexValue: '3130',
                        id: 952,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '1436:2:5',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_10_by_1',
                          typeString: 'int_const 10',
                        },
                        value: '10',
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '1424:15:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      hexValue: '31373539323434343030',
                      id: 954,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '1442:10:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_1759244400_by_1',
                        typeString: 'int_const 1759244400',
                      },
                      value: '1759244400',
                    },
                    src: '1424:28:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 956,
                  nodeType: 'ExpressionStatement',
                  src: '1424:28:5',
                },
                {
                  expression: {
                    id: 961,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 957,
                        name: 'fundingTime',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 871,
                        src: '1462:11:5',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                          typeString: 'mapping(uint8 => uint256)',
                        },
                      },
                      id: 959,
                      indexExpression: {
                        hexValue: '3131',
                        id: 958,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '1474:2:5',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_11_by_1',
                          typeString: 'int_const 11',
                        },
                        value: '11',
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '1462:15:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      hexValue: '31373637313933323030',
                      id: 960,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '1480:10:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_1767193200_by_1',
                        typeString: 'int_const 1767193200',
                      },
                      value: '1767193200',
                    },
                    src: '1462:28:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 962,
                  nodeType: 'ExpressionStatement',
                  src: '1462:28:5',
                },
                {
                  expression: {
                    id: 967,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 963,
                        name: 'fundingTime',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 871,
                        src: '1500:11:5',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                          typeString: 'mapping(uint8 => uint256)',
                        },
                      },
                      id: 965,
                      indexExpression: {
                        hexValue: '3132',
                        id: 964,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '1512:2:5',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_12_by_1',
                          typeString: 'int_const 12',
                        },
                        value: '12',
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '1500:15:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      hexValue: '31373734393639323030',
                      id: 966,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '1518:10:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_1774969200_by_1',
                        typeString: 'int_const 1774969200',
                      },
                      value: '1774969200',
                    },
                    src: '1500:28:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 968,
                  nodeType: 'ExpressionStatement',
                  src: '1500:28:5',
                },
                {
                  expression: {
                    id: 973,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 969,
                        name: 'fundingTime',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 871,
                        src: '1538:11:5',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                          typeString: 'mapping(uint8 => uint256)',
                        },
                      },
                      id: 971,
                      indexExpression: {
                        hexValue: '3133',
                        id: 970,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '1550:2:5',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_13_by_1',
                          typeString: 'int_const 13',
                        },
                        value: '13',
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '1538:15:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      hexValue: '31373832383331363030',
                      id: 972,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '1556:10:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_1782831600_by_1',
                        typeString: 'int_const 1782831600',
                      },
                      value: '1782831600',
                    },
                    src: '1538:28:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 974,
                  nodeType: 'ExpressionStatement',
                  src: '1538:28:5',
                },
                {
                  expression: {
                    id: 979,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 975,
                        name: 'fundingTime',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 871,
                        src: '1576:11:5',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                          typeString: 'mapping(uint8 => uint256)',
                        },
                      },
                      id: 977,
                      indexExpression: {
                        hexValue: '3134',
                        id: 976,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '1588:2:5',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_14_by_1',
                          typeString: 'int_const 14',
                        },
                        value: '14',
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '1576:15:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      hexValue: '31373930373830343030',
                      id: 978,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '1594:10:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_1790780400_by_1',
                        typeString: 'int_const 1790780400',
                      },
                      value: '1790780400',
                    },
                    src: '1576:28:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 980,
                  nodeType: 'ExpressionStatement',
                  src: '1576:28:5',
                },
                {
                  expression: {
                    id: 985,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 981,
                        name: 'fundingTime',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 871,
                        src: '1614:11:5',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                          typeString: 'mapping(uint8 => uint256)',
                        },
                      },
                      id: 983,
                      indexExpression: {
                        hexValue: '3135',
                        id: 982,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '1626:2:5',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_15_by_1',
                          typeString: 'int_const 15',
                        },
                        value: '15',
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '1614:15:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      hexValue: '31373938373239323030',
                      id: 984,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '1632:10:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_1798729200_by_1',
                        typeString: 'int_const 1798729200',
                      },
                      value: '1798729200',
                    },
                    src: '1614:28:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 986,
                  nodeType: 'ExpressionStatement',
                  src: '1614:28:5',
                },
                {
                  expression: {
                    id: 992,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 987,
                        name: 'fundingTime',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 871,
                        src: '1692:11:5',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                          typeString: 'mapping(uint8 => uint256)',
                        },
                      },
                      id: 989,
                      indexExpression: {
                        hexValue: '3136',
                        id: 988,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '1704:2:5',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_16_by_1',
                          typeString: 'int_const 16',
                        },
                        value: '16',
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '1692:15:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      expression: {
                        id: 990,
                        name: 'block',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 4294967292,
                        src: '1710:5:5',
                        typeDescriptions: {
                          typeIdentifier: 't_magic_block',
                          typeString: 'block',
                        },
                      },
                      id: 991,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '1716:9:5',
                      memberName: 'timestamp',
                      nodeType: 'MemberAccess',
                      src: '1710:15:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '1692:33:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 993,
                  nodeType: 'ExpressionStatement',
                  src: '1692:33:5',
                },
                {
                  body: {
                    id: 1018,
                    nodeType: 'Block',
                    src: '1813:77:5',
                    statements: [
                      {
                        expression: {
                          id: 1016,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            baseExpression: {
                              expression: {
                                baseExpression: {
                                  id: 1004,
                                  name: 'pools',
                                  nodeType: 'Identifier',
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 867,
                                  src: '1827:5:5',
                                  typeDescriptions: {
                                    typeIdentifier:
                                      't_mapping$_t_enum$_Pools_$861_$_t_struct$_Pool_$853_storage_$',
                                    typeString:
                                      'mapping(enum BraqToken.Pools => struct BraqToken.Pool storage ref)',
                                  },
                                },
                                id: 1007,
                                indexExpression: {
                                  expression: {
                                    id: 1005,
                                    name: 'Pools',
                                    nodeType: 'Identifier',
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 861,
                                    src: '1833:5:5',
                                    typeDescriptions: {
                                      typeIdentifier: 't_type$_t_enum$_Pools_$861_$',
                                      typeString: 'type(enum BraqToken.Pools)',
                                    },
                                  },
                                  id: 1006,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  lValueRequested: false,
                                  memberLocation: '1839:9:5',
                                  memberName: 'Ecosystem',
                                  nodeType: 'MemberAccess',
                                  referencedDeclaration: 854,
                                  src: '1833:15:5',
                                  typeDescriptions: {
                                    typeIdentifier: 't_enum$_Pools_$861',
                                    typeString: 'enum BraqToken.Pools',
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: 'IndexAccess',
                                src: '1827:22:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_struct$_Pool_$853_storage',
                                  typeString: 'struct BraqToken.Pool storage ref',
                                },
                              },
                              id: 1008,
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: '1850:12:5',
                              memberName: 'amountToFund',
                              nodeType: 'MemberAccess',
                              referencedDeclaration: 850,
                              src: '1827:35:5',
                              typeDescriptions: {
                                typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                                typeString: 'mapping(uint8 => uint256)',
                              },
                            },
                            id: 1010,
                            indexExpression: {
                              id: 1009,
                              name: 'i',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 995,
                              src: '1863:1:5',
                              typeDescriptions: {
                                typeIdentifier: 't_uint8',
                                typeString: 'uint8',
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: true,
                            nodeType: 'IndexAccess',
                            src: '1827:38:5',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          nodeType: 'Assignment',
                          operator: '=',
                          rightHandSide: {
                            commonType: {
                              typeIdentifier: 't_rational_5000000_by_1',
                              typeString: 'int_const 5000000',
                            },
                            id: 1015,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            leftExpression: {
                              hexValue: '35',
                              id: 1011,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: 'number',
                              lValueRequested: false,
                              nodeType: 'Literal',
                              src: '1868:1:5',
                              typeDescriptions: {
                                typeIdentifier: 't_rational_5_by_1',
                                typeString: 'int_const 5',
                              },
                              value: '5',
                            },
                            nodeType: 'BinaryOperation',
                            operator: '*',
                            rightExpression: {
                              commonType: {
                                typeIdentifier: 't_rational_1000000_by_1',
                                typeString: 'int_const 1000000',
                              },
                              id: 1014,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              leftExpression: {
                                hexValue: '3130',
                                id: 1012,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: 'number',
                                lValueRequested: false,
                                nodeType: 'Literal',
                                src: '1872:2:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_rational_10_by_1',
                                  typeString: 'int_const 10',
                                },
                                value: '10',
                              },
                              nodeType: 'BinaryOperation',
                              operator: '**',
                              rightExpression: {
                                hexValue: '36',
                                id: 1013,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: 'number',
                                lValueRequested: false,
                                nodeType: 'Literal',
                                src: '1878:1:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_rational_6_by_1',
                                  typeString: 'int_const 6',
                                },
                                value: '6',
                              },
                              src: '1872:7:5',
                              typeDescriptions: {
                                typeIdentifier: 't_rational_1000000_by_1',
                                typeString: 'int_const 1000000',
                              },
                            },
                            src: '1868:11:5',
                            typeDescriptions: {
                              typeIdentifier: 't_rational_5000000_by_1',
                              typeString: 'int_const 5000000',
                            },
                          },
                          src: '1827:52:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        id: 1017,
                        nodeType: 'ExpressionStatement',
                        src: '1827:52:5',
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint8',
                      typeString: 'uint8',
                    },
                    id: 1000,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 998,
                      name: 'i',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 995,
                      src: '1801:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint8',
                        typeString: 'uint8',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      hexValue: '35',
                      id: 999,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '1805:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_5_by_1',
                        typeString: 'int_const 5',
                      },
                      value: '5',
                    },
                    src: '1801:5:5',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 1019,
                  initializationExpression: {
                    assignments: [995],
                    declarations: [
                      {
                        constant: false,
                        id: 995,
                        mutability: 'mutable',
                        name: 'i',
                        nameLocation: '1794:1:5',
                        nodeType: 'VariableDeclaration',
                        scope: 1019,
                        src: '1788:7:5',
                        stateVariable: false,
                        storageLocation: 'default',
                        typeDescriptions: {
                          typeIdentifier: 't_uint8',
                          typeString: 'uint8',
                        },
                        typeName: {
                          id: 994,
                          name: 'uint8',
                          nodeType: 'ElementaryTypeName',
                          src: '1788:5:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint8',
                            typeString: 'uint8',
                          },
                        },
                        visibility: 'internal',
                      },
                    ],
                    id: 997,
                    initialValue: {
                      hexValue: '30',
                      id: 996,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '1798:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_0_by_1',
                        typeString: 'int_const 0',
                      },
                      value: '0',
                    },
                    nodeType: 'VariableDeclarationStatement',
                    src: '1788:11:5',
                  },
                  loopExpression: {
                    expression: {
                      id: 1002,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: 'UnaryOperation',
                      operator: '++',
                      prefix: false,
                      src: '1808:3:5',
                      subExpression: {
                        id: 1001,
                        name: 'i',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 995,
                        src: '1808:1:5',
                        typeDescriptions: {
                          typeIdentifier: 't_uint8',
                          typeString: 'uint8',
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: 't_uint8',
                        typeString: 'uint8',
                      },
                    },
                    id: 1003,
                    nodeType: 'ExpressionStatement',
                    src: '1808:3:5',
                  },
                  nodeType: 'ForStatement',
                  src: '1783:107:5',
                },
                {
                  body: {
                    id: 1044,
                    nodeType: 'Block',
                    src: '1929:78:5',
                    statements: [
                      {
                        expression: {
                          id: 1042,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            baseExpression: {
                              expression: {
                                baseExpression: {
                                  id: 1030,
                                  name: 'pools',
                                  nodeType: 'Identifier',
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 867,
                                  src: '1943:5:5',
                                  typeDescriptions: {
                                    typeIdentifier:
                                      't_mapping$_t_enum$_Pools_$861_$_t_struct$_Pool_$853_storage_$',
                                    typeString:
                                      'mapping(enum BraqToken.Pools => struct BraqToken.Pool storage ref)',
                                  },
                                },
                                id: 1033,
                                indexExpression: {
                                  expression: {
                                    id: 1031,
                                    name: 'Pools',
                                    nodeType: 'Identifier',
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 861,
                                    src: '1949:5:5',
                                    typeDescriptions: {
                                      typeIdentifier: 't_type$_t_enum$_Pools_$861_$',
                                      typeString: 'type(enum BraqToken.Pools)',
                                    },
                                  },
                                  id: 1032,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  lValueRequested: false,
                                  memberLocation: '1955:9:5',
                                  memberName: 'Ecosystem',
                                  nodeType: 'MemberAccess',
                                  referencedDeclaration: 854,
                                  src: '1949:15:5',
                                  typeDescriptions: {
                                    typeIdentifier: 't_enum$_Pools_$861',
                                    typeString: 'enum BraqToken.Pools',
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: 'IndexAccess',
                                src: '1943:22:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_struct$_Pool_$853_storage',
                                  typeString: 'struct BraqToken.Pool storage ref',
                                },
                              },
                              id: 1034,
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: '1966:12:5',
                              memberName: 'amountToFund',
                              nodeType: 'MemberAccess',
                              referencedDeclaration: 850,
                              src: '1943:35:5',
                              typeDescriptions: {
                                typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                                typeString: 'mapping(uint8 => uint256)',
                              },
                            },
                            id: 1036,
                            indexExpression: {
                              id: 1035,
                              name: 'i',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 1021,
                              src: '1979:1:5',
                              typeDescriptions: {
                                typeIdentifier: 't_uint8',
                                typeString: 'uint8',
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: true,
                            nodeType: 'IndexAccess',
                            src: '1943:38:5',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          nodeType: 'Assignment',
                          operator: '=',
                          rightHandSide: {
                            commonType: {
                              typeIdentifier: 't_rational_2500000_by_1',
                              typeString: 'int_const 2500000',
                            },
                            id: 1041,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            leftExpression: {
                              hexValue: '3235',
                              id: 1037,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: 'number',
                              lValueRequested: false,
                              nodeType: 'Literal',
                              src: '1984:2:5',
                              typeDescriptions: {
                                typeIdentifier: 't_rational_25_by_1',
                                typeString: 'int_const 25',
                              },
                              value: '25',
                            },
                            nodeType: 'BinaryOperation',
                            operator: '*',
                            rightExpression: {
                              commonType: {
                                typeIdentifier: 't_rational_100000_by_1',
                                typeString: 'int_const 100000',
                              },
                              id: 1040,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              leftExpression: {
                                hexValue: '3130',
                                id: 1038,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: 'number',
                                lValueRequested: false,
                                nodeType: 'Literal',
                                src: '1989:2:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_rational_10_by_1',
                                  typeString: 'int_const 10',
                                },
                                value: '10',
                              },
                              nodeType: 'BinaryOperation',
                              operator: '**',
                              rightExpression: {
                                hexValue: '35',
                                id: 1039,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: 'number',
                                lValueRequested: false,
                                nodeType: 'Literal',
                                src: '1995:1:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_rational_5_by_1',
                                  typeString: 'int_const 5',
                                },
                                value: '5',
                              },
                              src: '1989:7:5',
                              typeDescriptions: {
                                typeIdentifier: 't_rational_100000_by_1',
                                typeString: 'int_const 100000',
                              },
                            },
                            src: '1984:12:5',
                            typeDescriptions: {
                              typeIdentifier: 't_rational_2500000_by_1',
                              typeString: 'int_const 2500000',
                            },
                          },
                          src: '1943:53:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        id: 1043,
                        nodeType: 'ExpressionStatement',
                        src: '1943:53:5',
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint8',
                      typeString: 'uint8',
                    },
                    id: 1026,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 1024,
                      name: 'i',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 1021,
                      src: '1917:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint8',
                        typeString: 'uint8',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      hexValue: '39',
                      id: 1025,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '1921:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_9_by_1',
                        typeString: 'int_const 9',
                      },
                      value: '9',
                    },
                    src: '1917:5:5',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 1045,
                  initializationExpression: {
                    assignments: [1021],
                    declarations: [
                      {
                        constant: false,
                        id: 1021,
                        mutability: 'mutable',
                        name: 'i',
                        nameLocation: '1910:1:5',
                        nodeType: 'VariableDeclaration',
                        scope: 1045,
                        src: '1904:7:5',
                        stateVariable: false,
                        storageLocation: 'default',
                        typeDescriptions: {
                          typeIdentifier: 't_uint8',
                          typeString: 'uint8',
                        },
                        typeName: {
                          id: 1020,
                          name: 'uint8',
                          nodeType: 'ElementaryTypeName',
                          src: '1904:5:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint8',
                            typeString: 'uint8',
                          },
                        },
                        visibility: 'internal',
                      },
                    ],
                    id: 1023,
                    initialValue: {
                      hexValue: '35',
                      id: 1022,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '1914:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_5_by_1',
                        typeString: 'int_const 5',
                      },
                      value: '5',
                    },
                    nodeType: 'VariableDeclarationStatement',
                    src: '1904:11:5',
                  },
                  loopExpression: {
                    expression: {
                      id: 1028,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: 'UnaryOperation',
                      operator: '++',
                      prefix: false,
                      src: '1924:3:5',
                      subExpression: {
                        id: 1027,
                        name: 'i',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 1021,
                        src: '1924:1:5',
                        typeDescriptions: {
                          typeIdentifier: 't_uint8',
                          typeString: 'uint8',
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: 't_uint8',
                        typeString: 'uint8',
                      },
                    },
                    id: 1029,
                    nodeType: 'ExpressionStatement',
                    src: '1924:3:5',
                  },
                  nodeType: 'ForStatement',
                  src: '1899:108:5',
                },
                {
                  body: {
                    id: 1070,
                    nodeType: 'Block',
                    src: '2048:79:5',
                    statements: [
                      {
                        expression: {
                          id: 1068,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            baseExpression: {
                              expression: {
                                baseExpression: {
                                  id: 1056,
                                  name: 'pools',
                                  nodeType: 'Identifier',
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 867,
                                  src: '2062:5:5',
                                  typeDescriptions: {
                                    typeIdentifier:
                                      't_mapping$_t_enum$_Pools_$861_$_t_struct$_Pool_$853_storage_$',
                                    typeString:
                                      'mapping(enum BraqToken.Pools => struct BraqToken.Pool storage ref)',
                                  },
                                },
                                id: 1059,
                                indexExpression: {
                                  expression: {
                                    id: 1057,
                                    name: 'Pools',
                                    nodeType: 'Identifier',
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 861,
                                    src: '2068:5:5',
                                    typeDescriptions: {
                                      typeIdentifier: 't_type$_t_enum$_Pools_$861_$',
                                      typeString: 'type(enum BraqToken.Pools)',
                                    },
                                  },
                                  id: 1058,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  lValueRequested: false,
                                  memberLocation: '2074:9:5',
                                  memberName: 'Ecosystem',
                                  nodeType: 'MemberAccess',
                                  referencedDeclaration: 854,
                                  src: '2068:15:5',
                                  typeDescriptions: {
                                    typeIdentifier: 't_enum$_Pools_$861',
                                    typeString: 'enum BraqToken.Pools',
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: 'IndexAccess',
                                src: '2062:22:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_struct$_Pool_$853_storage',
                                  typeString: 'struct BraqToken.Pool storage ref',
                                },
                              },
                              id: 1060,
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: '2085:12:5',
                              memberName: 'amountToFund',
                              nodeType: 'MemberAccess',
                              referencedDeclaration: 850,
                              src: '2062:35:5',
                              typeDescriptions: {
                                typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                                typeString: 'mapping(uint8 => uint256)',
                              },
                            },
                            id: 1062,
                            indexExpression: {
                              id: 1061,
                              name: 'i',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 1047,
                              src: '2098:1:5',
                              typeDescriptions: {
                                typeIdentifier: 't_uint8',
                                typeString: 'uint8',
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: true,
                            nodeType: 'IndexAccess',
                            src: '2062:38:5',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          nodeType: 'Assignment',
                          operator: '=',
                          rightHandSide: {
                            commonType: {
                              typeIdentifier: 't_rational_1250000_by_1',
                              typeString: 'int_const 1250000',
                            },
                            id: 1067,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            leftExpression: {
                              hexValue: '313235',
                              id: 1063,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: 'number',
                              lValueRequested: false,
                              nodeType: 'Literal',
                              src: '2103:3:5',
                              typeDescriptions: {
                                typeIdentifier: 't_rational_125_by_1',
                                typeString: 'int_const 125',
                              },
                              value: '125',
                            },
                            nodeType: 'BinaryOperation',
                            operator: '*',
                            rightExpression: {
                              commonType: {
                                typeIdentifier: 't_rational_10000_by_1',
                                typeString: 'int_const 10000',
                              },
                              id: 1066,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              leftExpression: {
                                hexValue: '3130',
                                id: 1064,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: 'number',
                                lValueRequested: false,
                                nodeType: 'Literal',
                                src: '2109:2:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_rational_10_by_1',
                                  typeString: 'int_const 10',
                                },
                                value: '10',
                              },
                              nodeType: 'BinaryOperation',
                              operator: '**',
                              rightExpression: {
                                hexValue: '34',
                                id: 1065,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: 'number',
                                lValueRequested: false,
                                nodeType: 'Literal',
                                src: '2115:1:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_rational_4_by_1',
                                  typeString: 'int_const 4',
                                },
                                value: '4',
                              },
                              src: '2109:7:5',
                              typeDescriptions: {
                                typeIdentifier: 't_rational_10000_by_1',
                                typeString: 'int_const 10000',
                              },
                            },
                            src: '2103:13:5',
                            typeDescriptions: {
                              typeIdentifier: 't_rational_1250000_by_1',
                              typeString: 'int_const 1250000',
                            },
                          },
                          src: '2062:54:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        id: 1069,
                        nodeType: 'ExpressionStatement',
                        src: '2062:54:5',
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint8',
                      typeString: 'uint8',
                    },
                    id: 1052,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 1050,
                      name: 'i',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 1047,
                      src: '2035:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint8',
                        typeString: 'uint8',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      hexValue: '3137',
                      id: 1051,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '2039:2:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_17_by_1',
                        typeString: 'int_const 17',
                      },
                      value: '17',
                    },
                    src: '2035:6:5',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 1071,
                  initializationExpression: {
                    assignments: [1047],
                    declarations: [
                      {
                        constant: false,
                        id: 1047,
                        mutability: 'mutable',
                        name: 'i',
                        nameLocation: '2027:1:5',
                        nodeType: 'VariableDeclaration',
                        scope: 1071,
                        src: '2021:7:5',
                        stateVariable: false,
                        storageLocation: 'default',
                        typeDescriptions: {
                          typeIdentifier: 't_uint8',
                          typeString: 'uint8',
                        },
                        typeName: {
                          id: 1046,
                          name: 'uint8',
                          nodeType: 'ElementaryTypeName',
                          src: '2021:5:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint8',
                            typeString: 'uint8',
                          },
                        },
                        visibility: 'internal',
                      },
                    ],
                    id: 1049,
                    initialValue: {
                      hexValue: '3130',
                      id: 1048,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '2031:2:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_10_by_1',
                        typeString: 'int_const 10',
                      },
                      value: '10',
                    },
                    nodeType: 'VariableDeclarationStatement',
                    src: '2021:12:5',
                  },
                  loopExpression: {
                    expression: {
                      id: 1054,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: 'UnaryOperation',
                      operator: '++',
                      prefix: false,
                      src: '2043:3:5',
                      subExpression: {
                        id: 1053,
                        name: 'i',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 1047,
                        src: '2043:1:5',
                        typeDescriptions: {
                          typeIdentifier: 't_uint8',
                          typeString: 'uint8',
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: 't_uint8',
                        typeString: 'uint8',
                      },
                    },
                    id: 1055,
                    nodeType: 'ExpressionStatement',
                    src: '2043:3:5',
                  },
                  nodeType: 'ForStatement',
                  src: '2016:111:5',
                },
                {
                  body: {
                    id: 1096,
                    nodeType: 'Block',
                    src: '2210:72:5',
                    statements: [
                      {
                        expression: {
                          id: 1094,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            baseExpression: {
                              expression: {
                                baseExpression: {
                                  id: 1082,
                                  name: 'pools',
                                  nodeType: 'Identifier',
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 867,
                                  src: '2220:5:5',
                                  typeDescriptions: {
                                    typeIdentifier:
                                      't_mapping$_t_enum$_Pools_$861_$_t_struct$_Pool_$853_storage_$',
                                    typeString:
                                      'mapping(enum BraqToken.Pools => struct BraqToken.Pool storage ref)',
                                  },
                                },
                                id: 1085,
                                indexExpression: {
                                  expression: {
                                    id: 1083,
                                    name: 'Pools',
                                    nodeType: 'Identifier',
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 861,
                                    src: '2226:5:5',
                                    typeDescriptions: {
                                      typeIdentifier: 't_type$_t_enum$_Pools_$861_$',
                                      typeString: 'type(enum BraqToken.Pools)',
                                    },
                                  },
                                  id: 1084,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  lValueRequested: false,
                                  memberLocation: '2232:7:5',
                                  memberName: 'Rewards',
                                  nodeType: 'MemberAccess',
                                  referencedDeclaration: 855,
                                  src: '2226:13:5',
                                  typeDescriptions: {
                                    typeIdentifier: 't_enum$_Pools_$861',
                                    typeString: 'enum BraqToken.Pools',
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: 'IndexAccess',
                                src: '2220:20:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_struct$_Pool_$853_storage',
                                  typeString: 'struct BraqToken.Pool storage ref',
                                },
                              },
                              id: 1086,
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: '2241:12:5',
                              memberName: 'amountToFund',
                              nodeType: 'MemberAccess',
                              referencedDeclaration: 850,
                              src: '2220:33:5',
                              typeDescriptions: {
                                typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                                typeString: 'mapping(uint8 => uint256)',
                              },
                            },
                            id: 1088,
                            indexExpression: {
                              id: 1087,
                              name: 'i',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 1073,
                              src: '2254:1:5',
                              typeDescriptions: {
                                typeIdentifier: 't_uint8',
                                typeString: 'uint8',
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: true,
                            nodeType: 'IndexAccess',
                            src: '2220:36:5',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          nodeType: 'Assignment',
                          operator: '=',
                          rightHandSide: {
                            commonType: {
                              typeIdentifier: 't_rational_7500000_by_1',
                              typeString: 'int_const 7500000',
                            },
                            id: 1093,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            leftExpression: {
                              hexValue: '3735',
                              id: 1089,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: 'number',
                              lValueRequested: false,
                              nodeType: 'Literal',
                              src: '2259:2:5',
                              typeDescriptions: {
                                typeIdentifier: 't_rational_75_by_1',
                                typeString: 'int_const 75',
                              },
                              value: '75',
                            },
                            nodeType: 'BinaryOperation',
                            operator: '*',
                            rightExpression: {
                              commonType: {
                                typeIdentifier: 't_rational_100000_by_1',
                                typeString: 'int_const 100000',
                              },
                              id: 1092,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              leftExpression: {
                                hexValue: '3130',
                                id: 1090,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: 'number',
                                lValueRequested: false,
                                nodeType: 'Literal',
                                src: '2264:2:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_rational_10_by_1',
                                  typeString: 'int_const 10',
                                },
                                value: '10',
                              },
                              nodeType: 'BinaryOperation',
                              operator: '**',
                              rightExpression: {
                                hexValue: '35',
                                id: 1091,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: 'number',
                                lValueRequested: false,
                                nodeType: 'Literal',
                                src: '2270:1:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_rational_5_by_1',
                                  typeString: 'int_const 5',
                                },
                                value: '5',
                              },
                              src: '2264:7:5',
                              typeDescriptions: {
                                typeIdentifier: 't_rational_100000_by_1',
                                typeString: 'int_const 100000',
                              },
                            },
                            src: '2259:12:5',
                            typeDescriptions: {
                              typeIdentifier: 't_rational_7500000_by_1',
                              typeString: 'int_const 7500000',
                            },
                          },
                          src: '2220:51:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        id: 1095,
                        nodeType: 'ExpressionStatement',
                        src: '2220:51:5',
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint8',
                      typeString: 'uint8',
                    },
                    id: 1078,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 1076,
                      name: 'i',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 1073,
                      src: '2198:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint8',
                        typeString: 'uint8',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      hexValue: '35',
                      id: 1077,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '2202:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_5_by_1',
                        typeString: 'int_const 5',
                      },
                      value: '5',
                    },
                    src: '2198:5:5',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 1097,
                  initializationExpression: {
                    assignments: [1073],
                    declarations: [
                      {
                        constant: false,
                        id: 1073,
                        mutability: 'mutable',
                        name: 'i',
                        nameLocation: '2191:1:5',
                        nodeType: 'VariableDeclaration',
                        scope: 1097,
                        src: '2185:7:5',
                        stateVariable: false,
                        storageLocation: 'default',
                        typeDescriptions: {
                          typeIdentifier: 't_uint8',
                          typeString: 'uint8',
                        },
                        typeName: {
                          id: 1072,
                          name: 'uint8',
                          nodeType: 'ElementaryTypeName',
                          src: '2185:5:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint8',
                            typeString: 'uint8',
                          },
                        },
                        visibility: 'internal',
                      },
                    ],
                    id: 1075,
                    initialValue: {
                      hexValue: '32',
                      id: 1074,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '2195:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_2_by_1',
                        typeString: 'int_const 2',
                      },
                      value: '2',
                    },
                    nodeType: 'VariableDeclarationStatement',
                    src: '2185:11:5',
                  },
                  loopExpression: {
                    expression: {
                      id: 1080,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: 'UnaryOperation',
                      operator: '++',
                      prefix: false,
                      src: '2205:3:5',
                      subExpression: {
                        id: 1079,
                        name: 'i',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 1073,
                        src: '2205:1:5',
                        typeDescriptions: {
                          typeIdentifier: 't_uint8',
                          typeString: 'uint8',
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: 't_uint8',
                        typeString: 'uint8',
                      },
                    },
                    id: 1081,
                    nodeType: 'ExpressionStatement',
                    src: '2205:3:5',
                  },
                  nodeType: 'ForStatement',
                  src: '2180:102:5',
                },
                {
                  body: {
                    id: 1118,
                    nodeType: 'Block',
                    src: '2344:70:5',
                    statements: [
                      {
                        expression: {
                          id: 1116,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            baseExpression: {
                              expression: {
                                baseExpression: {
                                  id: 1108,
                                  name: 'pools',
                                  nodeType: 'Identifier',
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 867,
                                  src: '2354:5:5',
                                  typeDescriptions: {
                                    typeIdentifier:
                                      't_mapping$_t_enum$_Pools_$861_$_t_struct$_Pool_$853_storage_$',
                                    typeString:
                                      'mapping(enum BraqToken.Pools => struct BraqToken.Pool storage ref)',
                                  },
                                },
                                id: 1111,
                                indexExpression: {
                                  expression: {
                                    id: 1109,
                                    name: 'Pools',
                                    nodeType: 'Identifier',
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 861,
                                    src: '2360:5:5',
                                    typeDescriptions: {
                                      typeIdentifier: 't_type$_t_enum$_Pools_$861_$',
                                      typeString: 'type(enum BraqToken.Pools)',
                                    },
                                  },
                                  id: 1110,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  lValueRequested: false,
                                  memberLocation: '2366:10:5',
                                  memberName: 'Incentives',
                                  nodeType: 'MemberAccess',
                                  referencedDeclaration: 856,
                                  src: '2360:16:5',
                                  typeDescriptions: {
                                    typeIdentifier: 't_enum$_Pools_$861',
                                    typeString: 'enum BraqToken.Pools',
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: 'IndexAccess',
                                src: '2354:23:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_struct$_Pool_$853_storage',
                                  typeString: 'struct BraqToken.Pool storage ref',
                                },
                              },
                              id: 1112,
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: '2378:12:5',
                              memberName: 'amountToFund',
                              nodeType: 'MemberAccess',
                              referencedDeclaration: 850,
                              src: '2354:36:5',
                              typeDescriptions: {
                                typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                                typeString: 'mapping(uint8 => uint256)',
                              },
                            },
                            id: 1114,
                            indexExpression: {
                              id: 1113,
                              name: 'i',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 1099,
                              src: '2391:1:5',
                              typeDescriptions: {
                                typeIdentifier: 't_uint8',
                                typeString: 'uint8',
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: true,
                            nodeType: 'IndexAccess',
                            src: '2354:39:5',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          nodeType: 'Assignment',
                          operator: '=',
                          rightHandSide: {
                            hexValue: '34363837353030',
                            id: 1115,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: 'number',
                            lValueRequested: false,
                            nodeType: 'Literal',
                            src: '2396:7:5',
                            typeDescriptions: {
                              typeIdentifier: 't_rational_4687500_by_1',
                              typeString: 'int_const 4687500',
                            },
                            value: '4687500',
                          },
                          src: '2354:49:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        id: 1117,
                        nodeType: 'ExpressionStatement',
                        src: '2354:49:5',
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint8',
                      typeString: 'uint8',
                    },
                    id: 1104,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 1102,
                      name: 'i',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 1099,
                      src: '2332:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint8',
                        typeString: 'uint8',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      hexValue: '37',
                      id: 1103,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '2336:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_7_by_1',
                        typeString: 'int_const 7',
                      },
                      value: '7',
                    },
                    src: '2332:5:5',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 1119,
                  initializationExpression: {
                    assignments: [1099],
                    declarations: [
                      {
                        constant: false,
                        id: 1099,
                        mutability: 'mutable',
                        name: 'i',
                        nameLocation: '2325:1:5',
                        nodeType: 'VariableDeclaration',
                        scope: 1119,
                        src: '2319:7:5',
                        stateVariable: false,
                        storageLocation: 'default',
                        typeDescriptions: {
                          typeIdentifier: 't_uint8',
                          typeString: 'uint8',
                        },
                        typeName: {
                          id: 1098,
                          name: 'uint8',
                          nodeType: 'ElementaryTypeName',
                          src: '2319:5:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint8',
                            typeString: 'uint8',
                          },
                        },
                        visibility: 'internal',
                      },
                    ],
                    id: 1101,
                    initialValue: {
                      hexValue: '33',
                      id: 1100,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '2329:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_3_by_1',
                        typeString: 'int_const 3',
                      },
                      value: '3',
                    },
                    nodeType: 'VariableDeclarationStatement',
                    src: '2319:11:5',
                  },
                  loopExpression: {
                    expression: {
                      id: 1106,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: 'UnaryOperation',
                      operator: '++',
                      prefix: false,
                      src: '2339:3:5',
                      subExpression: {
                        id: 1105,
                        name: 'i',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 1099,
                        src: '2339:1:5',
                        typeDescriptions: {
                          typeIdentifier: 't_uint8',
                          typeString: 'uint8',
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: 't_uint8',
                        typeString: 'uint8',
                      },
                    },
                    id: 1107,
                    nodeType: 'ExpressionStatement',
                    src: '2339:3:5',
                  },
                  nodeType: 'ForStatement',
                  src: '2314:100:5',
                },
                {
                  body: {
                    id: 1144,
                    nodeType: 'Block',
                    src: '2498:72:5',
                    statements: [
                      {
                        expression: {
                          id: 1142,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            baseExpression: {
                              expression: {
                                baseExpression: {
                                  id: 1130,
                                  name: 'pools',
                                  nodeType: 'Identifier',
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 867,
                                  src: '2508:5:5',
                                  typeDescriptions: {
                                    typeIdentifier:
                                      't_mapping$_t_enum$_Pools_$861_$_t_struct$_Pool_$853_storage_$',
                                    typeString:
                                      'mapping(enum BraqToken.Pools => struct BraqToken.Pool storage ref)',
                                  },
                                },
                                id: 1133,
                                indexExpression: {
                                  expression: {
                                    id: 1131,
                                    name: 'Pools',
                                    nodeType: 'Identifier',
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 861,
                                    src: '2514:5:5',
                                    typeDescriptions: {
                                      typeIdentifier: 't_type$_t_enum$_Pools_$861_$',
                                      typeString: 'type(enum BraqToken.Pools)',
                                    },
                                  },
                                  id: 1132,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  lValueRequested: false,
                                  memberLocation: '2520:8:5',
                                  memberName: 'Listings',
                                  nodeType: 'MemberAccess',
                                  referencedDeclaration: 857,
                                  src: '2514:14:5',
                                  typeDescriptions: {
                                    typeIdentifier: 't_enum$_Pools_$861',
                                    typeString: 'enum BraqToken.Pools',
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: 'IndexAccess',
                                src: '2508:21:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_struct$_Pool_$853_storage',
                                  typeString: 'struct BraqToken.Pool storage ref',
                                },
                              },
                              id: 1134,
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: '2530:12:5',
                              memberName: 'amountToFund',
                              nodeType: 'MemberAccess',
                              referencedDeclaration: 850,
                              src: '2508:34:5',
                              typeDescriptions: {
                                typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                                typeString: 'mapping(uint8 => uint256)',
                              },
                            },
                            id: 1136,
                            indexExpression: {
                              id: 1135,
                              name: 'i',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 1121,
                              src: '2543:1:5',
                              typeDescriptions: {
                                typeIdentifier: 't_uint8',
                                typeString: 'uint8',
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: true,
                            nodeType: 'IndexAccess',
                            src: '2508:37:5',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          nodeType: 'Assignment',
                          operator: '=',
                          rightHandSide: {
                            commonType: {
                              typeIdentifier: 't_rational_5000000_by_1',
                              typeString: 'int_const 5000000',
                            },
                            id: 1141,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            leftExpression: {
                              hexValue: '35',
                              id: 1137,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: 'number',
                              lValueRequested: false,
                              nodeType: 'Literal',
                              src: '2548:1:5',
                              typeDescriptions: {
                                typeIdentifier: 't_rational_5_by_1',
                                typeString: 'int_const 5',
                              },
                              value: '5',
                            },
                            nodeType: 'BinaryOperation',
                            operator: '*',
                            rightExpression: {
                              commonType: {
                                typeIdentifier: 't_rational_1000000_by_1',
                                typeString: 'int_const 1000000',
                              },
                              id: 1140,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              leftExpression: {
                                hexValue: '3130',
                                id: 1138,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: 'number',
                                lValueRequested: false,
                                nodeType: 'Literal',
                                src: '2552:2:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_rational_10_by_1',
                                  typeString: 'int_const 10',
                                },
                                value: '10',
                              },
                              nodeType: 'BinaryOperation',
                              operator: '**',
                              rightExpression: {
                                hexValue: '36',
                                id: 1139,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: 'number',
                                lValueRequested: false,
                                nodeType: 'Literal',
                                src: '2558:1:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_rational_6_by_1',
                                  typeString: 'int_const 6',
                                },
                                value: '6',
                              },
                              src: '2552:7:5',
                              typeDescriptions: {
                                typeIdentifier: 't_rational_1000000_by_1',
                                typeString: 'int_const 1000000',
                              },
                            },
                            src: '2548:11:5',
                            typeDescriptions: {
                              typeIdentifier: 't_rational_5000000_by_1',
                              typeString: 'int_const 5000000',
                            },
                          },
                          src: '2508:51:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        id: 1143,
                        nodeType: 'ExpressionStatement',
                        src: '2508:51:5',
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint8',
                      typeString: 'uint8',
                    },
                    id: 1126,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 1124,
                      name: 'i',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 1121,
                      src: '2486:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint8',
                        typeString: 'uint8',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      hexValue: '35',
                      id: 1125,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '2490:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_5_by_1',
                        typeString: 'int_const 5',
                      },
                      value: '5',
                    },
                    src: '2486:5:5',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 1145,
                  initializationExpression: {
                    assignments: [1121],
                    declarations: [
                      {
                        constant: false,
                        id: 1121,
                        mutability: 'mutable',
                        name: 'i',
                        nameLocation: '2479:1:5',
                        nodeType: 'VariableDeclaration',
                        scope: 1145,
                        src: '2473:7:5',
                        stateVariable: false,
                        storageLocation: 'default',
                        typeDescriptions: {
                          typeIdentifier: 't_uint8',
                          typeString: 'uint8',
                        },
                        typeName: {
                          id: 1120,
                          name: 'uint8',
                          nodeType: 'ElementaryTypeName',
                          src: '2473:5:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint8',
                            typeString: 'uint8',
                          },
                        },
                        visibility: 'internal',
                      },
                    ],
                    id: 1123,
                    initialValue: {
                      hexValue: '31',
                      id: 1122,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '2483:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_1_by_1',
                        typeString: 'int_const 1',
                      },
                      value: '1',
                    },
                    nodeType: 'VariableDeclarationStatement',
                    src: '2473:11:5',
                  },
                  loopExpression: {
                    expression: {
                      id: 1128,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: 'UnaryOperation',
                      operator: '++',
                      prefix: false,
                      src: '2493:3:5',
                      subExpression: {
                        id: 1127,
                        name: 'i',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 1121,
                        src: '2493:1:5',
                        typeDescriptions: {
                          typeIdentifier: 't_uint8',
                          typeString: 'uint8',
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: 't_uint8',
                        typeString: 'uint8',
                      },
                    },
                    id: 1129,
                    nodeType: 'ExpressionStatement',
                    src: '2493:3:5',
                  },
                  nodeType: 'ForStatement',
                  src: '2468:102:5',
                },
                {
                  body: {
                    id: 1166,
                    nodeType: 'Block',
                    src: '2628:67:5',
                    statements: [
                      {
                        expression: {
                          id: 1164,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            baseExpression: {
                              expression: {
                                baseExpression: {
                                  id: 1156,
                                  name: 'pools',
                                  nodeType: 'Identifier',
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 867,
                                  src: '2638:5:5',
                                  typeDescriptions: {
                                    typeIdentifier:
                                      't_mapping$_t_enum$_Pools_$861_$_t_struct$_Pool_$853_storage_$',
                                    typeString:
                                      'mapping(enum BraqToken.Pools => struct BraqToken.Pool storage ref)',
                                  },
                                },
                                id: 1159,
                                indexExpression: {
                                  expression: {
                                    id: 1157,
                                    name: 'Pools',
                                    nodeType: 'Identifier',
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 861,
                                    src: '2644:5:5',
                                    typeDescriptions: {
                                      typeIdentifier: 't_type$_t_enum$_Pools_$861_$',
                                      typeString: 'type(enum BraqToken.Pools)',
                                    },
                                  },
                                  id: 1158,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  lValueRequested: false,
                                  memberLocation: '2650:7:5',
                                  memberName: 'Private',
                                  nodeType: 'MemberAccess',
                                  referencedDeclaration: 858,
                                  src: '2644:13:5',
                                  typeDescriptions: {
                                    typeIdentifier: 't_enum$_Pools_$861',
                                    typeString: 'enum BraqToken.Pools',
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: 'IndexAccess',
                                src: '2638:20:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_struct$_Pool_$853_storage',
                                  typeString: 'struct BraqToken.Pool storage ref',
                                },
                              },
                              id: 1160,
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: '2659:12:5',
                              memberName: 'amountToFund',
                              nodeType: 'MemberAccess',
                              referencedDeclaration: 850,
                              src: '2638:33:5',
                              typeDescriptions: {
                                typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                                typeString: 'mapping(uint8 => uint256)',
                              },
                            },
                            id: 1162,
                            indexExpression: {
                              id: 1161,
                              name: 'i',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 1147,
                              src: '2672:1:5',
                              typeDescriptions: {
                                typeIdentifier: 't_uint8',
                                typeString: 'uint8',
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: true,
                            nodeType: 'IndexAccess',
                            src: '2638:36:5',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          nodeType: 'Assignment',
                          operator: '=',
                          rightHandSide: {
                            hexValue: '34363837353030',
                            id: 1163,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: 'number',
                            lValueRequested: false,
                            nodeType: 'Literal',
                            src: '2677:7:5',
                            typeDescriptions: {
                              typeIdentifier: 't_rational_4687500_by_1',
                              typeString: 'int_const 4687500',
                            },
                            value: '4687500',
                          },
                          src: '2638:46:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        id: 1165,
                        nodeType: 'ExpressionStatement',
                        src: '2638:46:5',
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint8',
                      typeString: 'uint8',
                    },
                    id: 1152,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 1150,
                      name: 'i',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 1147,
                      src: '2616:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint8',
                        typeString: 'uint8',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      hexValue: '39',
                      id: 1151,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '2620:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_9_by_1',
                        typeString: 'int_const 9',
                      },
                      value: '9',
                    },
                    src: '2616:5:5',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 1167,
                  initializationExpression: {
                    assignments: [1147],
                    declarations: [
                      {
                        constant: false,
                        id: 1147,
                        mutability: 'mutable',
                        name: 'i',
                        nameLocation: '2609:1:5',
                        nodeType: 'VariableDeclaration',
                        scope: 1167,
                        src: '2603:7:5',
                        stateVariable: false,
                        storageLocation: 'default',
                        typeDescriptions: {
                          typeIdentifier: 't_uint8',
                          typeString: 'uint8',
                        },
                        typeName: {
                          id: 1146,
                          name: 'uint8',
                          nodeType: 'ElementaryTypeName',
                          src: '2603:5:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint8',
                            typeString: 'uint8',
                          },
                        },
                        visibility: 'internal',
                      },
                    ],
                    id: 1149,
                    initialValue: {
                      hexValue: '35',
                      id: 1148,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '2613:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_5_by_1',
                        typeString: 'int_const 5',
                      },
                      value: '5',
                    },
                    nodeType: 'VariableDeclarationStatement',
                    src: '2603:11:5',
                  },
                  loopExpression: {
                    expression: {
                      id: 1154,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: 'UnaryOperation',
                      operator: '++',
                      prefix: false,
                      src: '2623:3:5',
                      subExpression: {
                        id: 1153,
                        name: 'i',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 1147,
                        src: '2623:1:5',
                        typeDescriptions: {
                          typeIdentifier: 't_uint8',
                          typeString: 'uint8',
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: 't_uint8',
                        typeString: 'uint8',
                      },
                    },
                    id: 1155,
                    nodeType: 'ExpressionStatement',
                    src: '2623:3:5',
                  },
                  nodeType: 'ForStatement',
                  src: '2598:97:5',
                },
                {
                  body: {
                    id: 1192,
                    nodeType: 'Block',
                    src: '2752:69:5',
                    statements: [
                      {
                        expression: {
                          id: 1190,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            baseExpression: {
                              expression: {
                                baseExpression: {
                                  id: 1178,
                                  name: 'pools',
                                  nodeType: 'Identifier',
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 867,
                                  src: '2762:5:5',
                                  typeDescriptions: {
                                    typeIdentifier:
                                      't_mapping$_t_enum$_Pools_$861_$_t_struct$_Pool_$853_storage_$',
                                    typeString:
                                      'mapping(enum BraqToken.Pools => struct BraqToken.Pool storage ref)',
                                  },
                                },
                                id: 1181,
                                indexExpression: {
                                  expression: {
                                    id: 1179,
                                    name: 'Pools',
                                    nodeType: 'Identifier',
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 861,
                                    src: '2768:5:5',
                                    typeDescriptions: {
                                      typeIdentifier: 't_type$_t_enum$_Pools_$861_$',
                                      typeString: 'type(enum BraqToken.Pools)',
                                    },
                                  },
                                  id: 1180,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  lValueRequested: false,
                                  memberLocation: '2774:4:5',
                                  memberName: 'Team',
                                  nodeType: 'MemberAccess',
                                  referencedDeclaration: 859,
                                  src: '2768:10:5',
                                  typeDescriptions: {
                                    typeIdentifier: 't_enum$_Pools_$861',
                                    typeString: 'enum BraqToken.Pools',
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: 'IndexAccess',
                                src: '2762:17:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_struct$_Pool_$853_storage',
                                  typeString: 'struct BraqToken.Pool storage ref',
                                },
                              },
                              id: 1182,
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: '2780:12:5',
                              memberName: 'amountToFund',
                              nodeType: 'MemberAccess',
                              referencedDeclaration: 850,
                              src: '2762:30:5',
                              typeDescriptions: {
                                typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                                typeString: 'mapping(uint8 => uint256)',
                              },
                            },
                            id: 1184,
                            indexExpression: {
                              id: 1183,
                              name: 'i',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 1169,
                              src: '2793:1:5',
                              typeDescriptions: {
                                typeIdentifier: 't_uint8',
                                typeString: 'uint8',
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: true,
                            nodeType: 'IndexAccess',
                            src: '2762:33:5',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          nodeType: 'Assignment',
                          operator: '=',
                          rightHandSide: {
                            commonType: {
                              typeIdentifier: 't_rational_750000_by_1',
                              typeString: 'int_const 750000',
                            },
                            id: 1189,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            leftExpression: {
                              hexValue: '3735',
                              id: 1185,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: 'number',
                              lValueRequested: false,
                              nodeType: 'Literal',
                              src: '2798:2:5',
                              typeDescriptions: {
                                typeIdentifier: 't_rational_75_by_1',
                                typeString: 'int_const 75',
                              },
                              value: '75',
                            },
                            nodeType: 'BinaryOperation',
                            operator: '*',
                            rightExpression: {
                              commonType: {
                                typeIdentifier: 't_rational_10000_by_1',
                                typeString: 'int_const 10000',
                              },
                              id: 1188,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              leftExpression: {
                                hexValue: '3130',
                                id: 1186,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: 'number',
                                lValueRequested: false,
                                nodeType: 'Literal',
                                src: '2803:2:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_rational_10_by_1',
                                  typeString: 'int_const 10',
                                },
                                value: '10',
                              },
                              nodeType: 'BinaryOperation',
                              operator: '**',
                              rightExpression: {
                                hexValue: '34',
                                id: 1187,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: 'number',
                                lValueRequested: false,
                                nodeType: 'Literal',
                                src: '2809:1:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_rational_4_by_1',
                                  typeString: 'int_const 4',
                                },
                                value: '4',
                              },
                              src: '2803:7:5',
                              typeDescriptions: {
                                typeIdentifier: 't_rational_10000_by_1',
                                typeString: 'int_const 10000',
                              },
                            },
                            src: '2798:12:5',
                            typeDescriptions: {
                              typeIdentifier: 't_rational_750000_by_1',
                              typeString: 'int_const 750000',
                            },
                          },
                          src: '2762:48:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        id: 1191,
                        nodeType: 'ExpressionStatement',
                        src: '2762:48:5',
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint8',
                      typeString: 'uint8',
                    },
                    id: 1174,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 1172,
                      name: 'i',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 1169,
                      src: '2739:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint8',
                        typeString: 'uint8',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      hexValue: '3132',
                      id: 1173,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '2743:2:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_12_by_1',
                        typeString: 'int_const 12',
                      },
                      value: '12',
                    },
                    src: '2739:6:5',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 1193,
                  initializationExpression: {
                    assignments: [1169],
                    declarations: [
                      {
                        constant: false,
                        id: 1169,
                        mutability: 'mutable',
                        name: 'i',
                        nameLocation: '2732:1:5',
                        nodeType: 'VariableDeclaration',
                        scope: 1193,
                        src: '2726:7:5',
                        stateVariable: false,
                        storageLocation: 'default',
                        typeDescriptions: {
                          typeIdentifier: 't_uint8',
                          typeString: 'uint8',
                        },
                        typeName: {
                          id: 1168,
                          name: 'uint8',
                          nodeType: 'ElementaryTypeName',
                          src: '2726:5:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint8',
                            typeString: 'uint8',
                          },
                        },
                        visibility: 'internal',
                      },
                    ],
                    id: 1171,
                    initialValue: {
                      hexValue: '32',
                      id: 1170,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '2736:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_2_by_1',
                        typeString: 'int_const 2',
                      },
                      value: '2',
                    },
                    nodeType: 'VariableDeclarationStatement',
                    src: '2726:11:5',
                  },
                  loopExpression: {
                    expression: {
                      id: 1176,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: 'UnaryOperation',
                      operator: '++',
                      prefix: false,
                      src: '2747:3:5',
                      subExpression: {
                        id: 1175,
                        name: 'i',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 1169,
                        src: '2747:1:5',
                        typeDescriptions: {
                          typeIdentifier: 't_uint8',
                          typeString: 'uint8',
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: 't_uint8',
                        typeString: 'uint8',
                      },
                    },
                    id: 1177,
                    nodeType: 'ExpressionStatement',
                    src: '2747:3:5',
                  },
                  nodeType: 'ForStatement',
                  src: '2721:100:5',
                },
                {
                  body: {
                    id: 1214,
                    nodeType: 'Block',
                    src: '2907:68:5',
                    statements: [
                      {
                        expression: {
                          id: 1212,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            baseExpression: {
                              expression: {
                                baseExpression: {
                                  id: 1204,
                                  name: 'pools',
                                  nodeType: 'Identifier',
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 867,
                                  src: '2917:5:5',
                                  typeDescriptions: {
                                    typeIdentifier:
                                      't_mapping$_t_enum$_Pools_$861_$_t_struct$_Pool_$853_storage_$',
                                    typeString:
                                      'mapping(enum BraqToken.Pools => struct BraqToken.Pool storage ref)',
                                  },
                                },
                                id: 1207,
                                indexExpression: {
                                  expression: {
                                    id: 1205,
                                    name: 'Pools',
                                    nodeType: 'Identifier',
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 861,
                                    src: '2923:5:5',
                                    typeDescriptions: {
                                      typeIdentifier: 't_type$_t_enum$_Pools_$861_$',
                                      typeString: 'type(enum BraqToken.Pools)',
                                    },
                                  },
                                  id: 1206,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  lValueRequested: false,
                                  memberLocation: '2929:9:5',
                                  memberName: 'Marketing',
                                  nodeType: 'MemberAccess',
                                  referencedDeclaration: 860,
                                  src: '2923:15:5',
                                  typeDescriptions: {
                                    typeIdentifier: 't_enum$_Pools_$861',
                                    typeString: 'enum BraqToken.Pools',
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: 'IndexAccess',
                                src: '2917:22:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_struct$_Pool_$853_storage',
                                  typeString: 'struct BraqToken.Pool storage ref',
                                },
                              },
                              id: 1208,
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: '2940:12:5',
                              memberName: 'amountToFund',
                              nodeType: 'MemberAccess',
                              referencedDeclaration: 850,
                              src: '2917:35:5',
                              typeDescriptions: {
                                typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                                typeString: 'mapping(uint8 => uint256)',
                              },
                            },
                            id: 1210,
                            indexExpression: {
                              id: 1209,
                              name: 'i',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 1195,
                              src: '2953:1:5',
                              typeDescriptions: {
                                typeIdentifier: 't_uint8',
                                typeString: 'uint8',
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: true,
                            nodeType: 'IndexAccess',
                            src: '2917:38:5',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          nodeType: 'Assignment',
                          operator: '=',
                          rightHandSide: {
                            hexValue: '393337353030',
                            id: 1211,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: 'number',
                            lValueRequested: false,
                            nodeType: 'Literal',
                            src: '2958:6:5',
                            typeDescriptions: {
                              typeIdentifier: 't_rational_937500_by_1',
                              typeString: 'int_const 937500',
                            },
                            value: '937500',
                          },
                          src: '2917:47:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        id: 1213,
                        nodeType: 'ExpressionStatement',
                        src: '2917:47:5',
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint8',
                      typeString: 'uint8',
                    },
                    id: 1200,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 1198,
                      name: 'i',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 1195,
                      src: '2895:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint8',
                        typeString: 'uint8',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      hexValue: '35',
                      id: 1199,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '2899:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_5_by_1',
                        typeString: 'int_const 5',
                      },
                      value: '5',
                    },
                    src: '2895:5:5',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 1215,
                  initializationExpression: {
                    assignments: [1195],
                    declarations: [
                      {
                        constant: false,
                        id: 1195,
                        mutability: 'mutable',
                        name: 'i',
                        nameLocation: '2888:1:5',
                        nodeType: 'VariableDeclaration',
                        scope: 1215,
                        src: '2882:7:5',
                        stateVariable: false,
                        storageLocation: 'default',
                        typeDescriptions: {
                          typeIdentifier: 't_uint8',
                          typeString: 'uint8',
                        },
                        typeName: {
                          id: 1194,
                          name: 'uint8',
                          nodeType: 'ElementaryTypeName',
                          src: '2882:5:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint8',
                            typeString: 'uint8',
                          },
                        },
                        visibility: 'internal',
                      },
                    ],
                    id: 1197,
                    initialValue: {
                      hexValue: '32',
                      id: 1196,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '2892:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_2_by_1',
                        typeString: 'int_const 2',
                      },
                      value: '2',
                    },
                    nodeType: 'VariableDeclarationStatement',
                    src: '2882:11:5',
                  },
                  loopExpression: {
                    expression: {
                      id: 1202,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: 'UnaryOperation',
                      operator: '++',
                      prefix: false,
                      src: '2902:3:5',
                      subExpression: {
                        id: 1201,
                        name: 'i',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 1195,
                        src: '2902:1:5',
                        typeDescriptions: {
                          typeIdentifier: 't_uint8',
                          typeString: 'uint8',
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: 't_uint8',
                        typeString: 'uint8',
                      },
                    },
                    id: 1203,
                    nodeType: 'ExpressionStatement',
                    src: '2902:3:5',
                  },
                  nodeType: 'ForStatement',
                  src: '2877:98:5',
                },
                {
                  expression: {
                    id: 1224,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        expression: {
                          baseExpression: {
                            id: 1216,
                            name: 'pools',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 867,
                            src: '2984:5:5',
                            typeDescriptions: {
                              typeIdentifier:
                                't_mapping$_t_enum$_Pools_$861_$_t_struct$_Pool_$853_storage_$',
                              typeString:
                                'mapping(enum BraqToken.Pools => struct BraqToken.Pool storage ref)',
                            },
                          },
                          id: 1219,
                          indexExpression: {
                            expression: {
                              id: 1217,
                              name: 'Pools',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 861,
                              src: '2990:5:5',
                              typeDescriptions: {
                                typeIdentifier: 't_type$_t_enum$_Pools_$861_$',
                                typeString: 'type(enum BraqToken.Pools)',
                              },
                            },
                            id: 1218,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            memberLocation: '2996:9:5',
                            memberName: 'Marketing',
                            nodeType: 'MemberAccess',
                            referencedDeclaration: 860,
                            src: '2990:15:5',
                            typeDescriptions: {
                              typeIdentifier: 't_enum$_Pools_$861',
                              typeString: 'enum BraqToken.Pools',
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: 'IndexAccess',
                          src: '2984:22:5',
                          typeDescriptions: {
                            typeIdentifier: 't_struct$_Pool_$853_storage',
                            typeString: 'struct BraqToken.Pool storage ref',
                          },
                        },
                        id: 1220,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '3007:12:5',
                        memberName: 'amountToFund',
                        nodeType: 'MemberAccess',
                        referencedDeclaration: 850,
                        src: '2984:35:5',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                          typeString: 'mapping(uint8 => uint256)',
                        },
                      },
                      id: 1222,
                      indexExpression: {
                        hexValue: '35',
                        id: 1221,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '3020:1:5',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_5_by_1',
                          typeString: 'int_const 5',
                        },
                        value: '5',
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '2984:38:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      hexValue: '363235303030',
                      id: 1223,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '3025:6:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_625000_by_1',
                        typeString: 'int_const 625000',
                      },
                      value: '625000',
                    },
                    src: '2984:47:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 1225,
                  nodeType: 'ExpressionStatement',
                  src: '2984:47:5',
                },
              ],
            },
            id: 1227,
            implemented: true,
            kind: 'constructor',
            modifiers: [
              {
                arguments: [
                  {
                    hexValue: '42726171',
                    id: 886,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: 'string',
                    lValueRequested: false,
                    nodeType: 'Literal',
                    src: '969:6:5',
                    typeDescriptions: {
                      typeIdentifier:
                        't_stringliteral_34aae1aa2a8879affffeb817b72f9922d48bd3ccc2b5cfb0bf4c71637f6dc6e5',
                      typeString: 'literal_string "Braq"',
                    },
                    value: 'Braq',
                  },
                  {
                    hexValue: '425251',
                    id: 887,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: 'string',
                    lValueRequested: false,
                    nodeType: 'Literal',
                    src: '977:5:5',
                    typeDescriptions: {
                      typeIdentifier:
                        't_stringliteral_d40113d16145eec7e257b862066430852d949fadb1f32a3690248a2de0005257',
                      typeString: 'literal_string "BRQ"',
                    },
                    value: 'BRQ',
                  },
                ],
                id: 888,
                kind: 'baseConstructorSpecifier',
                modifierName: {
                  id: 885,
                  name: 'ERC20',
                  nameLocations: ['963:5:5'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 699,
                  src: '963:5:5',
                },
                nodeType: 'ModifierInvocation',
                src: '963:20:5',
              },
            ],
            name: '',
            nameLocation: '-1:-1:-1',
            nodeType: 'FunctionDefinition',
            parameters: {
              id: 884,
              nodeType: 'ParameterList',
              parameters: [],
              src: '960:2:5',
            },
            returnParameters: {
              id: 889,
              nodeType: 'ParameterList',
              parameters: [],
              src: '984:0:5',
            },
            scope: 1519,
            src: '949:2089:5',
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'public',
          },
          {
            body: {
              id: 1256,
              nodeType: 'Block',
              src: '3121:150:5',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                        id: 1242,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 1237,
                          name: '_to',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 1229,
                          src: '3164:3:5',
                          typeDescriptions: {
                            typeIdentifier: 't_address',
                            typeString: 'address',
                          },
                        },
                        nodeType: 'BinaryOperation',
                        operator: '!=',
                        rightExpression: {
                          arguments: [
                            {
                              hexValue: '30',
                              id: 1240,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: 'number',
                              lValueRequested: false,
                              nodeType: 'Literal',
                              src: '3179:1:5',
                              typeDescriptions: {
                                typeIdentifier: 't_rational_0_by_1',
                                typeString: 'int_const 0',
                              },
                              value: '0',
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: 't_rational_0_by_1',
                                typeString: 'int_const 0',
                              },
                            ],
                            id: 1239,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: 'ElementaryTypeNameExpression',
                            src: '3171:7:5',
                            typeDescriptions: {
                              typeIdentifier: 't_type$_t_address_$',
                              typeString: 'type(address)',
                            },
                            typeName: {
                              id: 1238,
                              name: 'address',
                              nodeType: 'ElementaryTypeName',
                              src: '3171:7:5',
                              typeDescriptions: {},
                            },
                          },
                          id: 1241,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: 'typeConversion',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '3171:10:5',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_address',
                            typeString: 'address',
                          },
                        },
                        src: '3164:17:5',
                        typeDescriptions: {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                      },
                      {
                        hexValue: '4572726f723a20496e7365727420612076616c69642061646472657373',
                        id: 1243,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'string',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '3183:31:5',
                        typeDescriptions: {
                          typeIdentifier:
                            't_stringliteral_8f0cfd8cd2fcca001b9ad444ba4e3773eb28dd21c64c137b7634bfdf918b0d52',
                          typeString: 'literal_string "Error: Insert a valid address"',
                        },
                        value: 'Error: Insert a valid address',
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                        {
                          typeIdentifier:
                            't_stringliteral_8f0cfd8cd2fcca001b9ad444ba4e3773eb28dd21c64c137b7634bfdf918b0d52',
                          typeString: 'literal_string "Error: Insert a valid address"',
                        },
                      ],
                      id: 1236,
                      name: 'require',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: '3156:7:5',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$',
                        typeString: 'function (bool,string memory) pure',
                      },
                    },
                    id: 1244,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '3156:59:5',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 1245,
                  nodeType: 'ExpressionStatement',
                  src: '3156:59:5',
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 1247,
                        name: '_to',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 1229,
                        src: '3232:3:5',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                      },
                      {
                        commonType: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        id: 1253,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 1248,
                          name: '_amount',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 1231,
                          src: '3237:7:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        nodeType: 'BinaryOperation',
                        operator: '*',
                        rightExpression: {
                          commonType: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                          id: 1252,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            hexValue: '3130',
                            id: 1249,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: 'number',
                            lValueRequested: false,
                            nodeType: 'Literal',
                            src: '3247:2:5',
                            typeDescriptions: {
                              typeIdentifier: 't_rational_10_by_1',
                              typeString: 'int_const 10',
                            },
                            value: '10',
                          },
                          nodeType: 'BinaryOperation',
                          operator: '**',
                          rightExpression: {
                            arguments: [],
                            expression: {
                              argumentTypes: [],
                              id: 1250,
                              name: 'decimals',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 187,
                              src: '3253:8:5',
                              typeDescriptions: {
                                typeIdentifier: 't_function_internal_view$__$returns$_t_uint8_$',
                                typeString: 'function () view returns (uint8)',
                              },
                            },
                            id: 1251,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: 'functionCall',
                            lValueRequested: false,
                            nameLocations: [],
                            names: [],
                            nodeType: 'FunctionCall',
                            src: '3253:10:5',
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: 't_uint8',
                              typeString: 'uint8',
                            },
                          },
                          src: '3247:16:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        src: '3237:26:5',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 1246,
                      name: '_mint',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 516,
                      src: '3226:5:5',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$',
                        typeString: 'function (address,uint256)',
                      },
                    },
                    id: 1254,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '3226:38:5',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 1255,
                  nodeType: 'ExpressionStatement',
                  src: '3226:38:5',
                },
              ],
            },
            functionSelector: '40c10f19',
            id: 1257,
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 1234,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 1233,
                  name: 'onlyOwner',
                  nameLocations: ['3111:9:5'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 31,
                  src: '3111:9:5',
                },
                nodeType: 'ModifierInvocation',
                src: '3111:9:5',
              },
            ],
            name: 'mint',
            nameLocation: '3053:4:5',
            nodeType: 'FunctionDefinition',
            parameters: {
              id: 1232,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 1229,
                  mutability: 'mutable',
                  name: '_to',
                  nameLocation: '3071:3:5',
                  nodeType: 'VariableDeclaration',
                  scope: 1257,
                  src: '3063:11:5',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 1228,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '3063:7:5',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 1231,
                  mutability: 'mutable',
                  name: '_amount',
                  nameLocation: '3088:7:5',
                  nodeType: 'VariableDeclaration',
                  scope: 1257,
                  src: '3080:15:5',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 1230,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '3080:7:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '3057:44:5',
            },
            returnParameters: {
              id: 1235,
              nodeType: 'ParameterList',
              parameters: [],
              src: '3121:0:5',
            },
            scope: 1519,
            src: '3044:227:5',
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            body: {
              id: 1280,
              nodeType: 'Block',
              src: '3362:110:5',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                        id: 1270,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 1265,
                          name: '_admin',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 1259,
                          src: '3380:6:5',
                          typeDescriptions: {
                            typeIdentifier: 't_address',
                            typeString: 'address',
                          },
                        },
                        nodeType: 'BinaryOperation',
                        operator: '!=',
                        rightExpression: {
                          arguments: [
                            {
                              hexValue: '30',
                              id: 1268,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: 'number',
                              lValueRequested: false,
                              nodeType: 'Literal',
                              src: '3398:1:5',
                              typeDescriptions: {
                                typeIdentifier: 't_rational_0_by_1',
                                typeString: 'int_const 0',
                              },
                              value: '0',
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: 't_rational_0_by_1',
                                typeString: 'int_const 0',
                              },
                            ],
                            id: 1267,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: 'ElementaryTypeNameExpression',
                            src: '3390:7:5',
                            typeDescriptions: {
                              typeIdentifier: 't_type$_t_address_$',
                              typeString: 'type(address)',
                            },
                            typeName: {
                              id: 1266,
                              name: 'address',
                              nodeType: 'ElementaryTypeName',
                              src: '3390:7:5',
                              typeDescriptions: {},
                            },
                          },
                          id: 1269,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: 'typeConversion',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '3390:10:5',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_address',
                            typeString: 'address',
                          },
                        },
                        src: '3380:20:5',
                        typeDescriptions: {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                      },
                      {
                        hexValue: '4572726f723a20496e7365727420612076616c69642061646472657373',
                        id: 1271,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'string',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '3402:31:5',
                        typeDescriptions: {
                          typeIdentifier:
                            't_stringliteral_8f0cfd8cd2fcca001b9ad444ba4e3773eb28dd21c64c137b7634bfdf918b0d52',
                          typeString: 'literal_string "Error: Insert a valid address"',
                        },
                        value: 'Error: Insert a valid address',
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                        {
                          typeIdentifier:
                            't_stringliteral_8f0cfd8cd2fcca001b9ad444ba4e3773eb28dd21c64c137b7634bfdf918b0d52',
                          typeString: 'literal_string "Error: Insert a valid address"',
                        },
                      ],
                      id: 1264,
                      name: 'require',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: '3372:7:5',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$',
                        typeString: 'function (bool,string memory) pure',
                      },
                    },
                    id: 1272,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '3372:62:5',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 1273,
                  nodeType: 'ExpressionStatement',
                  src: '3372:62:5',
                },
                {
                  expression: {
                    id: 1278,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 1274,
                        name: 'admins',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 842,
                        src: '3444:6:5',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_address_$_t_bool_$',
                          typeString: 'mapping(address => bool)',
                        },
                      },
                      id: 1276,
                      indexExpression: {
                        id: 1275,
                        name: '_admin',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 1259,
                        src: '3451:6:5',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '3444:14:5',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      hexValue: '74727565',
                      id: 1277,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'bool',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '3461:4:5',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                      value: 'true',
                    },
                    src: '3444:21:5',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 1279,
                  nodeType: 'ExpressionStatement',
                  src: '3444:21:5',
                },
              ],
            },
            functionSelector: '70480275',
            id: 1281,
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 1262,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 1261,
                  name: 'onlyAdmin',
                  nameLocations: ['3352:9:5'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 883,
                  src: '3352:9:5',
                },
                nodeType: 'ModifierInvocation',
                src: '3352:9:5',
              },
            ],
            name: 'addAdmin',
            nameLocation: '3318:8:5',
            nodeType: 'FunctionDefinition',
            parameters: {
              id: 1260,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 1259,
                  mutability: 'mutable',
                  name: '_admin',
                  nameLocation: '3335:6:5',
                  nodeType: 'VariableDeclaration',
                  scope: 1281,
                  src: '3327:14:5',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 1258,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '3327:7:5',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '3326:16:5',
            },
            returnParameters: {
              id: 1263,
              nodeType: 'ParameterList',
              parameters: [],
              src: '3362:0:5',
            },
            scope: 1519,
            src: '3309:163:5',
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            body: {
              id: 1294,
              nodeType: 'Block',
              src: '3569:39:5',
              statements: [
                {
                  expression: {
                    id: 1292,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 1288,
                        name: 'admins',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 842,
                        src: '3579:6:5',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_address_$_t_bool_$',
                          typeString: 'mapping(address => bool)',
                        },
                      },
                      id: 1290,
                      indexExpression: {
                        id: 1289,
                        name: '_admin',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 1283,
                        src: '3586:6:5',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '3579:14:5',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      hexValue: '66616c7365',
                      id: 1291,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'bool',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '3596:5:5',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                      value: 'false',
                    },
                    src: '3579:22:5',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 1293,
                  nodeType: 'ExpressionStatement',
                  src: '3579:22:5',
                },
              ],
            },
            functionSelector: '1785f53c',
            id: 1295,
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 1286,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 1285,
                  name: 'onlyAdmin',
                  nameLocations: ['3559:9:5'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 883,
                  src: '3559:9:5',
                },
                nodeType: 'ModifierInvocation',
                src: '3559:9:5',
              },
            ],
            name: 'removeAdmin',
            nameLocation: '3522:11:5',
            nodeType: 'FunctionDefinition',
            parameters: {
              id: 1284,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 1283,
                  mutability: 'mutable',
                  name: '_admin',
                  nameLocation: '3542:6:5',
                  nodeType: 'VariableDeclaration',
                  scope: 1295,
                  src: '3534:14:5',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 1282,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '3534:7:5',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '3533:16:5',
            },
            returnParameters: {
              id: 1287,
              nodeType: 'ParameterList',
              parameters: [],
              src: '3569:0:5',
            },
            scope: 1519,
            src: '3513:95:5',
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            body: {
              id: 1322,
              nodeType: 'Block',
              src: '3715:126:5',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                        id: 1311,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 1306,
                          name: '_address',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 1300,
                          src: '3733:8:5',
                          typeDescriptions: {
                            typeIdentifier: 't_address',
                            typeString: 'address',
                          },
                        },
                        nodeType: 'BinaryOperation',
                        operator: '!=',
                        rightExpression: {
                          arguments: [
                            {
                              hexValue: '30',
                              id: 1309,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: 'number',
                              lValueRequested: false,
                              nodeType: 'Literal',
                              src: '3753:1:5',
                              typeDescriptions: {
                                typeIdentifier: 't_rational_0_by_1',
                                typeString: 'int_const 0',
                              },
                              value: '0',
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: 't_rational_0_by_1',
                                typeString: 'int_const 0',
                              },
                            ],
                            id: 1308,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: 'ElementaryTypeNameExpression',
                            src: '3745:7:5',
                            typeDescriptions: {
                              typeIdentifier: 't_type$_t_address_$',
                              typeString: 'type(address)',
                            },
                            typeName: {
                              id: 1307,
                              name: 'address',
                              nodeType: 'ElementaryTypeName',
                              src: '3745:7:5',
                              typeDescriptions: {},
                            },
                          },
                          id: 1310,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: 'typeConversion',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '3745:10:5',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_address',
                            typeString: 'address',
                          },
                        },
                        src: '3733:22:5',
                        typeDescriptions: {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                      },
                      {
                        hexValue: '4572726f723a20496e7365727420612076616c69642061646472657373',
                        id: 1312,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'string',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '3757:31:5',
                        typeDescriptions: {
                          typeIdentifier:
                            't_stringliteral_8f0cfd8cd2fcca001b9ad444ba4e3773eb28dd21c64c137b7634bfdf918b0d52',
                          typeString: 'literal_string "Error: Insert a valid address"',
                        },
                        value: 'Error: Insert a valid address',
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                        {
                          typeIdentifier:
                            't_stringliteral_8f0cfd8cd2fcca001b9ad444ba4e3773eb28dd21c64c137b7634bfdf918b0d52',
                          typeString: 'literal_string "Error: Insert a valid address"',
                        },
                      ],
                      id: 1305,
                      name: 'require',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: '3725:7:5',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$',
                        typeString: 'function (bool,string memory) pure',
                      },
                    },
                    id: 1313,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '3725:64:5',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 1314,
                  nodeType: 'ExpressionStatement',
                  src: '3725:64:5',
                },
                {
                  expression: {
                    id: 1320,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 1315,
                          name: 'pools',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 867,
                          src: '3799:5:5',
                          typeDescriptions: {
                            typeIdentifier:
                              't_mapping$_t_enum$_Pools_$861_$_t_struct$_Pool_$853_storage_$',
                            typeString:
                              'mapping(enum BraqToken.Pools => struct BraqToken.Pool storage ref)',
                          },
                        },
                        id: 1317,
                        indexExpression: {
                          id: 1316,
                          name: '_pool',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 1298,
                          src: '3805:5:5',
                          typeDescriptions: {
                            typeIdentifier: 't_enum$_Pools_$861',
                            typeString: 'enum BraqToken.Pools',
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: 'IndexAccess',
                        src: '3799:12:5',
                        typeDescriptions: {
                          typeIdentifier: 't_struct$_Pool_$853_storage',
                          typeString: 'struct BraqToken.Pool storage ref',
                        },
                      },
                      id: 1318,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberLocation: '3812:11:5',
                      memberName: 'poolAddress',
                      nodeType: 'MemberAccess',
                      referencedDeclaration: 852,
                      src: '3799:24:5',
                      typeDescriptions: {
                        typeIdentifier: 't_address',
                        typeString: 'address',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 1319,
                      name: '_address',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 1300,
                      src: '3826:8:5',
                      typeDescriptions: {
                        typeIdentifier: 't_address',
                        typeString: 'address',
                      },
                    },
                    src: '3799:35:5',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  id: 1321,
                  nodeType: 'ExpressionStatement',
                  src: '3799:35:5',
                },
              ],
            },
            functionSelector: 'be1e35f9',
            id: 1323,
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 1303,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 1302,
                  name: 'onlyAdmin',
                  nameLocations: ['3705:9:5'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 883,
                  src: '3705:9:5',
                },
                nodeType: 'ModifierInvocation',
                src: '3705:9:5',
              },
            ],
            name: 'setPoolAddress',
            nameLocation: '3623:14:5',
            nodeType: 'FunctionDefinition',
            parameters: {
              id: 1301,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 1298,
                  mutability: 'mutable',
                  name: '_pool',
                  nameLocation: '3653:5:5',
                  nodeType: 'VariableDeclaration',
                  scope: 1323,
                  src: '3647:11:5',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_enum$_Pools_$861',
                    typeString: 'enum BraqToken.Pools',
                  },
                  typeName: {
                    id: 1297,
                    nodeType: 'UserDefinedTypeName',
                    pathNode: {
                      id: 1296,
                      name: 'Pools',
                      nameLocations: ['3647:5:5'],
                      nodeType: 'IdentifierPath',
                      referencedDeclaration: 861,
                      src: '3647:5:5',
                    },
                    referencedDeclaration: 861,
                    src: '3647:5:5',
                    typeDescriptions: {
                      typeIdentifier: 't_enum$_Pools_$861',
                      typeString: 'enum BraqToken.Pools',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 1300,
                  mutability: 'mutable',
                  name: '_address',
                  nameLocation: '3677:8:5',
                  nodeType: 'VariableDeclaration',
                  scope: 1323,
                  src: '3669:16:5',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 1299,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '3669:7:5',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '3637:58:5',
            },
            returnParameters: {
              id: 1304,
              nodeType: 'ParameterList',
              parameters: [],
              src: '3715:0:5',
            },
            scope: 1519,
            src: '3614:227:5',
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            body: {
              id: 1336,
              nodeType: 'Block',
              src: '3916:48:5',
              statements: [
                {
                  expression: {
                    expression: {
                      baseExpression: {
                        id: 1331,
                        name: 'pools',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 867,
                        src: '3933:5:5',
                        typeDescriptions: {
                          typeIdentifier:
                            't_mapping$_t_enum$_Pools_$861_$_t_struct$_Pool_$853_storage_$',
                          typeString:
                            'mapping(enum BraqToken.Pools => struct BraqToken.Pool storage ref)',
                        },
                      },
                      id: 1333,
                      indexExpression: {
                        id: 1332,
                        name: '_pool',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 1326,
                        src: '3939:5:5',
                        typeDescriptions: {
                          typeIdentifier: 't_enum$_Pools_$861',
                          typeString: 'enum BraqToken.Pools',
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: 'IndexAccess',
                      src: '3933:12:5',
                      typeDescriptions: {
                        typeIdentifier: 't_struct$_Pool_$853_storage',
                        typeString: 'struct BraqToken.Pool storage ref',
                      },
                    },
                    id: 1334,
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    memberLocation: '3946:11:5',
                    memberName: 'poolAddress',
                    nodeType: 'MemberAccess',
                    referencedDeclaration: 852,
                    src: '3933:24:5',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  functionReturnParameters: 1330,
                  id: 1335,
                  nodeType: 'Return',
                  src: '3926:31:5',
                },
              ],
            },
            functionSelector: '68934c38',
            id: 1337,
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: 'getPoolAddress',
            nameLocation: '3856:14:5',
            nodeType: 'FunctionDefinition',
            parameters: {
              id: 1327,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 1326,
                  mutability: 'mutable',
                  name: '_pool',
                  nameLocation: '3877:5:5',
                  nodeType: 'VariableDeclaration',
                  scope: 1337,
                  src: '3871:11:5',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_enum$_Pools_$861',
                    typeString: 'enum BraqToken.Pools',
                  },
                  typeName: {
                    id: 1325,
                    nodeType: 'UserDefinedTypeName',
                    pathNode: {
                      id: 1324,
                      name: 'Pools',
                      nameLocations: ['3871:5:5'],
                      nodeType: 'IdentifierPath',
                      referencedDeclaration: 861,
                      src: '3871:5:5',
                    },
                    referencedDeclaration: 861,
                    src: '3871:5:5',
                    typeDescriptions: {
                      typeIdentifier: 't_enum$_Pools_$861',
                      typeString: 'enum BraqToken.Pools',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '3870:13:5',
            },
            returnParameters: {
              id: 1330,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 1329,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 1337,
                  src: '3907:7:5',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 1328,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '3907:7:5',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '3906:9:5',
            },
            scope: 1519,
            src: '3847:117:5',
            stateMutability: 'view',
            virtual: false,
            visibility: 'external',
          },
          {
            body: {
              id: 1354,
              nodeType: 'Block',
              src: '4076:57:5',
              statements: [
                {
                  expression: {
                    baseExpression: {
                      expression: {
                        baseExpression: {
                          id: 1347,
                          name: 'pools',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 867,
                          src: '4093:5:5',
                          typeDescriptions: {
                            typeIdentifier:
                              't_mapping$_t_enum$_Pools_$861_$_t_struct$_Pool_$853_storage_$',
                            typeString:
                              'mapping(enum BraqToken.Pools => struct BraqToken.Pool storage ref)',
                          },
                        },
                        id: 1349,
                        indexExpression: {
                          id: 1348,
                          name: 'pool',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 1340,
                          src: '4099:4:5',
                          typeDescriptions: {
                            typeIdentifier: 't_enum$_Pools_$861',
                            typeString: 'enum BraqToken.Pools',
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: 'IndexAccess',
                        src: '4093:11:5',
                        typeDescriptions: {
                          typeIdentifier: 't_struct$_Pool_$853_storage',
                          typeString: 'struct BraqToken.Pool storage ref',
                        },
                      },
                      id: 1350,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '4105:12:5',
                      memberName: 'amountToFund',
                      nodeType: 'MemberAccess',
                      referencedDeclaration: 850,
                      src: '4093:24:5',
                      typeDescriptions: {
                        typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                        typeString: 'mapping(uint8 => uint256)',
                      },
                    },
                    id: 1352,
                    indexExpression: {
                      id: 1351,
                      name: 'quarter',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 1342,
                      src: '4118:7:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint8',
                        typeString: 'uint8',
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: 'IndexAccess',
                    src: '4093:33:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  functionReturnParameters: 1346,
                  id: 1353,
                  nodeType: 'Return',
                  src: '4086:40:5',
                },
              ],
            },
            functionSelector: '49412428',
            id: 1355,
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: 'getAmountToFund',
            nameLocation: '3979:15:5',
            nodeType: 'FunctionDefinition',
            parameters: {
              id: 1343,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 1340,
                  mutability: 'mutable',
                  name: 'pool',
                  nameLocation: '4010:4:5',
                  nodeType: 'VariableDeclaration',
                  scope: 1355,
                  src: '4004:10:5',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_enum$_Pools_$861',
                    typeString: 'enum BraqToken.Pools',
                  },
                  typeName: {
                    id: 1339,
                    nodeType: 'UserDefinedTypeName',
                    pathNode: {
                      id: 1338,
                      name: 'Pools',
                      nameLocations: ['4004:5:5'],
                      nodeType: 'IdentifierPath',
                      referencedDeclaration: 861,
                      src: '4004:5:5',
                    },
                    referencedDeclaration: 861,
                    src: '4004:5:5',
                    typeDescriptions: {
                      typeIdentifier: 't_enum$_Pools_$861',
                      typeString: 'enum BraqToken.Pools',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 1342,
                  mutability: 'mutable',
                  name: 'quarter',
                  nameLocation: '4030:7:5',
                  nodeType: 'VariableDeclaration',
                  scope: 1355,
                  src: '4024:13:5',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint8',
                    typeString: 'uint8',
                  },
                  typeName: {
                    id: 1341,
                    name: 'uint8',
                    nodeType: 'ElementaryTypeName',
                    src: '4024:5:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint8',
                      typeString: 'uint8',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '3994:49:5',
            },
            returnParameters: {
              id: 1346,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 1345,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 1355,
                  src: '4067:7:5',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 1344,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '4067:7:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '4066:9:5',
            },
            scope: 1519,
            src: '3970:163:5',
            stateMutability: 'view',
            virtual: false,
            visibility: 'external',
          },
          {
            body: {
              id: 1440,
              nodeType: 'Block',
              src: '4244:601:5',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                        id: 1372,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          commonType: {
                            typeIdentifier: 't_uint8',
                            typeString: 'uint8',
                          },
                          id: 1368,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 1366,
                            name: '_quarter',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 1360,
                            src: '4262:8:5',
                            typeDescriptions: {
                              typeIdentifier: 't_uint8',
                              typeString: 'uint8',
                            },
                          },
                          nodeType: 'BinaryOperation',
                          operator: '>',
                          rightExpression: {
                            hexValue: '30',
                            id: 1367,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: 'number',
                            lValueRequested: false,
                            nodeType: 'Literal',
                            src: '4273:1:5',
                            typeDescriptions: {
                              typeIdentifier: 't_rational_0_by_1',
                              typeString: 'int_const 0',
                            },
                            value: '0',
                          },
                          src: '4262:12:5',
                          typeDescriptions: {
                            typeIdentifier: 't_bool',
                            typeString: 'bool',
                          },
                        },
                        nodeType: 'BinaryOperation',
                        operator: '&&',
                        rightExpression: {
                          commonType: {
                            typeIdentifier: 't_uint8',
                            typeString: 'uint8',
                          },
                          id: 1371,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 1369,
                            name: '_quarter',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 1360,
                            src: '4278:8:5',
                            typeDescriptions: {
                              typeIdentifier: 't_uint8',
                              typeString: 'uint8',
                            },
                          },
                          nodeType: 'BinaryOperation',
                          operator: '<',
                          rightExpression: {
                            hexValue: '3137',
                            id: 1370,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: 'number',
                            lValueRequested: false,
                            nodeType: 'Literal',
                            src: '4289:2:5',
                            typeDescriptions: {
                              typeIdentifier: 't_rational_17_by_1',
                              typeString: 'int_const 17',
                            },
                            value: '17',
                          },
                          src: '4278:13:5',
                          typeDescriptions: {
                            typeIdentifier: 't_bool',
                            typeString: 'bool',
                          },
                        },
                        src: '4262:29:5',
                        typeDescriptions: {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                      },
                      {
                        hexValue: '57726f6e6720717561727465722076616c7565',
                        id: 1373,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'string',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '4293:21:5',
                        typeDescriptions: {
                          typeIdentifier:
                            't_stringliteral_c77d3b8ea0c01711d5459e0ce6670d5e66167523171300239843fc7ff0b63925',
                          typeString: 'literal_string "Wrong quarter value"',
                        },
                        value: 'Wrong quarter value',
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                        {
                          typeIdentifier:
                            't_stringliteral_c77d3b8ea0c01711d5459e0ce6670d5e66167523171300239843fc7ff0b63925',
                          typeString: 'literal_string "Wrong quarter value"',
                        },
                      ],
                      id: 1365,
                      name: 'require',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: '4254:7:5',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$',
                        typeString: 'function (bool,string memory) pure',
                      },
                    },
                    id: 1374,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '4254:61:5',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 1375,
                  nodeType: 'ExpressionStatement',
                  src: '4254:61:5',
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 1381,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 1376,
                        name: 'block',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 4294967292,
                        src: '4329:5:5',
                        typeDescriptions: {
                          typeIdentifier: 't_magic_block',
                          typeString: 'block',
                        },
                      },
                      id: 1377,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '4335:9:5',
                      memberName: 'timestamp',
                      nodeType: 'MemberAccess',
                      src: '4329:15:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      baseExpression: {
                        id: 1378,
                        name: 'fundingTime',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 871,
                        src: '4347:11:5',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                          typeString: 'mapping(uint8 => uint256)',
                        },
                      },
                      id: 1380,
                      indexExpression: {
                        id: 1379,
                        name: '_quarter',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 1360,
                        src: '4359:8:5',
                        typeDescriptions: {
                          typeIdentifier: 't_uint8',
                          typeString: 'uint8',
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: 'IndexAccess',
                      src: '4347:21:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '4329:39:5',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 1387,
                  nodeType: 'IfStatement',
                  src: '4325:96:5',
                  trueBody: {
                    id: 1386,
                    nodeType: 'Block',
                    src: '4370:51:5',
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              hexValue: '4572726f723a20546f6f206561726c79',
                              id: 1383,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: 'string',
                              lValueRequested: false,
                              nodeType: 'Literal',
                              src: '4391:18:5',
                              typeDescriptions: {
                                typeIdentifier:
                                  't_stringliteral_5464526ec0704ec6b9cefd949942cd2bbfd1e4db9db52460069a56f4be8bda77',
                                typeString: 'literal_string "Error: Too early"',
                              },
                              value: 'Error: Too early',
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier:
                                  't_stringliteral_5464526ec0704ec6b9cefd949942cd2bbfd1e4db9db52460069a56f4be8bda77',
                                typeString: 'literal_string "Error: Too early"',
                              },
                            ],
                            id: 1382,
                            name: 'revert',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [4294967277, 4294967277],
                            referencedDeclaration: 4294967277,
                            src: '4384:6:5',
                            typeDescriptions: {
                              typeIdentifier:
                                't_function_revert_pure$_t_string_memory_ptr_$returns$__$',
                              typeString: 'function (string memory) pure',
                            },
                          },
                          id: 1384,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: 'functionCall',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '4384:26:5',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_tuple$__$',
                            typeString: 'tuple()',
                          },
                        },
                        id: 1385,
                        nodeType: 'ExpressionStatement',
                        src: '4384:26:5',
                      },
                    ],
                  },
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                        id: 1396,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          baseExpression: {
                            expression: {
                              baseExpression: {
                                id: 1389,
                                name: 'pools',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: 867,
                                src: '4451:5:5',
                                typeDescriptions: {
                                  typeIdentifier:
                                    't_mapping$_t_enum$_Pools_$861_$_t_struct$_Pool_$853_storage_$',
                                  typeString:
                                    'mapping(enum BraqToken.Pools => struct BraqToken.Pool storage ref)',
                                },
                              },
                              id: 1391,
                              indexExpression: {
                                id: 1390,
                                name: '_pool',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: 1358,
                                src: '4457:5:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_enum$_Pools_$861',
                                  typeString: 'enum BraqToken.Pools',
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: 'IndexAccess',
                              src: '4451:12:5',
                              typeDescriptions: {
                                typeIdentifier: 't_struct$_Pool_$853_storage',
                                typeString: 'struct BraqToken.Pool storage ref',
                              },
                            },
                            id: 1392,
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            memberLocation: '4464:6:5',
                            memberName: 'funded',
                            nodeType: 'MemberAccess',
                            referencedDeclaration: 846,
                            src: '4451:19:5',
                            typeDescriptions: {
                              typeIdentifier: 't_mapping$_t_uint8_$_t_bool_$',
                              typeString: 'mapping(uint8 => bool)',
                            },
                          },
                          id: 1394,
                          indexExpression: {
                            id: 1393,
                            name: '_quarter',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 1360,
                            src: '4471:8:5',
                            typeDescriptions: {
                              typeIdentifier: 't_uint8',
                              typeString: 'uint8',
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: 'IndexAccess',
                          src: '4451:29:5',
                          typeDescriptions: {
                            typeIdentifier: 't_bool',
                            typeString: 'bool',
                          },
                        },
                        nodeType: 'BinaryOperation',
                        operator: '==',
                        rightExpression: {
                          hexValue: '66616c7365',
                          id: 1395,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: 'bool',
                          lValueRequested: false,
                          nodeType: 'Literal',
                          src: '4484:5:5',
                          typeDescriptions: {
                            typeIdentifier: 't_bool',
                            typeString: 'bool',
                          },
                          value: 'false',
                        },
                        src: '4451:38:5',
                        typeDescriptions: {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                      },
                      {
                        hexValue: '457272726f723a20416c72656164792066756e646564',
                        id: 1397,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'string',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '4503:24:5',
                        typeDescriptions: {
                          typeIdentifier:
                            't_stringliteral_36ea2bb795312ab83ff321f78b7e5f1d318c82acdadce977f53048753d716e9c',
                          typeString: 'literal_string "Errror: Already funded"',
                        },
                        value: 'Errror: Already funded',
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                        {
                          typeIdentifier:
                            't_stringliteral_36ea2bb795312ab83ff321f78b7e5f1d318c82acdadce977f53048753d716e9c',
                          typeString: 'literal_string "Errror: Already funded"',
                        },
                      ],
                      id: 1388,
                      name: 'require',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: '4430:7:5',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$',
                        typeString: 'function (bool,string memory) pure',
                      },
                    },
                    id: 1398,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '4430:107:5',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 1399,
                  nodeType: 'ExpressionStatement',
                  src: '4430:107:5',
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                        id: 1409,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          expression: {
                            baseExpression: {
                              id: 1401,
                              name: 'pools',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 867,
                              src: '4568:5:5',
                              typeDescriptions: {
                                typeIdentifier:
                                  't_mapping$_t_enum$_Pools_$861_$_t_struct$_Pool_$853_storage_$',
                                typeString:
                                  'mapping(enum BraqToken.Pools => struct BraqToken.Pool storage ref)',
                              },
                            },
                            id: 1403,
                            indexExpression: {
                              id: 1402,
                              name: '_pool',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 1358,
                              src: '4574:5:5',
                              typeDescriptions: {
                                typeIdentifier: 't_enum$_Pools_$861',
                                typeString: 'enum BraqToken.Pools',
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: 'IndexAccess',
                            src: '4568:12:5',
                            typeDescriptions: {
                              typeIdentifier: 't_struct$_Pool_$853_storage',
                              typeString: 'struct BraqToken.Pool storage ref',
                            },
                          },
                          id: 1404,
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          memberLocation: '4581:11:5',
                          memberName: 'poolAddress',
                          nodeType: 'MemberAccess',
                          referencedDeclaration: 852,
                          src: '4568:24:5',
                          typeDescriptions: {
                            typeIdentifier: 't_address',
                            typeString: 'address',
                          },
                        },
                        nodeType: 'BinaryOperation',
                        operator: '!=',
                        rightExpression: {
                          arguments: [
                            {
                              hexValue: '30',
                              id: 1407,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: 'number',
                              lValueRequested: false,
                              nodeType: 'Literal',
                              src: '4604:1:5',
                              typeDescriptions: {
                                typeIdentifier: 't_rational_0_by_1',
                                typeString: 'int_const 0',
                              },
                              value: '0',
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: 't_rational_0_by_1',
                                typeString: 'int_const 0',
                              },
                            ],
                            id: 1406,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: 'ElementaryTypeNameExpression',
                            src: '4596:7:5',
                            typeDescriptions: {
                              typeIdentifier: 't_type$_t_address_$',
                              typeString: 'type(address)',
                            },
                            typeName: {
                              id: 1405,
                              name: 'address',
                              nodeType: 'ElementaryTypeName',
                              src: '4596:7:5',
                              typeDescriptions: {},
                            },
                          },
                          id: 1408,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: 'typeConversion',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '4596:10:5',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_address',
                            typeString: 'address',
                          },
                        },
                        src: '4568:38:5',
                        typeDescriptions: {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                      },
                      {
                        hexValue: '457272726f723a20506f6f6c206e6f7420696e697469616c69736564',
                        id: 1410,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'string',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '4620:30:5',
                        typeDescriptions: {
                          typeIdentifier:
                            't_stringliteral_fbe7dc8cb6967492f3774ced390347af24ac362c6fe000589004d0e76dec16da',
                          typeString: 'literal_string "Errror: Pool not initialised"',
                        },
                        value: 'Errror: Pool not initialised',
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                        {
                          typeIdentifier:
                            't_stringliteral_fbe7dc8cb6967492f3774ced390347af24ac362c6fe000589004d0e76dec16da',
                          typeString: 'literal_string "Errror: Pool not initialised"',
                        },
                      ],
                      id: 1400,
                      name: 'require',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: '4547:7:5',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$',
                        typeString: 'function (bool,string memory) pure',
                      },
                    },
                    id: 1411,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '4547:113:5',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 1412,
                  nodeType: 'ExpressionStatement',
                  src: '4547:113:5',
                },
                {
                  expression: {
                    arguments: [
                      {
                        expression: {
                          baseExpression: {
                            id: 1414,
                            name: 'pools',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 867,
                            src: '4690:5:5',
                            typeDescriptions: {
                              typeIdentifier:
                                't_mapping$_t_enum$_Pools_$861_$_t_struct$_Pool_$853_storage_$',
                              typeString:
                                'mapping(enum BraqToken.Pools => struct BraqToken.Pool storage ref)',
                            },
                          },
                          id: 1416,
                          indexExpression: {
                            id: 1415,
                            name: '_pool',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 1358,
                            src: '4696:5:5',
                            typeDescriptions: {
                              typeIdentifier: 't_enum$_Pools_$861',
                              typeString: 'enum BraqToken.Pools',
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: 'IndexAccess',
                          src: '4690:12:5',
                          typeDescriptions: {
                            typeIdentifier: 't_struct$_Pool_$853_storage',
                            typeString: 'struct BraqToken.Pool storage ref',
                          },
                        },
                        id: 1417,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '4703:11:5',
                        memberName: 'poolAddress',
                        nodeType: 'MemberAccess',
                        referencedDeclaration: 852,
                        src: '4690:24:5',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                      },
                      {
                        commonType: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        id: 1428,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          baseExpression: {
                            expression: {
                              baseExpression: {
                                id: 1418,
                                name: 'pools',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: 867,
                                src: '4728:5:5',
                                typeDescriptions: {
                                  typeIdentifier:
                                    't_mapping$_t_enum$_Pools_$861_$_t_struct$_Pool_$853_storage_$',
                                  typeString:
                                    'mapping(enum BraqToken.Pools => struct BraqToken.Pool storage ref)',
                                },
                              },
                              id: 1420,
                              indexExpression: {
                                id: 1419,
                                name: '_pool',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: 1358,
                                src: '4734:5:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_enum$_Pools_$861',
                                  typeString: 'enum BraqToken.Pools',
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: 'IndexAccess',
                              src: '4728:12:5',
                              typeDescriptions: {
                                typeIdentifier: 't_struct$_Pool_$853_storage',
                                typeString: 'struct BraqToken.Pool storage ref',
                              },
                            },
                            id: 1421,
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            memberLocation: '4741:12:5',
                            memberName: 'amountToFund',
                            nodeType: 'MemberAccess',
                            referencedDeclaration: 850,
                            src: '4728:25:5',
                            typeDescriptions: {
                              typeIdentifier: 't_mapping$_t_uint8_$_t_uint256_$',
                              typeString: 'mapping(uint8 => uint256)',
                            },
                          },
                          id: 1423,
                          indexExpression: {
                            id: 1422,
                            name: '_quarter',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 1360,
                            src: '4754:8:5',
                            typeDescriptions: {
                              typeIdentifier: 't_uint8',
                              typeString: 'uint8',
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: 'IndexAccess',
                          src: '4728:35:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        nodeType: 'BinaryOperation',
                        operator: '*',
                        rightExpression: {
                          commonType: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                          id: 1427,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            hexValue: '3130',
                            id: 1424,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: 'number',
                            lValueRequested: false,
                            nodeType: 'Literal',
                            src: '4766:2:5',
                            typeDescriptions: {
                              typeIdentifier: 't_rational_10_by_1',
                              typeString: 'int_const 10',
                            },
                            value: '10',
                          },
                          nodeType: 'BinaryOperation',
                          operator: '**',
                          rightExpression: {
                            arguments: [],
                            expression: {
                              argumentTypes: [],
                              id: 1425,
                              name: 'decimals',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 187,
                              src: '4772:8:5',
                              typeDescriptions: {
                                typeIdentifier: 't_function_internal_view$__$returns$_t_uint8_$',
                                typeString: 'function () view returns (uint8)',
                              },
                            },
                            id: 1426,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: 'functionCall',
                            lValueRequested: false,
                            nameLocations: [],
                            names: [],
                            nodeType: 'FunctionCall',
                            src: '4772:10:5',
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: 't_uint8',
                              typeString: 'uint8',
                            },
                          },
                          src: '4766:16:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        src: '4728:54:5',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 1413,
                      name: '_mint',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 516,
                      src: '4671:5:5',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$',
                        typeString: 'function (address,uint256)',
                      },
                    },
                    id: 1429,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '4671:121:5',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 1430,
                  nodeType: 'ExpressionStatement',
                  src: '4671:121:5',
                },
                {
                  expression: {
                    id: 1438,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        expression: {
                          baseExpression: {
                            id: 1431,
                            name: 'pools',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 867,
                            src: '4802:5:5',
                            typeDescriptions: {
                              typeIdentifier:
                                't_mapping$_t_enum$_Pools_$861_$_t_struct$_Pool_$853_storage_$',
                              typeString:
                                'mapping(enum BraqToken.Pools => struct BraqToken.Pool storage ref)',
                            },
                          },
                          id: 1433,
                          indexExpression: {
                            id: 1432,
                            name: '_pool',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 1358,
                            src: '4808:5:5',
                            typeDescriptions: {
                              typeIdentifier: 't_enum$_Pools_$861',
                              typeString: 'enum BraqToken.Pools',
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: 'IndexAccess',
                          src: '4802:12:5',
                          typeDescriptions: {
                            typeIdentifier: 't_struct$_Pool_$853_storage',
                            typeString: 'struct BraqToken.Pool storage ref',
                          },
                        },
                        id: 1434,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '4815:6:5',
                        memberName: 'funded',
                        nodeType: 'MemberAccess',
                        referencedDeclaration: 846,
                        src: '4802:19:5',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_uint8_$_t_bool_$',
                          typeString: 'mapping(uint8 => bool)',
                        },
                      },
                      id: 1436,
                      indexExpression: {
                        id: 1435,
                        name: '_quarter',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 1360,
                        src: '4822:8:5',
                        typeDescriptions: {
                          typeIdentifier: 't_uint8',
                          typeString: 'uint8',
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '4802:29:5',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      hexValue: '74727565',
                      id: 1437,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'bool',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '4834:4:5',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                      value: 'true',
                    },
                    src: '4802:36:5',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 1439,
                  nodeType: 'ExpressionStatement',
                  src: '4802:36:5',
                },
              ],
            },
            functionSelector: '4d8f0704',
            id: 1441,
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 1363,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 1362,
                  name: 'onlyAdmin',
                  nameLocations: ['4234:9:5'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 883,
                  src: '4234:9:5',
                },
                nodeType: 'ModifierInvocation',
                src: '4234:9:5',
              },
            ],
            name: 'fundPool',
            nameLocation: '4187:8:5',
            nodeType: 'FunctionDefinition',
            parameters: {
              id: 1361,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 1358,
                  mutability: 'mutable',
                  name: '_pool',
                  nameLocation: '4202:5:5',
                  nodeType: 'VariableDeclaration',
                  scope: 1441,
                  src: '4196:11:5',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_enum$_Pools_$861',
                    typeString: 'enum BraqToken.Pools',
                  },
                  typeName: {
                    id: 1357,
                    nodeType: 'UserDefinedTypeName',
                    pathNode: {
                      id: 1356,
                      name: 'Pools',
                      nameLocations: ['4196:5:5'],
                      nodeType: 'IdentifierPath',
                      referencedDeclaration: 861,
                      src: '4196:5:5',
                    },
                    referencedDeclaration: 861,
                    src: '4196:5:5',
                    typeDescriptions: {
                      typeIdentifier: 't_enum$_Pools_$861',
                      typeString: 'enum BraqToken.Pools',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 1360,
                  mutability: 'mutable',
                  name: '_quarter',
                  nameLocation: '4215:8:5',
                  nodeType: 'VariableDeclaration',
                  scope: 1441,
                  src: '4209:14:5',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint8',
                    typeString: 'uint8',
                  },
                  typeName: {
                    id: 1359,
                    name: 'uint8',
                    nodeType: 'ElementaryTypeName',
                    src: '4209:5:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint8',
                      typeString: 'uint8',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '4195:29:5',
            },
            returnParameters: {
              id: 1364,
              nodeType: 'ParameterList',
              parameters: [],
              src: '4244:0:5',
            },
            scope: 1519,
            src: '4178:667:5',
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            body: {
              id: 1489,
              nodeType: 'Block',
              src: '4888:427:5',
              statements: [
                {
                  assignments: [1445],
                  declarations: [
                    {
                      constant: false,
                      id: 1445,
                      mutability: 'mutable',
                      name: 'BraqAmount',
                      nameLocation: '4958:10:5',
                      nodeType: 'VariableDeclaration',
                      scope: 1489,
                      src: '4950:18:5',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      typeName: {
                        id: 1444,
                        name: 'uint256',
                        nodeType: 'ElementaryTypeName',
                        src: '4950:7:5',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      visibility: 'internal',
                    },
                  ],
                  id: 1455,
                  initialValue: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 1454,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 1446,
                        name: 'msg',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 4294967281,
                        src: '4971:3:5',
                        typeDescriptions: {
                          typeIdentifier: 't_magic_message',
                          typeString: 'msg',
                        },
                      },
                      id: 1447,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '4975:5:5',
                      memberName: 'value',
                      nodeType: 'MemberAccess',
                      src: '4971:9:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '/',
                    rightExpression: {
                      components: [
                        {
                          commonType: {
                            typeIdentifier: 't_rational_50000000000000_by_1',
                            typeString: 'int_const 50000000000000',
                          },
                          id: 1452,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          leftExpression: {
                            hexValue: '35',
                            id: 1448,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: 'number',
                            lValueRequested: false,
                            nodeType: 'Literal',
                            src: '4984:1:5',
                            typeDescriptions: {
                              typeIdentifier: 't_rational_5_by_1',
                              typeString: 'int_const 5',
                            },
                            value: '5',
                          },
                          nodeType: 'BinaryOperation',
                          operator: '*',
                          rightExpression: {
                            commonType: {
                              typeIdentifier: 't_rational_10000000000000_by_1',
                              typeString: 'int_const 10000000000000',
                            },
                            id: 1451,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            leftExpression: {
                              hexValue: '3130',
                              id: 1449,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: 'number',
                              lValueRequested: false,
                              nodeType: 'Literal',
                              src: '4988:2:5',
                              typeDescriptions: {
                                typeIdentifier: 't_rational_10_by_1',
                                typeString: 'int_const 10',
                              },
                              value: '10',
                            },
                            nodeType: 'BinaryOperation',
                            operator: '**',
                            rightExpression: {
                              hexValue: '3133',
                              id: 1450,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: 'number',
                              lValueRequested: false,
                              nodeType: 'Literal',
                              src: '4994:2:5',
                              typeDescriptions: {
                                typeIdentifier: 't_rational_13_by_1',
                                typeString: 'int_const 13',
                              },
                              value: '13',
                            },
                            src: '4988:8:5',
                            typeDescriptions: {
                              typeIdentifier: 't_rational_10000000000000_by_1',
                              typeString: 'int_const 10000000000000',
                            },
                          },
                          src: '4984:12:5',
                          typeDescriptions: {
                            typeIdentifier: 't_rational_50000000000000_by_1',
                            typeString: 'int_const 50000000000000',
                          },
                        },
                      ],
                      id: 1453,
                      isConstant: false,
                      isInlineArray: false,
                      isLValue: false,
                      isPure: true,
                      lValueRequested: false,
                      nodeType: 'TupleExpression',
                      src: '4983:14:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_50000000000000_by_1',
                        typeString: 'int_const 50000000000000',
                      },
                    },
                    src: '4971:26:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '4950:47:5',
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 1458,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 1456,
                      name: 'BraqAmount',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 1445,
                      src: '5011:10:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      hexValue: '31',
                      id: 1457,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '5024:1:5',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_1_by_1',
                        typeString: 'int_const 1',
                      },
                      value: '1',
                    },
                    src: '5011:14:5',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 1464,
                  nodeType: 'IfStatement',
                  src: '5007:91:5',
                  trueBody: {
                    id: 1463,
                    nodeType: 'Block',
                    src: '5027:71:5',
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              hexValue:
                                '4572726f723a20546f6f20736d616c6c20616d6f756e7420666f72207075726368617365',
                              id: 1460,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: 'string',
                              lValueRequested: false,
                              nodeType: 'Literal',
                              src: '5048:38:5',
                              typeDescriptions: {
                                typeIdentifier:
                                  't_stringliteral_6d4b7b6ea91bf03c4485f47f306c833859d6464346b33323495200ab472d0f32',
                                typeString: 'literal_string "Error: Too small amount for purchase"',
                              },
                              value: 'Error: Too small amount for purchase',
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier:
                                  't_stringliteral_6d4b7b6ea91bf03c4485f47f306c833859d6464346b33323495200ab472d0f32',
                                typeString: 'literal_string "Error: Too small amount for purchase"',
                              },
                            ],
                            id: 1459,
                            name: 'revert',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [4294967277, 4294967277],
                            referencedDeclaration: 4294967277,
                            src: '5041:6:5',
                            typeDescriptions: {
                              typeIdentifier:
                                't_function_revert_pure$_t_string_memory_ptr_$returns$__$',
                              typeString: 'function (string memory) pure',
                            },
                          },
                          id: 1461,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: 'functionCall',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '5041:46:5',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_tuple$__$',
                            typeString: 'tuple()',
                          },
                        },
                        id: 1462,
                        nodeType: 'ExpressionStatement',
                        src: '5041:46:5',
                      },
                    ],
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 1467,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 1465,
                      name: 'BraqAmount',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 1445,
                      src: '5111:10:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '>',
                    rightExpression: {
                      id: 1466,
                      name: 'publicSaleSupply',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 838,
                      src: '5124:16:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '5111:29:5',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 1473,
                  nodeType: 'IfStatement',
                  src: '5107:104:5',
                  trueBody: {
                    id: 1472,
                    nodeType: 'Block',
                    src: '5142:69:5',
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              hexValue:
                                '4572726f723a20546f6f2062696720616d6f756e7420666f72207075726368617365',
                              id: 1469,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: 'string',
                              lValueRequested: false,
                              nodeType: 'Literal',
                              src: '5163:36:5',
                              typeDescriptions: {
                                typeIdentifier:
                                  't_stringliteral_4e88686c280eed3d76475d5d474311d14c5816ed524747dc2ba1bff433320f8d',
                                typeString: 'literal_string "Error: Too big amount for purchase"',
                              },
                              value: 'Error: Too big amount for purchase',
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier:
                                  't_stringliteral_4e88686c280eed3d76475d5d474311d14c5816ed524747dc2ba1bff433320f8d',
                                typeString: 'literal_string "Error: Too big amount for purchase"',
                              },
                            ],
                            id: 1468,
                            name: 'revert',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [4294967277, 4294967277],
                            referencedDeclaration: 4294967277,
                            src: '5156:6:5',
                            typeDescriptions: {
                              typeIdentifier:
                                't_function_revert_pure$_t_string_memory_ptr_$returns$__$',
                              typeString: 'function (string memory) pure',
                            },
                          },
                          id: 1470,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: 'functionCall',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '5156:44:5',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_tuple$__$',
                            typeString: 'tuple()',
                          },
                        },
                        id: 1471,
                        nodeType: 'ExpressionStatement',
                        src: '5156:44:5',
                      },
                    ],
                  },
                },
                {
                  expression: {
                    arguments: [
                      {
                        expression: {
                          id: 1475,
                          name: 'msg',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 4294967281,
                          src: '5226:3:5',
                          typeDescriptions: {
                            typeIdentifier: 't_magic_message',
                            typeString: 'msg',
                          },
                        },
                        id: 1476,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '5230:6:5',
                        memberName: 'sender',
                        nodeType: 'MemberAccess',
                        src: '5226:10:5',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                      },
                      {
                        commonType: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        id: 1482,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 1477,
                          name: 'BraqAmount',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 1445,
                          src: '5238:10:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        nodeType: 'BinaryOperation',
                        operator: '*',
                        rightExpression: {
                          commonType: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                          id: 1481,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            hexValue: '3130',
                            id: 1478,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: 'number',
                            lValueRequested: false,
                            nodeType: 'Literal',
                            src: '5251:2:5',
                            typeDescriptions: {
                              typeIdentifier: 't_rational_10_by_1',
                              typeString: 'int_const 10',
                            },
                            value: '10',
                          },
                          nodeType: 'BinaryOperation',
                          operator: '**',
                          rightExpression: {
                            arguments: [],
                            expression: {
                              argumentTypes: [],
                              id: 1479,
                              name: 'decimals',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 187,
                              src: '5257:8:5',
                              typeDescriptions: {
                                typeIdentifier: 't_function_internal_view$__$returns$_t_uint8_$',
                                typeString: 'function () view returns (uint8)',
                              },
                            },
                            id: 1480,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: 'functionCall',
                            lValueRequested: false,
                            nameLocations: [],
                            names: [],
                            nodeType: 'FunctionCall',
                            src: '5257:10:5',
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: 't_uint8',
                              typeString: 'uint8',
                            },
                          },
                          src: '5251:16:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        src: '5238:29:5',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 1474,
                      name: '_mint',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 516,
                      src: '5220:5:5',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$',
                        typeString: 'function (address,uint256)',
                      },
                    },
                    id: 1483,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '5220:48:5',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 1484,
                  nodeType: 'ExpressionStatement',
                  src: '5220:48:5',
                },
                {
                  expression: {
                    id: 1487,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 1485,
                      name: 'publicSaleSupply',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 838,
                      src: '5278:16:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '-=',
                    rightHandSide: {
                      id: 1486,
                      name: 'BraqAmount',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 1445,
                      src: '5298:10:5',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '5278:30:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 1488,
                  nodeType: 'ExpressionStatement',
                  src: '5278:30:5',
                },
              ],
            },
            functionSelector: '33bc1c5c',
            id: 1490,
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: 'publicSale',
            nameLocation: '4860:10:5',
            nodeType: 'FunctionDefinition',
            parameters: {
              id: 1442,
              nodeType: 'ParameterList',
              parameters: [],
              src: '4870:2:5',
            },
            returnParameters: {
              id: 1443,
              nodeType: 'ParameterList',
              parameters: [],
              src: '4888:0:5',
            },
            scope: 1519,
            src: '4851:464:5',
            stateMutability: 'payable',
            virtual: false,
            visibility: 'public',
          },
          {
            body: {
              id: 1517,
              nodeType: 'Block',
              src: '5379:191:5',
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        id: 1504,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          expression: {
                            arguments: [
                              {
                                id: 1500,
                                name: 'this',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: 4294967268,
                                src: '5422:4:5',
                                typeDescriptions: {
                                  typeIdentifier: 't_contract$_BraqToken_$1519',
                                  typeString: 'contract BraqToken',
                                },
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: 't_contract$_BraqToken_$1519',
                                  typeString: 'contract BraqToken',
                                },
                              ],
                              id: 1499,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: 'ElementaryTypeNameExpression',
                              src: '5414:7:5',
                              typeDescriptions: {
                                typeIdentifier: 't_type$_t_address_$',
                                typeString: 'type(address)',
                              },
                              typeName: {
                                id: 1498,
                                name: 'address',
                                nodeType: 'ElementaryTypeName',
                                src: '5414:7:5',
                                typeDescriptions: {},
                              },
                            },
                            id: 1501,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: 'typeConversion',
                            lValueRequested: false,
                            nameLocations: [],
                            names: [],
                            nodeType: 'FunctionCall',
                            src: '5414:13:5',
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: 't_address',
                              typeString: 'address',
                            },
                          },
                          id: 1502,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberLocation: '5428:7:5',
                          memberName: 'balance',
                          nodeType: 'MemberAccess',
                          src: '5414:21:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        nodeType: 'BinaryOperation',
                        operator: '>',
                        rightExpression: {
                          id: 1503,
                          name: 'amount',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 1492,
                          src: '5438:6:5',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        src: '5414:30:5',
                        typeDescriptions: {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                      },
                      {
                        hexValue: '496e73756666696369656e7420636f6e74726163742062616c616e6365',
                        id: 1505,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'string',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '5447:31:5',
                        typeDescriptions: {
                          typeIdentifier:
                            't_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749',
                          typeString: 'literal_string "Insufficient contract balance"',
                        },
                        value: 'Insufficient contract balance',
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                        {
                          typeIdentifier:
                            't_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749',
                          typeString: 'literal_string "Insufficient contract balance"',
                        },
                      ],
                      id: 1497,
                      name: 'require',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: '5406:7:5',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$',
                        typeString: 'function (bool,string memory) pure',
                      },
                    },
                    id: 1506,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '5406:73:5',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 1507,
                  nodeType: 'ExpressionStatement',
                  src: '5406:73:5',
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 1514,
                        name: 'amount',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 1492,
                        src: '5556:6:5',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      expression: {
                        arguments: [
                          {
                            expression: {
                              id: 1510,
                              name: 'msg',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 4294967281,
                              src: '5535:3:5',
                              typeDescriptions: {
                                typeIdentifier: 't_magic_message',
                                typeString: 'msg',
                              },
                            },
                            id: 1511,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberLocation: '5539:6:5',
                            memberName: 'sender',
                            nodeType: 'MemberAccess',
                            src: '5535:10:5',
                            typeDescriptions: {
                              typeIdentifier: 't_address',
                              typeString: 'address',
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: 't_address',
                              typeString: 'address',
                            },
                          ],
                          id: 1509,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: 'ElementaryTypeNameExpression',
                          src: '5527:8:5',
                          typeDescriptions: {
                            typeIdentifier: 't_type$_t_address_payable_$',
                            typeString: 'type(address payable)',
                          },
                          typeName: {
                            id: 1508,
                            name: 'address',
                            nodeType: 'ElementaryTypeName',
                            src: '5527:8:5',
                            stateMutability: 'payable',
                            typeDescriptions: {},
                          },
                        },
                        id: 1512,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: 'typeConversion',
                        lValueRequested: false,
                        nameLocations: [],
                        names: [],
                        nodeType: 'FunctionCall',
                        src: '5527:19:5',
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: 't_address_payable',
                          typeString: 'address payable',
                        },
                      },
                      id: 1513,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '5547:8:5',
                      memberName: 'transfer',
                      nodeType: 'MemberAccess',
                      src: '5527:28:5',
                      typeDescriptions: {
                        typeIdentifier: 't_function_transfer_nonpayable$_t_uint256_$returns$__$',
                        typeString: 'function (uint256)',
                      },
                    },
                    id: 1515,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '5527:36:5',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 1516,
                  nodeType: 'ExpressionStatement',
                  src: '5527:36:5',
                },
              ],
            },
            functionSelector: '2e1a7d4d',
            id: 1518,
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 1495,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 1494,
                  name: 'onlyAdmin',
                  nameLocations: ['5369:9:5'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 883,
                  src: '5369:9:5',
                },
                nodeType: 'ModifierInvocation',
                src: '5369:9:5',
              },
            ],
            name: 'withdraw',
            nameLocation: '5335:8:5',
            nodeType: 'FunctionDefinition',
            parameters: {
              id: 1493,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 1492,
                  mutability: 'mutable',
                  name: 'amount',
                  nameLocation: '5352:6:5',
                  nodeType: 'VariableDeclaration',
                  scope: 1518,
                  src: '5344:14:5',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 1491,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '5344:7:5',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '5343:16:5',
            },
            returnParameters: {
              id: 1496,
              nodeType: 'ParameterList',
              parameters: [],
              src: '5379:0:5',
            },
            scope: 1519,
            src: '5326:244:5',
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
        ],
        scope: 1520,
        src: '167:5405:5',
        usedErrors: [],
        usedEvents: [13, 711, 720],
      },
    ],
    src: '32:5541:5',
  },
  compiler: {
    name: 'solc',
    version: '0.8.20+commit.a1b79de6.Emscripten.clang',
  },
  networks: {
    11155111: {
      events: {},
      links: {},
      address: '0xEC5A0b7ce4608335aF82d18dE3166324EEfD9634',
      transactionHash: '0xe1727048bdeedfcb508867cabff5e83dce08693165c6b105ed9c92050bc39976',
    },
  },
  schemaVersion: '3.4.14',
  updatedAt: '2023-06-21T12:38:55.882Z',
  networkType: 'ethereum',
  devdoc: {
    events: {
      'Approval(address,address,uint256)': {
        details:
          'Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.',
      },
      'Transfer(address,address,uint256)': {
        details:
          'Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.',
      },
    },
    kind: 'dev',
    methods: {
      'allowance(address,address)': {
        details: 'See {IERC20-allowance}.',
      },
      'approve(address,uint256)': {
        details:
          'See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.',
      },
      'balanceOf(address)': {
        details: 'See {IERC20-balanceOf}.',
      },
      'decimals()': {
        details:
          "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.",
      },
      'decreaseAllowance(address,uint256)': {
        details:
          'Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.',
      },
      'increaseAllowance(address,uint256)': {
        details:
          'Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.',
      },
      'name()': {
        details: 'Returns the name of the token.',
      },
      'owner()': {
        details: 'Returns the address of the current owner.',
      },
      'renounceOwnership()': {
        details:
          'Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.',
      },
      'symbol()': {
        details: 'Returns the symbol of the token, usually a shorter version of the name.',
      },
      'totalSupply()': {
        details: 'See {IERC20-totalSupply}.',
      },
      'transfer(address,uint256)': {
        details:
          'See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.',
      },
      'transferFrom(address,address,uint256)': {
        details:
          "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.",
      },
      'transferOwnership(address)': {
        details:
          'Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.',
      },
    },
    version: 1,
  },
  userdoc: {
    kind: 'user',
    methods: {},
    version: 1,
  },
};
